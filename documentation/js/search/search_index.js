var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/ActionHandlerComponent.html",[0,0.068,1,0.561]],["body/components/ActionHandlerComponent.html",[0,0.114,1,0.995,2,1.216,3,0.177,4,0.155,5,0.785,6,0.824,7,0.824,8,0.824,9,0.155,10,5.93,11,4.833,12,3.689,13,2.158,14,2.187,15,0.785,16,1.452,17,1.451,18,1.301,19,5.606,20,1.079,21,6.251,22,1.079,23,5.606,24,0.155,25,0.454,26,6.883,27,0.42,28,2.82,29,6.632,30,0.597,31,4.282,32,6.632,33,3.123,34,2.97,35,3.812,36,0.346,37,5.606,38,0.454,39,0.018,40,0.359,41,0.292,42,0.454,43,3.937,44,4.282,45,3.632,46,5.385,47,4.657,48,3.632,49,5.606,50,5.606,51,0.355,52,0.714,53,4.282,54,0.796,55,4.282,56,5.606,57,5.108,58,5.606,59,3.738,60,4.83,61,3.937,62,4.83,63,1.04,64,6.359,65,5.606,66,3.16,67,0.609,68,0.577,69,0.361,70,0.321,71,2.14,72,2.023,73,0.993,74,0.177,75,0.01,76,1.203,77,4.282,78,1.82,79,6.251,80,4.282,81,3.689,82,3.689,83,4.282,84,4.282,85,3.689,86,4.282,87,1.04,88,4.282,89,3.689,90,4.282,91,6.251,92,5.606,93,4.282,94,3.937,95,3.16,96,4.83,97,4.319,98,4.282,99,2.414,100,4.282,101,2.774,102,3.689,103,3.689,104,3.632,105,3.937,106,5.606,107,5.606,108,4.282,109,0.993,110,0.993,111,1.088,112,0.949,113,1.491,114,1.191,115,1.191,116,0.748,117,1.079,118,1.028,119,0.677,120,1.276,121,0.824,122,0.824,123,0.677,124,1.028,125,0.842,126,1.079,127,0.677,128,0.824,129,0.677,130,0.674,131,0.677,132,0.824,133,0.677,134,0.748,135,0.824,136,0.712,137,1.079,138,0.677,139,0.824,140,0.677,141,0.609,142,0.824,143,0.677,144,0.785,145,0.824,146,0.642,147,1.079,148,0.677,149,1.079,150,0.677,151,0.785,152,0.824,153,0.677,154,0.824,155,1.079,156,0.677,157,0.824,158,0.677,159,0.824,160,0.677,161,0.824,162,0.677,163,0.824,164,0.642,165,0.824,166,0.712,167,0.824,168,0.712,169,0.755,170,0.824,171,0.677,172,0.824,173,0.677,174,0.824,175,0.824,176,0.677,177,0.824,178,0.677,179,0.824,180,0.642,181,0.748,182,0.712,183,0.824,184,0.677,185,0.824,186,0.677,187,0.824,188,0.642,189,0.824,190,0.677,191,0.824,192,0.677,193,0.824,194,0.677,195,0.824,196,0.785,197,0.642,198,0.785,199,0.824,200,0.013,201,0.013]],["title/injectables/ActiveSelectionService.html",[202,0.867,203,1.981]],["body/injectables/ActiveSelectionService.html",[3,0.218,4,0.19,9,0.19,24,0.19,25,0.517,27,0.479,36,0.382,38,0.426,39,0.018,40,0.274,41,0.321,42,0.426,51,0.435,52,0.67,54,0.876,67,0.908,68,0.86,69,0.396,70,0.394,74,0.218,75,0.012,76,1.432,125,1.024,141,1.072,200,0.014,201,0.014,202,1.481,203,3.382,204,2.127,205,4.195,206,4.532,207,6.872,208,6.872,209,7.146,210,7.146,211,3.189,212,6.383,213,5.26,214,5.26,215,4.284,216,2.231,217,5.26,218,5.26,219,5.26,220,5.26,221,4.742,222,4.052,223,3.169,224,4.052,225,2.356,226,2.237,227,5.26,228,2.237,229,5.26,230,5.26,231,2.127,232,4.532,233,7.146,234,7.146,235,1.414]],["title/components/AddChannelDialogComponent.html",[0,0.068,123,0.591]],["body/components/AddChannelDialogComponent.html",[0,0.102,1,0.431,2,0.778,3,0.119,4,0.104,5,0.527,6,0.553,7,0.553,8,0.553,9,0.104,15,0.527,16,1.417,17,1.415,18,0.502,20,0.817,22,0.817,24,0.104,25,0.344,27,0.318,30,0.306,36,0.38,38,0.409,39,0.018,40,0.345,41,0.335,42,0.409,45,2.749,51,0.377,52,0.82,54,0.793,63,0.697,67,0.604,68,0.925,69,0.359,70,0.215,73,0.666,74,0.119,75,0.007,78,1.235,87,0.697,104,3.61,105,2.017,109,1.443,110,1.443,111,1.078,112,0.94,113,1.342,114,1.404,115,1.404,116,0.502,117,0.817,118,0.778,119,0.454,120,1.073,121,0.553,122,0.553,123,0.88,124,1.259,125,1.059,126,0.817,127,0.454,128,0.553,129,0.67,130,0.715,131,0.454,132,0.553,133,0.454,134,0.502,135,0.553,136,0.477,137,0.817,138,0.454,139,0.553,140,0.454,141,0.409,142,0.553,143,0.454,144,0.527,145,0.553,146,0.431,147,0.817,148,0.454,149,0.817,150,0.454,151,0.527,152,0.553,153,0.454,154,0.553,155,0.817,156,0.454,157,0.553,158,0.454,159,0.553,160,0.454,161,0.553,162,0.454,163,0.553,164,0.431,165,0.553,166,0.477,167,0.553,168,0.477,169,0.572,170,0.553,171,0.454,172,0.553,173,0.454,174,0.553,175,0.553,176,0.454,177,0.553,178,0.454,179,0.553,180,0.431,181,0.502,182,0.477,183,0.553,184,0.454,185,0.553,186,0.454,187,0.553,188,0.431,189,0.553,190,0.454,191,0.553,192,0.454,193,0.553,194,0.454,195,0.553,196,0.527,197,0.431,198,0.527,199,0.553,200,0.01,201,0.01,211,2.12,216,1.293,223,1.731,228,1.222,236,5.146,237,4.773,238,2.213,239,5.041,240,4.347,241,3.656,242,5.046,243,2.072,244,4.801,245,4.369,246,5.046,247,4.793,248,5.122,249,5.046,250,4.801,251,5.573,252,4.243,253,4.801,254,1.9,255,5.573,256,2.873,257,4.801,258,2.404,259,5.122,260,5.122,261,4.243,262,4.243,263,4.243,264,2.873,265,1.9,266,4.243,267,2.873,268,4.243,269,4.481,270,3.656,271,4.243,272,1.679,273,4.243,274,3.269,275,4.243,276,2.873,277,5.676,278,3.269,279,4.243,280,4.243,281,2.392,282,1.098,283,4.243,284,2.873,285,2.392,286,3.656,287,3.351,288,2.873,289,2.873,290,2.475,291,2.475,292,2.873,293,2.873,294,2.873,295,2.873,296,2.873,297,1.619,298,1.357,299,1.222,300,2.017,301,2.213,302,1.861,303,2.873,304,2.873,305,2.873,306,2.873,307,2.873,308,2.557,309,2.873,310,2.873,311,2.873,312,2.213,313,2.873,314,4.243,315,2.475,316,2.873,317,2.98,318,3.913,319,2.873,320,3.913,321,2.873,322,2.475,323,2.475,324,2.475,325,2.873,326,2.873,327,2.213,328,2.873,329,2.873,330,1.731,331,2.873,332,2.873,333,1.731,334,3.269,335,2.873,336,2.873,337,3.269,338,2.873,339,2.017,340,1.731,341,2.873,342,2.873,343,2.475,344,2.475,345,2.873,346,2.475,347,1.561,348,2.475,349,2.475,350,3.913,351,2.749,352,4.243,353,3.656,354,4.243,355,3.656,356,3.656,357,4.243,358,4.243,359,4.243,360,5.573,361,4.243,362,3.656,363,3.656,364,2.98,365,4.243,366,3.269,367,1.804,368,4.293,369,3.656,370,4.801,371,3.269,372,3.269,373,3.269,374,1.581,375,1.791,376,4.243,377,1.654,378,2.873,379,1.861,380,0.916,381,0.916,382,1.619,383,1.235,384,1.078,385,1.511,386,1.128,387,1.634,388,1.59,389,0.984,390,1.59,391,1.52,392,2.005,393,2.873,394,0.916,395,0.96,396,1.162,397,1.078,398,1.03,399,3.556,400,4.243,401,4.326,402,2.873,403,4.58,404,5.945,405,5.046,406,5.046,407,4.243,408,4.243,409,4.243,410,4.243,411,4.243,412,4.243,413,4.243,414,4.243,415,4.243,416,3.216,417,2.873,418,4.194,419,4.888,420,3.656,421,3.656,422,2.873,423,1.731,424,2.873,425,2.873,426,2.737,427,2.873,428,2.873,429,2.873,430,2.873,431,2.873,432,2.017,433,2.873,434,0.856,435,2.873,436,2.873,437,2.873,438,0.836,439,4.243,440,1.342,441,1.342,442,2.146,443,3.269,444,1.03,445,1.731,446,2.873,447,1.353,448,2.873,449,1.482,450,2.873,451,2.873,452,1.537,453,1.353,454,1.485,455,2.475,456,0.96,457,1.619,458,1.282,459,1.078,460,0.73,461,0.836,462,1.286,463,1.054,464,1.731,465,1.9,466,1.522,467,2.873,468,1.054,469,1.054,470,1.054,471,1.95,472,1.054,473,1.106,474,1.054,475,0.875,476,1.17,477,0.73,478,1.731,479,4.243,480,4.243,481,2.873,482,2.873,483,1.731,484,1.005,485,0.96,486,1.162,487,2.005,488,0.96,489,2.475,490,2.873,491,2.873,492,2.873,493,1.435,494,1.731,495,0.836,496,0.836,497,1.357,498,1.286,499,1.286,500,2.873,501,2.213]],["title/components/AddUserDialogComponent.html",[0,0.068,129,0.591]],["body/components/AddUserDialogComponent.html",[0,0.105,1,0.54,2,0.915,3,0.149,4,0.13,5,0.66,6,0.693,7,0.693,8,0.693,9,0.13,14,1.26,15,0.66,16,1.438,17,1.437,18,0.629,20,0.96,22,0.96,24,0.13,25,0.404,27,0.374,30,0.383,36,0.376,38,0.404,39,0.018,40,0.338,41,0.314,42,0.404,51,0.391,52,0.827,54,0.635,63,0.874,67,0.709,68,0.672,69,0.374,70,0.27,73,1.157,74,0.149,75,0.008,76,0.693,87,0.874,109,1.433,110,1.505,111,1.267,112,1.268,116,0.629,117,0.96,118,0.915,119,0.569,120,1.189,121,0.693,122,0.693,123,0.569,124,1.348,125,1.022,126,0.96,127,0.569,128,0.693,129,0.976,130,0.941,131,0.569,132,0.693,133,0.569,134,0.629,135,0.693,136,0.598,137,0.96,138,0.569,139,0.693,140,0.569,141,0.512,142,0.693,143,0.569,144,0.66,145,0.693,146,0.54,147,0.96,148,0.569,149,0.96,150,0.569,151,0.66,152,0.693,153,0.569,154,0.693,155,0.96,156,0.569,157,0.693,158,0.569,159,0.693,160,0.569,161,0.693,162,0.569,163,0.693,164,0.54,165,0.693,166,0.598,167,0.693,168,0.598,169,0.672,170,0.693,171,0.569,172,0.693,173,0.569,174,0.693,175,0.693,176,0.569,177,0.693,178,0.569,179,0.693,180,0.54,181,0.629,182,0.598,183,0.693,184,0.569,185,0.693,186,0.569,187,0.693,188,0.54,189,0.693,190,0.569,191,0.693,192,0.569,193,0.693,194,0.569,195,0.693,196,0.66,197,0.54,198,0.66,199,0.693,200,0.011,201,0.011,223,2.168,231,2.016,236,5.115,237,4.719,238,2.772,239,4.926,240,4.93,241,4.296,243,2.042,247,4.997,248,5.322,250,5.322,258,2.623,260,5.589,265,2.233,281,2.811,282,1.116,290,3.101,291,3.101,299,1.53,300,2.527,312,4.408,346,4.296,347,1.554,349,3.101,350,3.502,374,0.957,377,1.867,380,1.148,381,1.148,383,1.487,384,1.454,385,1.575,386,1.326,387,1.157,388,1.369,389,1.157,390,1.437,391,1.268,394,1.148,395,1.202,397,1.267,398,1.211,399,2.859,401,3.722,416,3.086,418,3.004,419,3.502,420,3.101,421,4.296,438,1.048,440,0.957,441,0.957,442,1.53,444,0.874,449,1.643,458,1.267,459,1.267,460,0.915,463,2.1,476,1.327,484,1.26,485,1.202,495,1.048,496,1.048,497,1.701,502,5.722,503,5.722,504,6.178,505,6.178,506,4.296,507,3.599,508,2.563,509,1.798,510,4.987,511,3.599,512,3.502,513,2.491,514,3.006,515,6.178,516,3.599,517,3.599,518,3.004,519,3.171,520,3.004,521,4.296,522,3.599,523,2.642,524,4.296,525,3.599,526,3.599,527,4.408,528,3.101,529,4.987,530,4.296,531,1.519,532,2.772,533,1.001,534,3.599,535,3.599,536,3.599,537,3.101,538,3.599,539,3.599,540,3.599,541,2.527,542,3.101,543,3.599,544,2.527,545,3.599,546,3.599,547,3.599,548,3.599,549,3.101,550,4.987,551,3.599,552,5.322,553,4.348,554,4.296,555,3.841,556,3.841,557,4.987,558,4.987,559,5.722,560,4.987,561,3.599,562,3.707,563,3.599,564,1.612,565,2.772,566,2.168,567,3.599,568,2.527,569,2.331,570,3.599,571,1.612,572,2.527,573,3.599,574,3.599,575,2.331,576,3.101,577,3.599,578,1.386,579,2.168,580,1.53,581,2.029,582,1.907]],["title/components/AddreactionComponent.html",[0,0.068,127,0.591]],["body/components/AddreactionComponent.html",[0,0.108,1,0.578,2,0.958,3,0.16,4,0.139,5,0.707,6,0.741,7,0.741,8,0.741,9,0.139,15,0.707,16,1.444,17,1.443,18,0.673,20,1.005,22,1.005,24,0.189,25,0.423,27,0.392,30,0.41,36,0.387,38,0.48,39,0.018,40,0.357,41,0.333,42,0.48,51,0.403,52,0.81,63,0.935,67,0.548,68,0.856,69,0.301,70,0.289,74,0.16,75,0.009,76,0.741,78,1.521,87,0.935,116,0.673,117,1.005,118,0.958,119,0.609,120,1.279,121,0.741,122,0.741,123,0.609,124,0.958,125,0.799,126,1.005,127,1.004,128,0.741,129,0.609,130,0.628,131,0.609,132,0.741,133,0.609,134,0.673,135,0.741,136,0.64,137,1.005,138,0.609,139,0.741,140,0.609,141,0.548,142,0.741,143,0.609,144,0.707,145,0.741,146,0.578,147,1.005,148,0.609,149,1.005,150,0.609,151,0.707,152,0.741,153,0.609,154,0.741,155,1.005,156,0.609,157,0.741,158,0.609,159,0.741,160,0.609,161,0.741,162,0.609,163,0.741,164,0.578,165,0.741,166,0.64,167,0.741,168,0.64,169,0.704,170,0.741,171,0.609,172,0.741,173,0.609,174,0.741,175,0.741,176,0.609,177,0.741,178,0.609,179,0.741,180,0.578,181,0.673,182,0.64,183,0.741,184,0.609,185,0.741,186,0.609,187,0.741,188,0.578,189,0.741,190,0.609,191,0.741,192,0.609,193,0.741,194,0.609,195,0.741,196,0.707,197,0.578,198,0.707,199,0.741,200,0.012,201,0.012,211,2.61,216,1.937,221,3.384,228,1.638,231,2.113,235,0.853,243,1.726,254,2.34,272,1.615,282,0.64,302,2.495,347,1.313,366,2.967,375,1.072,377,1.454,383,1.157,385,0.935,386,1.389,387,1.212,388,1.313,389,0.894,390,1.313,391,0.853,397,0.979,398,0.935,434,1.196,440,1.024,441,1.024,447,1.229,458,1.328,460,1.328,461,1.121,463,1.917,476,1.212,477,0.979,488,2.123,495,1.121,496,1.121,514,3.302,527,5.278,528,3.319,530,4.501,532,2.967,566,2.321,583,3.319,584,4.024,585,5.928,586,5.224,587,5.928,588,5.928,589,6.357,590,4.501,591,6.357,592,4.128,593,6.852,594,6.852,595,2.011,596,5.278,597,3.852,598,6.357,599,5.928,600,5.224,601,5.224,602,5.278,603,3.852,604,2.325,605,5.224,606,2.571,607,3.852,608,5.224,609,3.852,610,3.148,611,3.368,612,3.84,613,4.567,614,5.108,615,2.962,616,2.962,617,3.141,618,3.138,619,5.224,620,3.852,621,3.852,622,5.224,623,5.224,624,2.945,625,5.224,626,5.224,627,5.224,628,2.225,629,3.852,630,5.224,631,3.852,632,3.852,633,3.852,634,3.852,635,1.917,636,2.705,637,2.041,638,3.852,639,2.495,640,3.319,641,3.852,642,5.928,643,5.928,644,3.852,645,2.967,646,3.852,647,3.852,648,3.852,649,3.852,650,3.852,651,3.852,652,2.967,653,3.852,654,3.319,655,2.171,656,2.171,657,5.928,658,1.287,659,1.348,660,2.705,661,3.319,662,1.483,663,2.041,664,3.852,665,3.852,666,3.319,667,1.174,668,2.962,669,3.852,670,3.852,671,1.558,672,3.319,673,3.852,674,3.319]],["title/classes/Answer.html",[75,0.008,675,2.253]],["body/classes/Answer.html",[3,0.215,4,0.188,9,0.188,24,0.188,25,0.513,27,0.475,30,0.553,36,0.401,38,0.421,39,0.018,40,0.271,41,0.357,42,0.421,51,0.329,54,1.008,74,0.215,75,0.012,112,1.616,134,1.274,200,0.014,201,0.014,235,1.15,351,4.725,675,4.526,676,2.751,677,4.474,678,5.619,679,5.619,680,3.447,681,3.645,682,4.011,683,4.447,684,6.334,685,5.363,686,3.129,687,5.193,688,5.193,689,5.193,690,5.193,691,5.193,692,5.193,693,5.193,694,5.193,695,3.57,696,3.647,697,5.457,698,4.474,699,5.457,700,5.457,701,5.457,702,4.474,703,4,704,5.457,705,4.474,706,5.457,707,4.474,708,5.457,709,6.334,710,5.193]],["title/components/AppComponent.html",[0,0.068,131,0.591]],["body/components/AppComponent.html",[0,0.124,1,0.76,2,1.144,3,0.21,4,0.183,5,0.93,6,0.975,7,0.975,8,0.975,9,0.183,15,0.93,16,1.464,17,1.463,18,0.885,20,1.201,22,1.201,24,0.183,25,0.506,36,0.264,39,0.018,40,0.353,41,0.237,54,0.646,67,0.721,68,0.683,69,0.292,70,0.38,74,0.21,75,0.011,116,0.885,117,1.201,118,1.144,119,0.801,120,1.358,121,0.975,122,0.975,123,0.801,124,1.144,125,0.911,126,1.201,127,0.801,128,0.975,129,0.801,130,0.75,131,1.115,132,0.975,133,0.801,134,0.885,135,0.975,136,0.842,137,1.201,138,0.801,139,0.975,140,0.801,141,0.721,142,0.975,143,0.801,144,0.93,145,0.975,146,0.76,147,1.201,148,0.801,149,1.201,150,0.801,151,0.93,152,0.975,153,0.801,154,0.975,155,1.201,156,0.801,157,0.975,158,0.801,159,0.975,160,0.801,161,0.975,162,0.801,163,0.975,164,0.76,165,0.975,166,0.842,167,0.975,168,0.842,169,0.841,170,0.975,171,0.801,172,0.975,173,0.801,174,0.975,175,0.975,176,0.801,177,0.975,178,0.801,179,0.975,180,0.76,181,0.885,182,0.842,183,0.975,184,0.801,185,0.975,186,0.801,187,0.975,188,0.76,189,0.975,190,0.801,191,0.975,192,0.801,193,0.975,194,0.801,195,0.975,196,0.93,197,0.76,198,0.93,199,0.975,200,0.014,201,0.014,226,2.653,327,4.806,711,4.366,712,6.761,713,6.24,714,3.378,715,6.24,716,5.068]],["title/modules/AppModule.html",[717,2.625,718,2.625]],["body/modules/AppModule.html",[1,0.998,3,0.145,4,0.127,9,0.127,11,2.455,17,0.641,18,0.611,39,0.018,69,0.458,70,0.262,74,0.145,75,0.008,116,0.611,123,1.051,125,0.896,127,1.118,129,1.051,130,0.588,131,1.155,133,1.051,136,1.105,138,1.051,140,1.051,143,1.051,146,0.998,148,1.051,150,1.051,153,1.051,156,1.051,158,1.051,160,1.051,162,1.051,164,0.998,166,1.105,168,1.105,171,1.051,173,1.051,176,1.051,178,1.051,180,0.998,181,0.611,182,1.105,184,1.051,186,1.051,188,0.998,190,1.051,192,1.051,194,1.051,197,0.998,200,0.011,201,0.011,237,3.166,277,2.694,298,1.652,300,2.455,301,3.765,475,1.065,611,1.566,717,2.455,718,5.613,719,2.265,720,2.455,721,4.854,722,4.854,723,3.432,724,2.694,725,3.013,726,3.013,727,3.013,728,3.013,729,4.309,730,6.001,731,5.531,732,6.001,733,5.531,734,5.73,735,5.531,736,6.001,737,5.531,738,5.366,739,5.531,740,4.211,741,3.497,742,4.211,743,3.497,744,3.497,745,3.497,746,3.497,747,3.497,748,4.211,749,4.888,750,4.211,751,2.455,752,3.497,753,3.497,754,3.497,755,3.497,756,2.694,757,3.497,758,3.497,759,2.455,760,4.888,761,3.497,762,3.013,763,3.013,764,3.497,765,3.497,766,3.497,767,3.497,768,3.497,769,3.497,770,3.497,771,4.888,772,3.497,773,4.888,774,3.497,775,4.211,776,3.013,777,4.888,778,3.497,779,4.888,780,3.497,781,4.211,782,3.013,783,4.888,784,4.888,785,3.497,786,3.497,787,2.694,788,3.497,789,3.497,790,3.497,791,2.694,792,3.497,793,3.013,794,4.211,795,3.013,796,4.888,797,4.888,798,3.013,799,3.497,800,3.497,801,2.455,802,3.497,803,3.497,804,3.497,805,3.497,806,4.888,807,3.497,808,4.888,809,3.497,810,3.497,811,3.497,812,3.497,813,2.694,814,4.211,815,4.888,816,1.971,817,3.013,818,3.013,819,3.497,820,3.013,821,2.455,822,2.694,823,3.497,824,3.497,825,2.694,826,3.497,827,4.888,828,1.853,829,3.013,830,3.013,831,3.497,832,4.888,833,3.497,834,3.497,835,2.694,836,3.497,837,4.211,838,3.013,839,4.211,840,2.455,841,3.013,842,4.888,843,3.497,844,4.888,845,3.497,846,3.497,847,2.694,848,3.497,849,2.694,850,4.888,851,3.497,852,2.694,853,4.888,854,3.497]],["title/modules/AppRoutingModule.html",[717,2.625,729,2.422]],["body/modules/AppRoutingModule.html",[0,0.138,1,0.995,3,0.232,4,0.203,9,0.203,11,3.935,18,0.979,24,0.203,39,0.018,48,4.574,69,0.443,70,0.42,71,2.8,74,0.232,75,0.013,78,1.631,146,0.995,164,1.059,180,0.995,188,0.995,200,0.015,201,0.015,662,2.907,719,3.63,724,4.317,729,4.295,742,4.828,748,5.712,762,4.828,763,4.828,814,4.828,818,4.828,820,4.828,821,3.935,839,4.828,840,3.935,841,4.828,855,5.604,856,5.604,857,6.63,858,5.107,859,4.317,860,5.604,861,5.604,862,5.604,863,5.604,864,5.604,865,4.828,866,5.604]],["title/components/AvatarChooseComponent.html",[0,0.068,133,0.591]],["body/components/AvatarChooseComponent.html",[0,0.108,1,0.42,2,0.764,3,0.116,4,0.101,5,0.514,6,0.539,7,0.539,8,0.539,9,0.199,13,1.603,14,1.739,15,0.514,16,1.414,17,1.412,18,0.489,20,0.801,22,0.801,24,0.151,25,0.337,27,0.312,28,2.34,30,0.444,35,3.613,36,0.365,38,0.403,39,0.018,40,0.321,41,0.306,42,0.403,43,2.923,47,3.864,51,0.432,52,0.836,54,0.836,61,2.923,63,0.68,67,0.707,68,0.67,69,0.339,70,0.21,71,1.399,73,0.966,74,0.116,75,0.006,76,0.801,78,1.212,87,1.011,97,2.157,101,1.814,102,2.412,109,1.555,110,1.643,111,1.667,112,1.453,113,1.744,114,1.636,115,1.531,116,0.489,117,0.801,118,0.764,119,0.442,120,1.059,121,0.539,122,0.539,123,0.442,124,0.764,125,0.67,126,0.801,127,0.442,128,0.539,129,0.442,130,0.843,131,0.442,132,0.539,133,0.869,134,1.356,135,0.539,136,0.465,137,0.801,138,0.442,139,0.539,140,0.442,141,0.398,142,0.539,143,0.442,144,0.514,145,0.539,146,0.42,147,0.801,148,0.442,149,0.801,150,0.442,151,0.514,152,0.539,153,0.442,154,0.539,155,0.801,156,0.442,157,0.539,158,0.442,159,0.539,160,0.442,161,0.539,162,0.442,163,0.539,164,0.42,165,0.539,166,0.465,167,0.539,168,0.465,169,0.742,170,0.539,171,0.442,172,0.539,173,0.442,174,0.539,175,0.539,176,0.442,177,0.539,178,0.442,179,0.539,180,0.42,181,0.489,182,0.465,183,0.539,184,0.442,185,0.539,186,0.442,187,0.539,188,0.42,189,0.539,190,0.442,191,0.539,192,0.442,193,0.539,194,0.442,195,0.539,196,0.514,197,0.42,198,0.514,199,0.539,200,0.009,201,0.009,235,0.62,243,1.795,272,1.058,282,0.465,347,1.533,374,1.883,375,1.531,377,1.715,380,0.893,381,0.893,382,1.578,383,1.552,384,1.566,385,1.55,386,0.744,387,1.555,388,1.533,389,1.364,390,1.511,391,1.366,392,1.967,394,1.755,395,1.66,396,2.493,397,1.263,398,1.011,426,2.113,434,1.376,438,1.447,440,1.322,441,0.744,444,1.656,449,1.863,452,2.195,453,2.175,454,1.457,456,1.965,457,1.578,458,1.667,459,1.495,460,1.263,461,1.212,462,2.226,463,1.528,465,1.254,466,1.483,468,1.027,469,1.027,470,1.027,471,2.059,472,1.528,473,1.603,474,2.019,475,1.878,476,1.481,477,1.058,484,2.295,485,1.391,486,1.684,488,1.66,494,1.687,495,0.815,496,0.815,508,2.634,509,1.712,514,1.864,523,2.916,533,0.779,541,2.923,564,1.864,571,2.465,578,1.078,595,1.603,606,1.824,616,2.483,618,1.864,624,2.347,635,1.528,639,2.697,656,2.802,658,0.935,659,1.926,660,1.966,667,0.853,668,2.75,703,2.157,714,2.75,791,5.455,828,2.206,867,6.101,868,2.412,869,6.821,870,4.97,871,4.163,872,4.97,873,5.503,874,4.741,875,5.503,876,4.163,877,2.01,878,3.587,879,5.503,880,2.8,881,3.565,882,3.599,883,2.8,884,3.587,885,2.8,886,2.8,887,1.77,888,2.8,889,2.508,890,2.347,891,2.923,892,3.587,893,3.587,894,3.207,895,4.163,896,2.8,897,4.163,898,5.311,899,2.923,900,3.587,901,3.587,902,3.587,903,3.587,904,4.163,905,2.8,906,4.163,907,4.163,908,2.923,909,4.163,910,5.503,911,2.8,912,3.587,913,3.22,914,3.587,915,4.163,916,4.163,917,4.163,918,4.163,919,4.163,920,4.163,921,2.8,922,2.8,923,4.163,924,2.8,925,2.8,926,2.8,927,1.966,928,1.966,929,4.97,930,2.8,931,2.8,932,1.578,933,2.8,934,2.8,935,2.8,936,1.966,937,1.399,938,2.8,939,1.966,940,1.77,941,1.966,942,2.412,943,2.8,944,2.8,945,2.412,946,2.8,947,4.163,948,4.163,949,4.163,950,2.923,951,3.587,952,4.163,953,4.163,954,4.163,955,4.163,956,4.163,957,4.163,958,3.207,959,1.966,960,1.966,961,2.312,962,1.391,963,1.191,964,1.457,965,1.578,966,2.132,967,2.508,968,1.687,969,2.373,970,2.373,971,2.373,972,2.923,973,2.113,974,4.163,975,3.22,976,4.163,977,1.132,978,4.163,979,2.206,980,2.8,981,1.814,982,1.814,983,1.814,984,1.687,985,1.323,986,2.119,987,2.697,988,1.966,989,4.163,990,1.814,991,2.8,992,2.412,993,1.483,994,1.323,995,2.206,996,4.239,997,3.587,998,3.587,999,2.206,1000,2.412,1001,2.412,1002,3.207,1003,1.814,1004,1.399,1005,2.157,1006,1.399,1007,3.587,1008,2.412,1009,1.578,1010,2.8,1011,2.157,1012,2.8,1013,3.207,1014,2.923,1015,2.8,1016,2.157,1017,2.8]],["title/classes/Channel.html",[75,0.008,125,0.504]],["body/classes/Channel.html",[3,0.22,4,0.193,9,0.193,24,0.193,25,0.521,27,0.482,30,0.567,36,0.4,38,0.431,39,0.018,40,0.277,41,0.356,42,0.431,51,0.337,54,0.991,69,0.307,74,0.22,75,0.012,125,0.866,141,1.074,200,0.015,201,0.015,235,1.179,244,6.327,245,5.157,519,3.389,676,2.819,680,3.389,682,4.044,695,2.999,1018,4.584,1019,5.537,1020,7.344,1021,4.14,1022,3.584,1023,4.951,1024,6.427,1025,4.757,1026,5.32,1027,5.32,1028,5.32,1029,3.45,1030,6.18,1031,4.584,1032,4.584,1033,4.584,1034,5.32,1035,4.584,1036,4.584,1037,6.427,1038,5.32,1039,6.427,1040,5.32,1041,6.427,1042,5.32,1043,5.537,1044,5.32,1045,4.584,1046,4.098,1047,3.736]],["title/classes/Chat.html",[75,0.008,141,0.532]],["body/classes/Chat.html",[3,0.233,4,0.204,9,0.204,24,0.204,25,0.538,27,0.498,30,0.599,36,0.389,38,0.456,39,0.018,40,0.293,41,0.341,42,0.456,51,0.356,54,0.972,69,0.383,74,0.233,75,0.013,130,0.676,141,0.945,169,0.758,200,0.015,201,0.015,235,1.246,519,3.522,676,2.979,680,3.522,682,4.118,686,3.388,695,3.745,1022,3.725,1023,5.118,1025,3.643,1046,5.118,1047,4.665,1048,4.845,1049,6.643,1050,5.623,1051,5.623,1052,5.623,1053,5.623,1054,5.623,1055,5.623,1056,5.623,1057,5.623]],["title/components/ChatComponent.html",[0,0.068,138,0.591]],["body/components/ChatComponent.html",[0,0.083,1,0.296,2,0.582,3,0.082,4,0.071,5,0.361,6,0.61,7,0.379,8,0.379,9,0.115,15,0.361,16,1.37,17,1.376,18,0.344,20,0.61,22,0.61,24,0.165,25,0.257,27,0.238,30,0.338,36,0.361,38,0.322,39,0.018,40,0.293,41,0.314,42,0.322,45,1.276,51,0.37,52,0.507,54,0.846,57,1.518,63,0.77,67,0.831,68,0.787,69,0.383,70,0.148,73,0.736,74,0.082,75,0.004,76,1.124,78,1.158,87,0.77,109,1.681,110,1.736,111,1.484,112,1.37,113,1.765,114,1.847,115,1.821,116,0.344,117,0.766,118,0.582,119,0.311,120,0.878,121,0.379,122,0.379,123,0.311,124,0.73,125,0.536,126,0.61,127,0.311,128,0.379,129,0.311,130,0.725,131,0.311,132,0.379,133,0.311,134,0.797,135,0.379,136,0.327,137,0.61,138,0.72,139,0.379,140,0.311,141,1.022,142,0.379,143,0.311,144,0.73,145,0.379,146,0.296,147,0.61,148,0.311,149,0.61,150,0.311,151,0.361,152,0.379,153,0.311,154,0.379,155,0.61,156,0.311,157,0.379,158,0.311,159,0.379,160,0.311,161,0.379,162,0.311,163,0.379,164,0.296,165,0.379,166,0.327,167,0.379,168,0.327,169,0.894,170,0.379,171,0.311,172,0.379,173,0.311,174,0.379,175,0.379,176,0.311,177,0.379,178,0.311,179,0.379,180,0.296,181,0.344,182,0.327,183,0.379,184,0.311,185,0.379,186,0.311,187,0.379,188,0.296,189,0.379,190,0.311,191,0.379,192,0.311,193,0.379,194,0.311,195,0.379,196,0.361,197,0.296,198,0.361,199,0.379,200,0.01,201,0.007,203,2.974,205,1.111,215,2.243,216,1.779,224,1.518,228,0.838,231,1.609,232,1.698,235,0.702,243,1.755,245,1.384,269,1.911,272,0.501,281,1.788,285,2.571,315,2.732,327,2.443,330,2.748,333,1.911,334,2.443,337,3.513,340,2.748,347,1.623,367,2.631,374,0.524,375,1.939,377,1.908,380,1.922,381,1.791,382,1.111,383,1.668,384,1.879,385,1.679,386,1.806,387,1.629,388,1.605,389,1.467,390,1.665,391,1.643,392,3.317,394,1.454,395,1.523,396,1.282,397,1.531,398,1.502,399,2.497,401,2.748,403,3.85,416,1.988,418,3.383,419,3.942,434,1.468,438,1.7,440,1.213,441,1.213,442,2.125,443,1.518,444,1.589,445,1.187,447,1.454,449,1.713,452,2.247,453,1.454,454,1.11,456,1.669,458,1.663,459,1.849,460,1.531,461,1.158,462,0.882,463,2.402,464,1.187,465,1.42,468,0.723,469,0.723,470,0.723,471,2.213,472,1.163,473,1.221,474,1.163,475,0.966,476,1.159,477,1.011,478,1.911,484,1.869,485,2.31,487,1.498,488,2.152,498,0.882,499,0.882,508,2.238,509,1.455,514,0.882,533,0.882,562,3.238,564,0.882,565,1.518,568,1.384,569,1.276,571,3.042,572,1.384,575,2.054,578,1.221,580,1.939,582,2.108,592,2.748,611,0.882,615,0.984,636,2.227,637,1.044,658,1.669,659,0.69,662,0.759,663,1.044,667,1.212,668,0.984,671,1.609,714,1.988,723,2.227,816,1.111,877,1.609,892,1.698,894,1.518,899,2.794,936,1.384,937,0.984,939,1.384,940,1.692,951,2.732,961,0.658,962,0.658,963,0.838,964,0.69,966,0.658,969,0.759,970,0.759,971,0.759,977,2.27,984,1.911,985,0.931,986,2.161,993,1.044,994,2.155,995,2.108,999,1.044,1006,0.984,1011,1.518,1016,1.518,1022,1.584,1058,1.698,1059,2.397,1060,1.97,1061,3.171,1062,5.34,1063,2.954,1064,3.091,1065,3.979,1066,3.979,1067,3.428,1068,3.979,1069,3.979,1070,3.979,1071,3.979,1072,3.979,1073,3.171,1074,4.56,1075,3.171,1076,3.929,1077,1.97,1078,3.011,1079,2.805,1080,3.171,1081,3.171,1082,1.97,1083,5.34,1084,3.171,1085,2.748,1086,2.732,1087,3.979,1088,3.171,1089,1.97,1090,3.171,1091,1.97,1092,2.227,1093,3.979,1094,2.443,1095,1.97,1096,3.171,1097,3.171,1098,1.97,1099,2.443,1100,3.171,1101,1.97,1102,1.97,1103,1.97,1104,1.97,1105,1.97,1106,1.97,1107,1.97,1108,1.97,1109,1.97,1110,3.065,1111,1.97,1112,3.171,1113,2.732,1114,2.732,1115,1.97,1116,1.97,1117,1.97,1118,1.187,1119,1.044,1120,1.276,1121,1.187,1122,1.187,1123,1.276,1124,1.276,1125,1.518,1126,1.187,1127,3.171,1128,1.911,1129,1.97,1130,1.97,1131,1.97,1132,1.97,1133,1.97,1134,1.97,1135,3.171,1136,3.979,1137,3.171,1138,1.97,1139,1.97,1140,1.384,1141,1.698,1142,1.698,1143,1.97,1144,1.97,1145,1.97,1146,1.97,1147,3.171,1148,1.698,1149,1.698,1150,1.97,1151,3.171,1152,2.732,1153,3.979,1154,1.97,1155,1.97,1156,1.97,1157,4.56,1158,2.732,1159,3.171,1160,3.171,1161,1.911,1162,3.171,1163,3.171,1164,3.929,1165,2.732,1166,4.601,1167,2.732,1168,3.171,1169,2.732,1170,3.171,1171,3.171,1172,3.171,1173,3.171,1174,3.171,1175,2.443,1176,3.171,1177,3.171,1178,3.171,1179,3.171,1180,3.202,1181,3.171,1182,2.732,1183,3.171,1184,3.171,1185,3.171,1186,3.171,1187,1.276,1188,3.093,1189,1.518,1190,1.518,1191,1.584,1192,2.571,1193,1.111,1194,2.227,1195,1.276,1196,1.698,1197,1.788,1198,2.227,1199,2.443,1200,2.227,1201,1.518,1202,1.698,1203,1.518,1204,1.518,1205,2.794,1206,1.518,1207,2.042,1208,1.698,1209,4.113,1210,3.428,1211,4.306,1212,1.698,1213,2.443,1214,2.732,1215,1.698,1216,1.698,1217,1.698,1218,1.609,1219,1.698,1220,1.698,1221,1.698,1222,1.698,1223,1.698,1224,1.698,1225,1.698,1226,1.698,1227,1.698,1228,1.698,1229,1.518,1230,3.238,1231,1.698,1232,1.698,1233,1.698,1234,1.518,1235,1.518,1236,1.698,1237,1.518,1238,1.698,1239,2.443,1240,2.278,1241,2.054,1242,2.732,1243,3.929,1244,2.732,1245,1.384,1246,1.698,1247,1.698,1248,1.698,1249,1.698,1250,1.698,1251,1.698,1252,1.111,1253,1.187,1254,1.276,1255,3.459,1256,3.413,1257,3.413,1258,3.459,1259,3.459,1260,3.238,1261,3.459,1262,2.054,1263,1.276,1264,2.817,1265,2.748,1266,1.276,1267,1.276,1268,1.276,1269,2.054,1270,1.276,1271,1.044,1272,1.276,1273,3.093,1274,1.276,1275,1.276,1276,1.187,1277,2.829,1278,1.276,1279,1.187,1280,1.187,1281,1.911,1282,2.578,1283,0.984,1284,1.276,1285,1.276,1286,1.276,1287,2.397,1288,1.187,1289,1.911,1290,1.187,1291,4.007,1292,1.187,1293,1.276,1294,2.054,1295,2.397,1296,2.243,1297,2.578,1298,1.187,1299,2.954,1300,1.187,1301,1.911,1302,1.276,1303,1.276]],["title/components/ChatViewComponent.html",[0,0.068,140,0.591]],["body/components/ChatViewComponent.html",[0,0.108,1,0.576,2,0.956,3,0.159,4,0.139,5,0.704,6,0.739,7,0.739,8,0.739,9,0.139,14,1.343,15,0.704,16,1.444,17,1.443,18,0.671,20,1.003,22,1.003,24,0.189,25,0.422,27,0.391,30,0.555,36,0.381,38,0.479,39,0.018,40,0.365,41,0.327,42,0.479,51,0.402,52,0.664,54,0.809,67,0.741,68,0.797,69,0.395,70,0.288,73,1.209,74,0.159,75,0.009,76,1.003,109,1.209,110,1.373,111,0.975,112,0.85,113,1.021,114,1.068,115,1.068,116,0.671,117,1.003,118,0.956,119,0.606,120,1.222,121,0.739,122,0.739,123,0.606,124,0.956,125,0.797,126,1.003,127,0.606,128,0.739,129,0.606,130,0.933,131,0.606,132,0.739,133,0.606,134,0.671,135,0.739,136,0.638,137,1.003,138,0.606,139,0.739,140,1.003,141,1.013,142,0.739,143,0.606,144,0.704,145,0.739,146,0.576,147,1.003,148,0.606,149,1.003,150,0.606,151,0.704,152,0.739,153,0.606,154,0.739,155,1.003,156,0.606,157,0.739,158,0.606,159,0.739,160,0.606,161,0.739,162,0.606,163,0.739,164,0.576,165,0.739,166,0.638,167,0.739,168,0.638,169,0.797,170,0.739,171,0.606,172,0.739,173,0.606,174,0.739,175,0.739,176,0.606,177,0.739,178,0.606,179,0.739,180,0.576,181,0.671,182,0.638,183,0.739,184,0.606,185,0.739,186,0.606,187,0.739,188,0.576,189,0.739,190,0.606,191,0.739,192,0.606,193,0.739,194,0.606,195,0.739,196,0.704,197,0.576,198,0.704,199,0.739,200,0.012,201,0.012,211,2.604,215,2.164,216,1.17,228,1.632,231,1.552,243,1.723,254,2.334,272,1.324,282,0.866,285,2.938,347,1.406,367,2.516,377,1.646,382,2.164,383,1.311,384,0.975,386,1.386,387,1.472,388,1.551,389,0.89,390,1.47,391,1.406,396,1.552,397,0.975,398,0.932,438,1.118,440,1.021,441,1.021,458,0.975,459,1.324,460,1.324,461,1.118,463,1.408,466,3.135,477,1.324,485,1.741,486,2.393,493,2.957,494,3.565,499,1.719,508,2.843,509,1.932,533,1.646,580,1.632,617,2.761,658,1.282,667,1.17,671,2.108,835,5.563,837,3.307,838,3.307,877,2.393,887,2.216,932,2.938,940,1.632,941,2.695,977,1.552,1029,1.918,1079,3.608,1099,4.015,1119,2.034,1126,2.313,1149,3.307,1158,3.307,1180,2.695,1188,3.135,1201,2.957,1205,2.695,1240,1.918,1252,2.164,1304,6.221,1305,3.307,1306,5.918,1307,5.212,1308,5.918,1309,6.347,1310,4.49,1311,5.468,1312,2.957,1313,5.098,1314,4.112,1315,5.212,1316,5.212,1317,3.839,1318,5.212,1319,3.578,1320,5.212,1321,4.49,1322,3.839,1323,3.14,1324,5.212,1325,3.839,1326,3.839,1327,3.839,1328,3.839,1329,3.839,1330,3.307,1331,3.839,1332,3.839,1333,3.307,1334,3.307,1335,3.307,1336,3.839,1337,4.49,1338,5.212,1339,5.098,1340,3.839,1341,3.336,1342,4.015,1343,3.307,1344,3.839,1345,3.839,1346,3.307,1347,3.307,1348,3.839,1349,3.839,1350,4.015,1351,3.307,1352,2.957,1353,3.307,1354,3.307,1355,3.307,1356,3.307,1357,3.839,1358,1.814,1359,5.098,1360,4.558]],["title/components/DateLineComponent.html",[0,0.068,143,0.591]],["body/components/DateLineComponent.html",[0,0.117,1,0.678,2,1.065,3,0.187,4,0.164,5,0.829,6,0.87,7,0.87,8,0.87,9,0.164,15,0.829,16,1.456,17,1.455,18,0.79,20,1.117,22,1.117,24,0.232,25,0.47,30,0.619,36,0.365,38,0.47,39,0.018,40,0.365,41,0.327,42,0.47,51,0.286,52,0.576,54,0.94,67,0.643,68,0.782,69,0.37,70,0.339,74,0.187,75,0.01,76,0.87,109,1.048,110,1.048,111,1.149,112,1.001,113,1.202,116,0.79,117,1.117,118,1.065,119,0.714,120,1.303,121,0.87,122,0.87,123,0.714,124,1.065,125,0.864,126,1.117,127,0.714,128,0.87,129,0.714,130,0.698,131,0.714,132,0.87,133,0.714,134,0.79,135,0.87,136,0.751,137,1.117,138,0.714,139,0.87,140,0.714,141,0.643,142,0.87,143,1.069,144,1.388,145,0.87,146,0.678,147,1.117,148,0.714,149,1.117,150,0.714,151,0.829,152,0.87,153,0.714,154,0.87,155,1.117,156,0.714,157,0.87,158,0.714,159,0.87,160,0.714,161,0.87,162,0.714,163,0.87,164,0.678,165,0.87,166,0.751,167,0.87,168,0.751,169,0.864,170,0.87,171,0.714,172,0.87,173,0.714,174,0.87,175,0.87,176,0.714,177,0.87,178,0.714,179,0.87,180,0.678,181,0.79,182,0.751,183,0.87,184,0.714,185,0.87,186,0.714,187,0.87,188,0.678,189,0.87,190,0.714,191,0.87,192,0.714,193,0.87,194,0.714,195,0.87,196,0.829,197,0.678,198,0.829,199,0.87,200,0.013,201,0.013,211,2.901,216,1.769,228,1.922,243,1.316,254,2.6,272,1.475,347,1.001,375,1.258,383,1.286,385,1.097,387,1.347,388,1.286,389,1.048,390,1.286,391,1.001,440,1.202,441,1.544,444,1.097,445,4.078,459,1.149,460,1.475,461,1.316,476,1.048,483,3.498,658,1.51,667,1.769,801,5.031,979,3.076,1064,3.58,1067,5.832,1118,2.723,1122,2.723,1152,5.002,1218,2.348,1361,6.173,1362,3.894,1363,5.526,1364,5.806,1365,6.415,1366,7.002,1367,4.52,1368,4.52,1369,5.806,1370,4.52,1371,4.52,1372,4.52,1373,4.52,1374,4.52,1375,4.52,1376,4.52,1377,2.723,1378,3.482,1379,4.077,1380,3.894]],["title/components/EditChannelComponent.html",[0,0.068,146,0.561]],["body/components/EditChannelComponent.html",[0,0.115,1,0.399,2,0.735,3,0.11,4,0.096,5,0.488,6,0.512,7,0.512,8,0.512,9,0.096,13,1.544,14,1.688,15,0.488,16,1.408,17,1.406,18,0.465,20,0.772,22,0.772,24,0.175,25,0.325,27,0.301,28,2.282,30,0.427,36,0.378,38,0.216,39,0.018,40,0.375,41,0.293,42,0.216,51,0.419,52,0.734,54,0.734,63,1.636,67,0.861,68,0.815,69,0.332,70,0.2,73,0.93,74,0.11,75,0.006,76,0.928,87,1.171,99,2.26,109,1.562,110,1.642,111,1.463,112,1.34,113,1.609,114,1.602,115,1.602,116,0.465,117,0.772,118,0.735,119,0.421,120,1.033,121,0.512,122,0.512,123,0.421,124,0.885,125,1.05,126,0.772,127,0.421,128,0.512,129,0.421,130,0.692,131,0.421,132,0.512,133,0.421,134,0.465,135,0.512,136,0.443,137,0.772,138,0.421,139,0.512,140,0.421,141,0.379,142,0.512,143,0.421,144,0.488,145,0.512,146,0.805,147,1.476,148,0.421,149,0.772,150,0.421,151,0.488,152,0.512,153,0.421,154,0.512,155,0.772,156,0.421,157,0.512,158,0.421,159,0.512,160,0.421,161,0.512,162,0.421,163,0.512,164,0.399,165,0.512,166,0.443,167,0.512,168,0.443,169,0.54,170,0.512,171,0.421,172,0.512,173,0.421,174,0.512,175,0.512,176,0.421,177,0.512,178,0.421,179,0.512,180,0.399,181,0.465,182,0.443,183,0.512,184,0.421,185,0.512,186,0.421,187,0.512,188,0.399,189,0.512,190,0.421,191,0.512,192,0.421,193,0.512,194,0.421,195,0.512,196,0.488,197,0.399,198,0.488,199,0.512,200,0.009,201,0.009,223,1.604,235,0.59,239,2.816,258,2.17,265,1.796,272,1.712,277,4.135,282,0.892,299,1.132,347,1.536,370,4.624,374,1.282,375,1.116,377,1.602,379,1.725,380,1.712,381,0.849,383,1.568,384,1.68,385,1.569,387,1.456,388,1.536,389,0.93,390,1.568,391,1.431,394,1.279,395,1.793,397,1.537,398,1.469,416,2.682,426,2.282,434,0.809,438,1.404,440,1.531,441,1.609,442,1.132,444,1.171,447,0.849,449,2.02,452,2.052,453,2.148,454,1.688,456,1.339,457,2.26,458,1.762,459,1.537,460,1.642,461,1.167,464,1.604,468,0.977,469,0.977,470,0.977,471,0.932,472,0.977,473,1.025,474,0.977,475,0.811,476,1.626,477,1.364,483,3.645,484,2.197,485,2.526,486,1.95,487,1.895,488,1.611,489,3.454,495,1.167,496,1.167,497,1.258,498,1.796,508,2.404,509,1.563,513,2.003,514,2.404,519,2.536,531,1.843,533,0.741,542,4.155,553,2.597,555,3.089,556,4.135,564,2.404,578,1.025,579,2.416,580,1.132,581,2.719,595,1.544,606,2.112,635,1.77,658,1.339,659,0.932,667,1.222,671,2.17,840,5.116,877,2.447,887,1.705,937,2.003,945,4.624,961,1.339,962,1.339,963,1.132,964,0.932,966,1.923,973,1.705,977,1.077,986,1.857,990,1.725,1004,1.33,1188,2.124,1191,2.682,1193,3.026,1197,1.501,1206,2.051,1218,1.077,1241,2.597,1279,1.604,1283,2.682,1350,2.051,1358,1.258,1381,5.613,1382,2.294,1383,4.823,1384,4.01,1385,6.279,1386,4.823,1387,4.823,1388,4.823,1389,4.823,1390,3.477,1391,5.367,1392,6.05,1393,4.624,1394,5.367,1395,5.367,1396,4.823,1397,3.715,1398,1.501,1399,3.423,1400,4.01,1401,4.01,1402,2.416,1403,4.01,1404,2.597,1405,4.01,1406,4.01,1407,3.234,1408,2.279,1409,2.663,1410,2.663,1411,2.663,1412,2.663,1413,4.01,1414,3.454,1415,2.663,1416,4.01,1417,4.01,1418,2.663,1419,2.597,1420,4.01,1421,2.663,1422,4.01,1423,2.663,1424,4.135,1425,2.663,1426,2.663,1427,2.663,1428,2.663,1429,2.663,1430,2.663,1431,2.663,1432,1.604,1433,1.725,1434,1.87,1435,1.87,1436,1.87,1437,5.213,1438,4.01,1439,4.01,1440,4.01,1441,4.01,1442,2.663,1443,2.294,1444,2.663,1445,2.051,1446,2.663,1447,2.816,1448,4.01,1449,2.663,1450,2.663,1451,2.663,1452,2.663,1453,5.367,1454,4.135,1455,4.135,1456,4.01,1457,3.454,1458,4.01,1459,1.87,1460,1.604,1461,1.87,1462,1.725,1463,2.816,1464,5.367,1465,3.234,1466,2.416,1467,4.837,1468,2.26,1469,2.26,1470,2.26,1471,2.663,1472,2.663,1473,2.051,1474,1.725,1475,2.663,1476,4.01,1477,2.051,1478,2.663,1479,2.663,1480,2.051,1481,2.294,1482,2.051,1483,2.663]],["title/components/EditChannelUsersComponent.html",[0,0.068,148,0.591]],["body/components/EditChannelUsersComponent.html",[0,0.123,1,0.501,2,0.868,3,0.138,4,0.121,5,0.613,6,0.643,7,0.643,8,0.643,9,0.121,15,0.613,16,1.432,17,1.43,18,0.584,20,0.911,22,0.911,24,0.199,25,0.384,27,0.355,30,0.504,36,0.378,38,0.511,39,0.018,40,0.359,41,0.332,42,0.511,51,0.45,52,0.762,54,0.877,63,1.335,67,0.674,68,0.806,69,0.364,70,0.251,73,0.775,74,0.138,75,0.008,76,1.058,87,1.592,99,2.669,109,1.387,110,1.564,111,1.397,112,1.218,113,1.259,114,1.317,115,1.317,116,0.584,117,0.911,118,0.868,119,0.528,120,1.151,121,0.643,122,0.643,123,0.528,124,1.009,125,1.072,126,0.911,127,0.528,128,0.643,129,0.528,130,0.872,131,0.528,132,0.643,133,0.528,134,0.584,135,0.643,136,0.556,137,0.911,138,0.528,139,0.643,140,0.528,141,0.476,142,0.643,143,0.528,144,0.613,145,0.643,146,0.501,147,1.382,148,0.945,149,0.911,150,0.528,151,0.613,152,0.643,153,0.528,154,0.643,155,0.911,156,0.528,157,0.643,158,0.528,159,0.643,160,0.528,161,0.643,162,0.528,163,0.643,164,0.501,165,0.643,166,0.556,167,0.643,168,0.556,169,0.638,170,0.643,171,0.528,172,0.643,173,0.528,174,0.643,175,0.643,176,0.528,177,0.643,178,0.528,179,0.643,180,0.501,181,0.584,182,0.556,183,0.643,184,0.528,185,0.643,186,0.528,187,0.643,188,0.501,189,0.643,190,0.528,191,0.643,192,0.528,193,0.643,194,0.528,195,0.643,196,0.613,197,0.501,198,0.613,199,0.643,200,0.011,201,0.011,211,2.366,221,3.562,223,2.014,228,1.421,235,1.049,254,2.12,258,2.418,265,2.12,272,1.203,282,1.09,299,1.421,312,4.235,347,1.573,374,1.462,375,1.317,377,1.317,379,2.165,380,1.51,381,1.066,383,1.049,384,1.203,385,1.592,386,1.259,387,1.387,388,1.493,389,1.275,390,1.218,391,1.049,394,1.51,395,1.582,396,1.352,397,1.203,398,1.15,416,2.747,434,0.675,438,0.973,442,2.013,449,1.792,452,1.018,453,1.066,454,1.17,458,1.203,459,1.203,460,1.203,461,0.973,465,1.497,466,1.771,476,0.775,477,0.849,486,1.352,488,1.582,495,0.973,496,0.973,497,1.579,498,1.497,501,2.575,506,4.079,514,2.12,519,3.097,521,4.079,524,4.079,531,1.923,544,4.199,552,4.079,553,3.874,564,2.678,568,2.347,569,2.165,571,1.497,572,2.347,578,1.823,579,2.014,581,1.884,595,1.823,604,2.294,606,2.017,628,1.657,635,1.737,656,1.884,659,1.657,667,1.443,671,1.915,849,5.633,865,4.079,882,3.882,928,2.347,961,1.116,962,1.116,990,2.165,1004,1.67,1013,2.575,1064,3.441,1122,2.014,1140,3.325,1191,1.67,1193,1.884,1207,1.497,1323,2.853,1381,5.633,1397,4.235,1398,1.884,1402,2.853,1408,2.598,1424,3.647,1437,2.88,1445,2.575,1447,2.347,1460,2.014,1461,2.347,1462,2.165,1473,2.575,1484,2.575,1485,4.737,1486,4.079,1487,5.498,1488,5.498,1489,5.498,1490,4.735,1491,4.735,1492,5.981,1493,5.981,1494,3.343,1495,3.067,1496,4.735,1497,4.735,1498,4.735,1499,3.343,1500,4.735,1501,3.343,1502,4.079,1503,3.647,1504,4.735,1505,2.853,1506,2.669,1507,4.607,1508,4.735,1509,4.607,1510,3.325,1511,3.067,1512,3.343,1513,3.647,1514,3.343,1515,3.343,1516,5.981,1517,4.735,1518,4.735,1519,3.647,1520,3.343,1521,4.735,1522,3.343,1523,4.735,1524,4.079,1525,2.88,1526,3.343,1527,3.343,1528,3.343,1529,3.343,1530,3.343,1531,6.313,1532,3.343,1533,3.343,1534,3.343,1535,3.343,1536,3.343,1537,3.343,1538,3.343,1539,3.343,1540,2.88,1541,3.343,1542,3.343,1543,3.343,1544,4.735,1545,3.343,1546,2.88,1547,3.343,1548,3.343,1549,2.88,1550,3.343,1551,3.343,1552,3.343]],["title/components/EmptyWindowComponent.html",[0,0.068,150,0.591]],["body/components/EmptyWindowComponent.html",[0,0.092,1,0.433,2,0.781,3,0.119,4,0.104,5,0.529,6,0.555,7,0.555,8,0.555,9,0.104,15,0.529,16,1.417,17,1.424,18,0.504,20,0.819,22,0.819,24,0.183,25,0.345,30,0.454,36,0.264,38,0.234,39,0.018,40,0.291,41,0.236,42,0.234,69,0.292,70,0.216,73,0.987,74,0.119,75,0.007,99,2.4,109,1.75,110,1.784,111,1.716,112,1.496,113,1.91,114,1.999,115,1.982,116,0.504,117,0.819,118,0.781,119,0.456,120,1.075,121,0.555,122,0.555,123,0.456,124,0.781,125,0.84,126,0.819,127,0.456,128,0.555,129,0.456,130,0.672,131,0.456,132,0.555,133,0.456,134,0.976,135,0.555,136,0.48,137,0.819,138,0.456,139,0.555,140,0.456,141,0.72,142,0.555,143,0.456,144,0.781,145,0.555,146,0.433,147,0.819,148,0.456,149,0.819,150,0.882,151,1.214,152,0.555,153,0.456,154,0.555,155,0.819,156,0.456,157,0.555,158,0.456,159,0.555,160,0.456,161,0.555,162,0.456,163,0.555,164,0.433,165,0.555,166,0.48,167,0.555,168,0.48,169,0.752,170,0.555,171,0.456,172,0.555,173,0.456,174,0.555,175,0.555,176,0.456,177,0.555,178,0.456,179,0.555,180,0.433,181,0.504,182,0.48,183,0.555,184,0.456,185,0.555,186,0.456,187,0.555,188,0.433,189,0.555,190,0.456,191,0.555,192,0.456,193,0.555,194,0.456,195,0.555,196,0.529,197,0.433,198,0.529,199,0.555,200,0.013,201,0.01,231,2.046,243,1.814,245,2.026,258,2.408,281,2.4,299,1.227,347,1.685,367,2.375,374,1.345,375,1.982,377,1.999,380,2.11,381,2.056,382,1.627,383,1.704,384,1.891,385,1.606,386,1.91,387,1.495,388,1.466,389,1.173,390,1.701,391,1.695,392,3.484,394,1.988,395,2.082,396,1.721,397,1.584,398,1.513,399,2.79,401,3.365,403,4.588,416,2.528,418,3.884,419,4.526,434,1.423,438,1.626,440,0.767,441,0.767,442,1.227,443,2.223,444,1.446,445,1.738,447,0.92,449,1.853,452,1.702,453,1.614,456,0.964,458,1.746,459,1.852,460,1.681,461,1.239,463,2.613,464,1.738,471,2.364,476,1.295,477,1.285,484,2.256,485,2.418,487,2.011,488,2.256,494,2.565,495,1.239,496,1.239,497,1.363,499,1.292,508,2.667,509,1.734,533,0.803,562,4.037,564,1.292,565,2.223,568,2.026,569,1.869,571,1.292,572,2.026,575,2.758,578,1.111,580,2.151,582,2.68,658,1.989,667,1.297,671,1.167,714,2.79,847,4.302,961,1.422,962,1.422,963,1.81,964,1.01,966,0.964,977,2.258,986,2.15,1011,2.223,1187,1.869,1188,3.691,1189,2.223,1190,2.223,1191,1.442,1192,2.4,1193,2.4,1194,2.989,1196,2.486,1197,2.4,1198,2.989,1199,3.279,1200,2.989,1202,2.486,1203,2.223,1204,2.223,1205,3.552,1206,2.223,1207,2.501,1208,2.486,1209,4.801,1210,4.358,1211,5.131,1212,2.486,1213,3.279,1214,3.668,1215,2.486,1216,2.486,1217,2.486,1218,2.046,1219,2.486,1220,2.486,1221,2.486,1222,2.486,1223,2.486,1224,2.486,1225,2.486,1226,2.486,1227,2.486,1228,2.486,1229,2.223,1230,3.858,1231,2.486,1232,2.486,1233,2.486,1234,2.223,1235,2.223,1236,2.486,1237,2.223,1238,2.486,1239,3.279,1240,2.127,1241,2.758,1242,3.668,1243,4.811,1244,3.668,1245,2.026,1246,2.486,1247,2.486,1248,2.486,1249,2.486,1250,2.486,1251,2.486,1271,1.529,1283,1.442,1352,2.223,1398,1.627,1404,2.758,1408,2.639,1462,1.869,1477,2.223,1481,2.486,1553,4.811,1554,2.486,1555,5.059,1556,4.257,1557,2.885,1558,2.885,1559,2.885,1560,3.668,1561,3.279,1562,2.885,1563,3.279,1564,2.885,1565,2.885,1566,2.885,1567,2.885]],["title/components/ForgotPasswordComponent.html",[0,0.068,153,0.591]],["body/components/ForgotPasswordComponent.html",[0,0.093,1,0.44,2,0.79,3,0.233,4,0.106,5,0.538,6,0.564,7,0.564,8,0.564,9,0.106,15,0.538,16,1.419,17,1.417,18,0.512,20,0.829,22,0.829,24,0.156,25,0.349,27,0.323,30,0.459,33,2.152,34,2.52,35,1.553,36,0.365,38,0.237,39,0.018,40,0.293,41,0.28,42,0.237,51,0.397,52,0.717,54,0.549,59,3.746,67,0.892,68,0.844,69,0.374,70,0.22,71,1.464,72,1.385,73,0.999,74,0.121,75,0.007,76,0.829,85,4.848,94,3.024,95,3.533,101,1.899,104,3.645,109,1.573,110,1.657,111,1.43,112,1.247,113,1.723,114,1.565,115,1.198,116,0.512,117,0.829,118,0.79,119,0.463,120,1.083,121,0.564,122,0.564,123,0.463,124,0.79,125,0.688,126,0.829,127,0.463,128,0.564,129,0.463,130,0.779,131,0.463,132,0.564,133,0.463,134,0.512,135,0.564,136,0.487,137,0.829,138,0.463,139,0.564,140,0.463,141,0.417,142,0.564,143,0.463,144,0.538,145,0.564,146,0.44,147,0.829,148,0.463,149,0.829,150,0.463,151,0.538,152,0.564,153,0.889,154,1.446,155,0.829,156,0.463,157,0.564,158,0.463,159,0.564,160,0.463,161,0.564,162,0.463,163,0.564,164,0.44,165,0.564,166,0.487,167,0.564,168,0.487,169,0.758,170,0.564,171,0.463,172,0.564,173,0.463,174,0.564,175,0.564,176,0.463,177,0.564,178,0.463,179,0.564,180,0.44,181,1.047,182,0.487,183,0.564,184,0.463,185,0.564,186,0.463,187,0.564,188,0.44,189,0.564,190,0.463,191,0.564,192,0.463,193,0.564,194,0.463,195,0.564,196,0.538,197,0.44,198,0.538,199,0.564,200,0.01,201,0.01,235,0.649,265,1.929,269,3.39,272,1.094,282,0.996,287,2.878,297,1.652,298,1.385,308,2.595,317,3.024,318,3.024,320,3.024,330,2.595,347,1.549,371,3.317,372,3.317,373,3.317,374,1.803,375,1.744,377,1.42,380,1.628,381,1.628,383,1.388,384,1.523,385,1.573,386,1.145,387,1.503,388,1.549,389,1.184,390,1.435,391,1.247,392,2.035,397,1.297,398,1.046,423,1.766,426,2.171,432,3.951,434,1.341,438,1.254,440,1.145,441,1.145,444,1.674,447,1.628,449,1.803,452,2.13,453,2.12,454,2.098,456,1.438,458,1.723,459,1.752,460,1.43,461,1.254,462,2.286,463,1.58,464,1.766,465,2.685,466,1.553,468,1.075,469,1.075,470,1.075,471,2.098,472,1.075,473,1.128,474,1.873,475,1.826,476,1.454,477,1.094,484,1.969,485,1.705,486,1.741,493,1.464,495,0.853,496,0.853,499,1.929,509,0.853,531,2.101,533,0.815,566,1.766,571,2.52,578,1.128,595,1.658,604,1.787,606,1.873,616,2.551,617,2.281,618,1.929,628,1.787,635,1.58,637,1.553,656,2.428,658,1.438,659,2.267,667,0.893,668,2.811,681,3.493,714,2.152,813,5.448,882,3.652,887,2.393,900,3.71,901,3.71,903,3.71,928,2.058,961,2.002,962,1.438,963,1.246,964,1.507,965,1.652,966,2.164,967,2.595,968,1.766,969,1.965,970,1.965,971,1.965,973,1.246,975,1.899,985,1.385,986,1.965,987,1.899,988,2.058,995,2.281,996,4.334,997,3.71,998,3.71,999,2.281,1000,2.525,1001,2.525,1002,3.317,1003,1.899,1004,1.464,1005,2.258,1006,1.464,1007,3.71,1008,2.525,1009,1.652,1013,2.258,1016,2.258,1161,2.595,1207,2.807,1218,1.185,1256,1.553,1257,1.553,1273,1.553,1277,1.553,1341,1.652,1358,2.412,1468,1.652,1469,1.652,1470,1.652,1502,3.71,1505,2.595,1506,2.428,1511,2.79,1568,6.093,1569,2.258,1570,4.809,1571,4.398,1572,3.71,1573,3.585,1574,5.105,1575,4.398,1576,4.398,1577,3.933,1578,4.848,1579,4.334,1580,5.627,1581,2.258,1582,4.306,1583,2.931,1584,3.024,1585,2.79,1586,2.931,1587,4.848,1588,4.306,1589,3.71,1590,3.71,1591,2.931,1592,3.71,1593,3.317,1594,4.306,1595,3.71,1596,3.024,1597,3.076,1598,3.024,1599,2.931,1600,2.931,1601,2.525,1602,2.931,1603,2.931,1604,2.931,1605,2.931,1606,2.931,1607,2.931,1608,2.931,1609,2.931,1610,2.931,1611,2.931,1612,2.931,1613,2.931,1614,2.931,1615,2.931,1616,3.951,1617,3.71,1618,4.155,1619,3.317,1620,3.317,1621,3.317,1622,3.024,1623,4.848,1624,3.71,1625,3.71,1626,3.71,1627,3.317,1628,3.317,1629,2.931,1630,2.931,1631,4.209,1632,1.899,1633,1.652,1634,1.652,1635,1.652,1636,2.258,1637,1.899,1638,3.024,1639,2.258,1640,2.525,1641,2.931,1642,4.306,1643,2.931,1644,2.525,1645,2.525,1646,2.258,1647,2.931,1648,2.931]],["title/injectables/FormatService.html",[202,0.867,1064,1.868]],["body/injectables/FormatService.html",[3,0.209,4,0.183,9,0.183,24,0.183,27,0.467,36,0.368,38,0.571,39,0.018,40,0.368,41,0.329,42,0.571,51,0.458,54,0.991,63,1.227,69,0.291,70,0.379,74,0.209,75,0.011,78,2.239,87,1.227,144,1.422,200,0.014,201,0.014,202,1.445,204,2.043,216,1.539,225,2.263,226,2.148,231,2.85,235,1.603,282,1.035,434,1.422,1021,3.806,1029,3.683,1064,3.112,1509,3.892,1649,4.353,1650,6.228,1651,6.228,1652,6.228,1653,6.228,1654,5.052,1655,5.052,1656,6.228,1657,5.052,1658,6.228,1659,6.228,1660,6.228,1661,4.797,1662,7.047,1663,6.228,1664,5.052,1665,6.228,1666,5.052,1667,6.228,1668,5.052,1669,5.052,1670,5.052,1671,5.052,1672,5.052,1673,5.052,1674,5.052,1675,6.228,1676,6.228,1677,5.052,1678,5.365,1679,5.365,1680,6.228,1681,6.228,1682,6.228,1683,6.228,1684,5.052,1685,6.228,1686,4.353,1687,6.228,1688,6.228,1689,5.052,1690,5.365,1691,4.353,1692,5.052,1693,6.228,1694,6.228,1695,5.052,1696,6.228,1697,5.052,1698,4.353,1699,5.052]],["title/injectables/GenerateIdService.html",[202,0.867,1700,2.625]],["body/injectables/GenerateIdService.html",[3,0.245,4,0.214,9,0.214,24,0.214,27,0.513,36,0.308,38,0.479,39,0.018,40,0.308,41,0.276,42,0.479,51,0.374,69,0.341,70,0.443,74,0.245,75,0.013,78,1.991,200,0.016,201,0.016,202,1.586,204,2.389,225,2.646,226,2.513,282,0.982,434,1.192,1029,3.606,1700,4.802,1701,5.892,1702,5.091,1703,6.839,1704,6.839,1705,5.909,1706,4.552,1707,5.909,1708,5.909,1709,5.909,1710,5.909]],["title/components/HeaderComponent.html",[0,0.068,156,0.591]],["body/components/HeaderComponent.html",[0,0.077,1,0.319,2,0.619,3,0.088,4,0.077,5,0.39,6,0.649,7,0.41,8,0.41,9,0.122,13,1.299,14,1.466,15,0.39,16,1.381,17,1.378,18,0.372,20,0.649,22,0.649,24,0.217,25,0.273,27,0.253,28,2.026,30,0.359,33,2.093,34,2.134,35,3.067,36,0.366,38,0.339,39,0.018,40,0.302,41,0.302,42,0.339,51,0.392,52,0.704,54,0.788,59,1.901,63,0.819,66,1.901,67,0.824,68,0.745,69,0.405,70,0.16,71,1.064,72,1.006,73,1.105,74,0.088,75,0.005,76,1.114,87,0.819,109,1.669,110,1.685,111,1.571,112,1.456,113,1.817,114,1.762,115,1.762,116,0.372,117,0.806,118,0.619,119,0.336,120,0.917,121,0.41,122,0.41,123,0.336,124,0.768,125,0.7,126,0.649,127,0.336,128,0.41,129,0.336,130,0.838,131,0.336,132,0.41,133,0.336,134,0.372,135,0.41,136,0.354,137,0.649,138,0.336,139,0.41,140,0.336,141,0.596,142,0.41,143,0.336,144,0.39,145,0.41,146,0.319,147,0.649,148,0.336,149,0.649,150,0.336,151,0.39,152,0.41,153,0.336,154,0.41,155,0.649,156,0.753,157,0.41,158,0.336,159,0.41,160,0.336,161,0.41,162,0.336,163,0.41,164,0.319,165,0.41,166,0.354,167,0.41,168,0.354,169,0.454,170,0.41,171,0.336,172,0.41,173,0.336,174,0.41,175,0.41,176,0.336,177,0.41,178,0.336,179,0.41,180,0.319,181,0.372,182,0.354,183,0.41,184,0.336,185,1,186,0.336,187,0.41,188,0.319,189,0.41,190,0.336,191,0.41,192,0.336,193,0.41,194,0.336,195,1.114,196,0.39,197,0.319,198,0.39,199,0.41,200,0.008,201,0.008,203,3.067,205,1.2,216,1.276,235,0.472,243,1.609,254,1.51,258,2.1,272,1.404,278,2.598,282,0.696,287,1.2,297,1.2,298,1.006,299,0.905,347,1.668,367,2.837,374,1.684,375,1.611,377,1.901,380,1.336,381,1.076,383,1.456,384,1.754,385,1.738,386,1.381,387,1.65,388,1.639,389,1.525,390,1.616,391,1.543,394,1.336,395,1.399,396,2.341,397,1.211,398,1.261,399,1.685,401,1.283,416,2.381,434,1.379,438,1.387,440,1.381,441,1.381,442,2.026,444,1.596,447,1.847,449,1.88,452,2.284,453,1.657,454,1.668,456,1.846,458,1.471,459,1.784,460,1.61,461,1.387,463,1.748,465,1.51,468,0.781,469,0.781,470,0.781,471,1.668,472,1.238,473,1.299,474,1.238,475,1.452,476,1.601,477,1.404,478,2.032,484,1.18,485,2.229,486,0.861,487,1.006,488,2.065,493,1.064,494,2.032,495,1.387,496,1.387,497,1.006,498,1.876,508,2.134,509,1.512,513,2.381,514,1.51,531,1.969,533,0.938,562,1.379,564,2.134,571,3.061,578,0.82,579,2.871,580,1.434,581,2.361,595,1.299,604,1.466,606,1.537,611,0.953,615,1.064,618,2.134,635,1.238,645,2.598,658,1.399,659,0.745,662,0.82,663,1.128,667,1.764,668,1.064,671,2.561,775,1.834,776,1.834,781,1.834,782,1.834,794,1.834,795,1.834,816,1.2,877,1.694,887,2.026,913,3.75,932,1.901,937,1.064,940,0.905,961,1.127,962,1.127,964,0.745,966,2.065,969,0.82,970,0.82,971,0.82,973,2.462,977,2.1,984,2.032,985,1.006,986,2,993,1.128,994,2.454,995,2.219,999,1.128,1004,1.064,1006,1.064,1022,1.064,1029,1.685,1063,2.713,1064,2.893,1078,2.871,1079,2.893,1092,2.368,1119,1.128,1120,1.379,1121,1.283,1122,1.283,1126,1.283,1128,2.032,1187,2.185,1188,3.812,1191,1.685,1192,1.2,1207,1.876,1209,4.001,1213,1.64,1218,1.364,1230,2.185,1239,1.64,1240,2.761,1252,1.2,1253,1.283,1254,1.379,1255,3.579,1256,3.535,1257,3.535,1258,3.579,1259,3.579,1260,3.365,1261,3.579,1262,2.185,1263,1.379,1264,2.928,1265,2.871,1266,1.379,1267,1.379,1268,1.379,1269,2.185,1270,1.379,1271,1.787,1272,1.379,1273,3.276,1274,1.379,1275,1.379,1276,1.283,1277,3.067,1278,1.379,1279,1.283,1280,1.283,1281,2.524,1282,2.713,1283,1.064,1284,1.379,1285,1.379,1286,1.379,1287,2.524,1288,1.283,1289,2.032,1290,1.283,1291,4.103,1292,1.283,1293,1.379,1294,2.185,1295,2.524,1296,2.361,1297,2.713,1298,1.283,1299,3.087,1300,1.283,1301,2.032,1302,1.379,1303,1.379,1312,1.64,1319,1.901,1333,1.834,1358,1.594,1360,3.227,1390,3.087,1399,3.067,1407,4.196,1408,2.454,1432,1.283,1433,1.379,1434,1.495,1435,1.495,1436,1.495,1459,2.368,1461,2.368,1466,1.283,1467,3.671,1468,1.2,1469,1.2,1470,1.2,1474,1.379,1477,1.64,1513,4.256,1519,2.598,1563,2.598,1585,2.185,1597,1.283,1632,1.379,1633,1.2,1634,1.2,1635,1.2,1640,1.834,1644,1.834,1711,1.834,1712,2.129,1713,3.373,1714,4.189,1715,4.765,1716,4.765,1717,3.609,1718,4.76,1719,4.765,1720,2.906,1721,4.765,1722,4.189,1723,4.189,1724,4.189,1725,4.189,1726,3.373,1727,2.129,1728,2.129,1729,2.129,1730,2.129,1731,2.129,1732,2.129,1733,1.834,1734,2.129,1735,3.609,1736,2.906,1737,2.906,1738,2.129,1739,3.373,1740,2.129,1741,2.129,1742,3.671,1743,2.598,1744,1.834,1745,2.129,1746,2.598,1747,3.373,1748,2.906,1749,2.129,1750,2.129,1751,2.129,1752,2.129,1753,2.129,1754,2.906,1755,3.373,1756,1.834,1757,5.194,1758,1.834,1759,2.129,1760,2.129,1761,2.129,1762,1.64,1763,2.129,1764,2.129,1765,1.834,1766,1.834,1767,1.495,1768,2.906,1769,3.373,1770,3.373,1771,3.373,1772,2.598,1773,2.906,1774,2.129,1775,2.129,1776,3.373,1777,1.64,1778,2.129,1779,4.189,1780,4.189,1781,5.194,1782,2.129,1783,2.129,1784,2.598,1785,5.457,1786,1.834,1787,1.834,1788,2.906,1789,1.834,1790,3.373,1791,3.373,1792,2.129]],["title/directives/IfChangedDirective.html",[119,0.591,197,0.561]],["body/directives/IfChangedDirective.html",[0,0.133,3,0.184,4,0.161,5,1.233,9,0.161,15,0.814,16,1.053,24,0.161,30,0.612,36,0.363,38,0.515,39,0.018,40,0.332,41,0.325,42,0.515,51,0.426,52,0.857,63,1.394,68,1.064,69,0.331,70,0.333,74,0.184,75,0.01,76,1.224,78,1.293,87,1.394,119,0.907,196,0.814,197,0.861,198,1.308,200,0.013,201,0.013,211,2.868,216,1.353,228,2.441,254,2.57,272,1.918,282,1.222,513,3.479,523,3.778,612,4.12,613,4.899,617,3.37,639,4.764,640,6.144,828,3.971,887,3.27,1059,4.516,1123,2.876,1124,4.356,1125,3.42,1140,4.466,1141,5.999,1323,3.832,1503,4.899,1506,3.585,1510,4.889,1793,6.144,1794,3.825,1795,7.592,1796,4.44,1797,7.432,1798,7.132,1799,6.724,1800,4.44,1801,5.74,1802,6.36,1803,6.36,1804,7.354,1805,4.466,1806,5.48,1807,6.36,1808,7.132,1809,6.144,1810,7.132,1811,7.132,1812,6.36,1813,6.36,1814,6.36,1815,5.74,1816,6.36,1817,6.36,1818,6.36,1819,6.724,1820,4.44,1821,5.74,1822,4.44,1823,4.44,1824,4.44,1825,4.44,1826,5.48,1827,4.44,1828,5.74,1829,5.74,1830,4.44,1831,4.44,1832,4.44]],["title/injectables/IfChangedService.html",[202,0.867,1059,2.253]],["body/injectables/IfChangedService.html",[3,0.237,4,0.207,9,0.207,24,0.207,25,0.544,27,0.503,36,0.383,38,0.464,39,0.018,40,0.298,41,0.333,42,0.464,51,0.425,52,0.729,67,0.814,68,0.96,69,0.33,70,0.429,74,0.237,75,0.013,200,0.015,201,0.015,202,1.557,204,2.314,235,1.268,243,2.074,604,2.349,628,2.349,1059,4.044,1123,4.851,1124,4.851,1826,6.136,1833,4.93,1834,7.122,1835,7.347,1836,6.712,1837,5.722,1838,6.712,1839,5.722,1840,5.722,1841,5.722,1842,6.712]],["title/components/ImprintComponent.html",[0,0.068,158,0.591]],["body/components/ImprintComponent.html",[0,0.119,1,0.704,2,1.091,3,0.194,4,0.17,5,0.861,6,0.903,7,0.903,8,0.903,9,0.17,15,0.861,16,1.459,17,1.458,18,0.82,20,1.144,22,1.144,24,0.17,27,0.446,36,0.31,39,0.018,40,0.369,41,0.219,51,0.377,52,0.758,69,0.271,70,0.352,74,0.194,75,0.011,95,3.352,116,0.82,117,1.144,118,1.091,119,0.741,120,1.321,121,0.903,122,0.903,123,0.741,124,1.091,125,0.88,126,1.144,127,0.741,128,0.903,129,0.741,130,0.715,131,0.741,132,0.903,133,0.741,134,0.82,135,0.903,136,0.78,137,1.144,138,0.741,139,0.903,140,0.741,141,0.668,142,0.903,143,0.741,144,0.861,145,0.903,146,0.704,147,1.144,148,0.741,149,1.144,150,0.741,151,0.861,152,0.903,153,0.741,154,0.903,155,1.144,156,0.741,157,0.903,158,1.084,159,0.903,160,0.741,161,0.903,162,0.741,163,0.903,164,0.704,165,0.903,166,0.78,167,0.903,168,0.78,169,0.801,170,0.903,171,0.741,172,0.903,173,0.741,174,0.903,175,0.903,176,0.741,177,0.903,178,0.741,179,0.903,180,0.704,181,0.82,182,0.78,183,0.903,184,0.741,185,0.903,186,0.741,187,0.903,188,0.704,189,0.903,190,0.741,191,0.903,192,0.741,193,0.903,194,0.741,195,0.903,196,0.861,197,0.704,198,0.861,199,0.903,200,0.013,201,0.013,272,1.192,282,0.78,347,1.04,374,1.736,383,1.04,385,1.139,387,1.088,388,1.04,389,1.088,390,1.04,391,1.04,434,1.2,444,1.139,449,1.736,458,1.192,476,1.088,477,1.511,582,2.486,595,2.289,606,2.395,616,3.262,618,2.663,635,2.182,681,2.971,887,2.529,959,3.295,961,1.567,962,1.567,963,1.995,964,1.642,965,2.645,967,2.827,969,1.807,970,1.807,971,1.807,1014,3.295,1193,2.645,1584,4.176,1585,3.852,1587,5.123,1618,3.583,1843,4.043,1844,5.287,1845,6.528,1846,5.947,1847,6.864,1848,6.864,1849,4.692,1850,4.692,1851,4.692,1852,5.029,1853,4.581,1854,5.947,1855,5.947,1856,5.947,1857,5.123,1858,5.947,1859,5.123,1860,5.947]],["title/components/IntroComponent.html",[0,0.068,160,0.591]],["body/components/IntroComponent.html",[0,0.12,1,0.554,2,0.931,3,0.153,4,0.134,5,0.677,6,0.711,7,0.711,8,0.711,9,0.134,13,2.233,14,2.186,15,0.677,16,1.441,17,1.439,18,0.645,20,0.977,22,0.977,24,0.21,25,0.411,27,0.381,28,2.656,36,0.326,39,0.018,40,0.302,41,0.271,51,0.321,52,0.739,63,0.897,67,0.825,68,0.781,69,0.213,70,0.277,74,0.21,75,0.012,101,3.757,109,1.177,110,0.857,116,0.645,117,0.977,118,0.931,119,0.583,120,1.202,121,0.711,122,0.711,123,0.583,124,0.931,125,0.781,126,0.977,127,0.583,128,0.711,129,0.583,130,0.611,131,0.583,132,0.711,133,0.583,134,0.645,135,0.711,136,0.614,137,0.977,138,0.583,139,0.711,140,0.583,141,0.525,142,0.711,143,0.583,144,0.677,145,0.711,146,0.554,147,0.977,148,0.583,149,0.977,150,0.583,151,0.677,152,0.711,153,0.583,154,0.711,155,0.977,156,0.583,157,0.711,158,0.583,159,0.711,160,1.115,161,0.711,162,0.583,163,0.711,164,0.554,165,0.711,166,0.614,167,0.711,168,0.614,169,0.684,170,0.711,171,0.583,172,0.711,173,0.583,174,0.711,175,0.711,176,0.583,177,0.711,178,0.583,179,0.711,180,0.554,181,0.645,182,0.614,183,0.711,184,0.583,185,0.711,186,0.583,187,0.711,188,0.554,189,0.711,190,0.583,191,0.711,192,0.583,193,0.711,194,0.583,195,0.711,196,0.677,197,0.554,198,0.677,199,0.711,200,0.012,201,0.012,347,1.384,367,3.002,374,1.35,375,2.036,377,1.738,379,2.392,384,1.91,387,1.177,388,0.818,389,0.857,396,2.345,398,0.897,426,2.466,434,1.545,444,1.739,447,1.992,449,0.982,452,1.767,453,1.619,456,1.233,459,1.926,460,1.587,461,1.689,471,1.292,472,2.292,475,2.061,486,2.648,488,1.233,495,1.478,496,1.478,531,2.061,571,3.429,575,2.392,604,2.368,628,2.03,658,1.233,667,1.547,668,3.579,674,3.182,960,2.593,968,2.225,973,1.57,995,3.74,996,4.811,1006,2.536,1197,2.082,1207,2.932,1218,1.493,1271,2.689,1288,2.225,1292,3.058,1377,3.495,1378,5.043,1407,3.945,1474,2.392,1691,4.373,1861,3.182,1862,5.076,1863,5.076,1864,6.246,1865,5.076,1866,5.8,1867,5.076,1868,5.8,1869,5.8,1870,5.8,1871,3.693,1872,5.076,1873,4.373,1874,3.693,1875,3.693,1876,3.693,1877,3.693,1878,3.693,1879,3.693,1880,3.693,1881,3.693,1882,3.288,1883,3.693,1884,3.693,1885,3.693,1886,3.693,1887,3.693,1888,5.8,1889,3.693,1890,5.211,1891,2.845,1892,3.693,1893,5.076,1894,5.076,1895,3.693,1896,3.693,1897,3.693,1898,7.248,1899,3.693,1900,6.246,1901,3.693,1902,3.693,1903,4.811,1904,3.693,1905,3.182,1906,2.593,1907,5.076,1908,3.693,1909,6.246,1910,3.693,1911,3.693,1912,3.693,1913,3.693]],["title/components/LoginComponent.html",[0,0.068,162,0.591]],["body/components/LoginComponent.html",[0,0.105,1,0.4,2,0.736,3,0.11,4,0.096,5,0.489,6,0.513,7,0.513,8,0.513,9,0.096,13,1.545,14,1.689,15,0.489,16,1.409,17,1.406,18,0.465,20,0.772,22,0.772,24,0.096,25,0.325,27,0.301,28,2.283,30,0.284,33,2.005,34,2.405,36,0.384,38,0.216,39,0.018,40,0.28,41,0.309,42,0.216,51,0.439,52,0.872,54,0.8,59,2.72,67,0.986,68,0.934,69,0.31,70,0.2,72,1.259,73,0.931,74,0.11,75,0.006,78,0.776,95,3.412,109,1.563,110,1.642,111,1.226,112,1.069,113,1.758,114,1.684,115,1.116,116,0.465,117,0.772,118,0.736,119,0.421,120,1.033,121,0.513,122,0.513,123,0.421,124,0.736,125,0.65,126,0.772,127,0.421,128,0.513,129,0.421,130,0.899,131,0.421,132,0.513,133,0.421,134,0.465,135,0.513,136,0.443,137,0.772,138,0.421,139,0.513,140,0.421,141,0.379,142,0.513,143,0.421,144,0.489,145,0.513,146,0.4,147,0.772,148,0.421,149,0.772,150,0.421,151,0.489,152,0.513,153,0.421,154,0.929,155,0.772,156,0.421,157,0.513,158,0.421,159,0.513,160,0.421,161,0.513,162,0.848,163,0.513,164,0.4,165,0.513,166,0.443,167,0.513,168,0.443,169,0.541,170,0.513,171,0.421,172,0.513,173,0.421,174,0.513,175,0.513,176,0.421,177,0.513,178,0.421,179,0.513,180,0.4,181,0.465,182,0.443,183,0.513,184,0.421,185,0.513,186,0.421,187,0.513,188,0.4,189,0.513,190,0.421,191,0.513,192,0.421,193,0.513,194,0.421,195,0.513,196,0.489,197,0.4,198,0.489,199,0.513,200,0.009,201,0.009,215,2.72,216,0.812,222,2.053,272,1.364,282,1.044,287,2.72,297,1.502,298,1.259,302,1.726,308,3.235,317,2.817,318,3.771,330,2.417,333,2.417,339,2.817,347,1.432,374,1.531,375,1.343,377,1.684,380,1.713,381,1.539,383,1.465,384,1.226,385,1.47,386,1.067,387,1.563,388,1.594,389,1.336,390,1.569,391,1.341,392,1.259,394,1.28,396,1.078,397,1.226,398,1.172,423,1.606,426,2.574,434,0.81,438,1.677,440,1.67,441,1.67,444,1.684,447,1.713,449,1.531,452,2.192,453,2.149,454,2.314,455,2.296,456,1.794,457,2.72,458,1.815,459,1.538,460,1.226,462,2.405,463,2.472,468,1.472,469,1.472,470,1.472,471,2.016,472,1.771,473,1.858,474,1.771,475,1.47,476,1.404,477,1.226,484,2.358,485,1.34,486,1.622,488,1.612,493,2.005,495,0.776,496,0.776,499,1.193,509,0.776,512,2.817,531,2.053,533,0.741,566,2.417,595,1.545,604,1.404,606,1.771,610,3.235,616,1.331,617,2.126,618,2.405,624,2.262,628,0.933,635,1.472,645,3.091,658,1.612,659,1.689,660,1.871,681,3.024,714,2.005,828,2.126,877,2.447,889,2.417,890,2.262,891,2.817,940,1.706,950,2.817,959,1.871,960,1.871,961,1.612,962,0.89,963,1.133,964,0.933,965,1.502,966,1.794,967,2.417,968,2.417,969,2.418,970,2.418,971,2.418,973,1.706,979,1.412,981,1.726,982,1.726,983,1.726,985,1.259,986,2.067,987,2.599,992,3.457,993,1.412,994,1.259,1004,1.331,1009,1.502,1014,1.871,1022,2.005,1161,2.417,1166,3.457,1175,3.091,1180,2.817,1191,1.331,1195,1.726,1200,1.871,1207,1.193,1218,1.951,1230,1.726,1241,1.726,1256,2.126,1257,2.126,1273,2.126,1277,2.126,1341,1.502,1358,1.259,1379,1.871,1465,1.606,1468,1.502,1469,1.502,1470,1.502,1505,2.417,1506,2.262,1570,4.364,1573,3.388,1575,4.157,1577,3.717,1581,2.053,1592,5.214,1593,4.662,1596,2.817,1597,3.47,1598,2.817,1616,4.044,1618,3.646,1619,3.091,1620,3.091,1621,3.091,1622,3.771,1631,5.375,1632,1.726,1633,2.262,1634,2.72,1635,2.72,1636,2.053,1637,1.726,1638,2.817,1639,2.053,1742,2.053,1914,2.296,1915,4.825,1916,4.012,1917,4.825,1918,4.825,1919,4.825,1920,4.157,1921,4.157,1922,4.157,1923,5.759,1924,5.37,1925,4.157,1926,5.37,1927,5.37,1928,4.626,1929,4.626,1930,6.052,1931,4.012,1932,2.665,1933,2.665,1934,4.012,1935,2.665,1936,4.012,1937,4.012,1938,2.665,1939,5.214,1940,3.457,1941,2.665,1942,3.126,1943,2.665,1944,3.457,1945,4.012,1946,2.665,1947,2.599,1948,2.599,1949,3.091,1950,3.091,1951,2.665,1952,2.665,1953,4.012,1954,2.665,1955,4.012,1956,2.665,1957,4.012,1958,2.665,1959,3.457,1960,2.665,1961,2.665,1962,2.665,1963,2.665,1964,2.665,1965,3.457,1966,2.665,1967,2.665,1968,2.665,1969,2.665,1970,2.665,1971,4.012,1972,2.665,1973,4.157,1974,2.296,1975,2.296,1976,2.665,1977,2.296,1978,2.665,1979,2.665,1980,2.665,1981,2.665,1982,2.665,1983,4.012,1984,5.37,1985,4.012,1986,3.457,1987,3.091,1988,4.012,1989,4.012,1990,3.457,1991,4.012,1992,3.457,1993,4.012,1994,4.012,1995,1.871,1996,4.825,1997,2.296,1998,2.665,1999,2.665,2000,1.871,2001,2.296,2002,2.665]],["title/components/MainscreenComponent.html",[0,0.068,164,0.561]],["body/components/MainscreenComponent.html",[0,0.089,1,0.404,2,0.742,3,0.111,4,0.097,5,0.494,6,0.778,7,0.518,8,0.518,9,0.146,13,1.557,14,1.699,15,0.494,16,1.41,17,1.414,18,0.47,20,0.778,22,0.778,24,0.176,25,0.328,27,0.303,28,2.295,30,0.431,34,1.206,36,0.378,38,0.218,39,0.018,40,0.281,41,0.31,42,0.218,51,0.307,52,0.688,54,0.515,61,4.817,67,0.922,68,0.849,69,0.405,70,0.202,72,1.272,73,1.342,74,0.111,75,0.006,76,0.778,87,1.53,109,1.538,110,1.409,111,1.234,112,1.282,113,1.435,114,1.125,115,1.125,116,0.47,117,0.934,118,0.742,119,0.425,120,1.039,121,0.518,122,0.518,123,0.425,124,0.891,125,0.779,126,0.778,127,0.425,128,0.518,129,0.425,130,0.758,131,0.425,132,0.518,133,0.425,134,0.47,135,0.518,136,0.447,137,0.778,138,0.425,139,0.518,140,0.425,141,0.691,142,0.518,143,0.425,144,0.494,145,0.518,146,0.404,147,0.778,148,0.425,149,0.778,150,0.425,151,0.742,152,0.518,153,0.425,154,0.518,155,0.778,156,0.425,157,0.518,158,0.425,159,0.518,160,0.425,161,0.518,162,0.425,163,0.518,164,0.81,165,0.518,166,0.447,167,0.518,168,0.447,169,0.779,170,0.518,171,0.425,172,0.518,173,0.425,174,0.518,175,0.518,176,0.425,177,0.518,178,0.425,179,0.518,180,0.404,181,0.47,182,0.447,183,0.518,184,0.425,185,0.934,186,0.425,187,0.518,188,0.404,189,0.518,190,0.425,191,0.518,192,0.425,193,0.518,194,0.425,195,0.518,196,0.494,197,0.404,198,0.494,199,0.518,200,0.009,201,0.009,203,3.634,205,1.518,216,0.82,243,2.083,258,2.339,272,0.684,282,0.961,285,2.279,299,1.145,347,1.539,348,2.32,367,2.68,374,1.291,375,1.753,377,1.879,380,0.859,381,0.859,383,1.469,384,1.803,385,1.665,386,1.435,387,1.63,388,1.633,389,1.538,390,1.496,391,1.346,394,0.859,395,0.899,397,1.47,398,1.475,399,1.345,416,1.345,434,1.444,438,1.684,440,1.291,441,1.291,442,2.295,444,1.61,447,2.01,449,1.538,452,2.317,453,1.549,454,1.889,456,1.932,458,1.372,459,1.743,460,1.372,461,0.784,463,1.484,464,1.622,465,1.811,468,0.988,469,0.988,470,0.988,471,1.889,472,1.484,473,1.557,474,1.484,475,1.232,476,1.342,477,0.684,478,3.661,485,1.932,487,1.91,488,2.215,495,0.784,496,1.414,497,1.272,498,1.811,508,2.721,509,1.684,531,1.645,533,1.125,569,1.744,571,3.204,580,1.145,581,2.279,582,1.426,604,1.415,611,1.206,615,1.345,628,2.321,636,1.891,637,1.426,658,0.899,659,0.942,662,1.037,663,1.426,667,1.232,668,2.02,671,1.635,816,1.518,887,1.719,940,1.145,961,0.899,962,0.899,964,0.942,966,0.899,969,1.037,970,1.037,971,1.037,973,1.145,977,1.963,984,2.436,985,1.272,986,2.227,993,1.426,994,2.55,995,2.572,999,1.426,1006,1.345,1022,1.345,1063,3.936,1078,3.485,1079,3.239,1119,1.426,1120,1.744,1121,1.622,1126,1.622,1128,2.436,1187,1.744,1188,1.426,1192,1.518,1195,1.744,1237,2.074,1240,2.02,1252,1.518,1253,1.622,1254,1.744,1255,3.936,1256,3.681,1257,3.681,1258,3.936,1259,3.936,1260,3.747,1261,3.936,1262,2.619,1263,1.744,1264,3.261,1265,3.252,1266,1.744,1267,1.744,1268,1.744,1269,2.619,1270,1.744,1271,1.426,1272,1.744,1273,3.435,1274,1.744,1275,1.744,1276,1.622,1277,3.219,1278,1.744,1279,1.622,1280,1.622,1281,2.436,1282,3.145,1283,2.02,1284,1.744,1285,1.744,1286,1.744,1287,2.925,1288,1.622,1289,2.436,1290,1.622,1291,4.376,1292,1.622,1293,1.744,1294,2.619,1295,2.925,1296,2.737,1297,3.145,1298,1.622,1299,3.496,1300,1.622,1301,2.436,1302,1.744,1303,1.744,1390,3.496,1398,1.518,1399,3.435,1402,2.436,1404,1.744,1407,3.485,1408,2.733,1432,1.622,1433,1.744,1434,1.891,1435,1.891,1436,1.891,1482,2.074,1495,2.619,1762,2.074,1768,3.483,2003,2.32,2004,4.043,2005,2.692,2006,4.043,2007,4.855,2008,4.855,2009,4.855,2010,4.855,2011,4.855,2012,4.266,2013,4.855,2014,4.855,2015,5.397,2016,5.397,2017,3.065,2018,4.043,2019,2.692,2020,2.692,2021,4.043,2022,4.043,2023,2.692,2024,3.115,2025,4.65,2026,2.692,2027,2.692,2028,2.692,2029,2.692,2030,2.692,2031,2.692,2032,2.692,2033,2.692,2034,2.692,2035,2.692,2036,2.692,2037,2.692,2038,1.622,2039,4.043,2040,2.692,2041,4.043,2042,2.692,2043,2.692,2044,4.043,2045,2.692,2046,4.043,2047,6.076,2048,5.397,2049,4.043,2050,4.043,2051,2.32,2052,2.737,2053,2.32,2054,2.692,2055,2.692,2056,2.692,2057,2.692,2058,2.692,2059,2.692,2060,2.692]],["title/classes/Message.html",[75,0.008,169,0.504]],["body/classes/Message.html",[3,0.213,4,0.186,9,0.186,24,0.186,25,0.509,27,0.472,30,0.547,36,0.402,38,0.416,39,0.018,40,0.268,41,0.358,42,0.416,51,0.325,54,1.003,69,0.296,74,0.213,75,0.012,112,1.611,169,0.847,200,0.014,201,0.014,235,1.137,434,1.036,655,3.832,662,2.617,676,2.719,680,3.212,682,3.994,683,4.415,685,5.385,686,3.092,695,2.893,696,3.604,708,5.417,908,5.105,1021,4.098,1029,3.397,1043,5.417,2061,4.421,2062,7.27,2063,7.27,2064,6.263,2065,5.6,2066,6.288,2067,5.132,2068,5.132,2069,5.132,2070,5.132,2071,5.132,2072,5.132,2073,5.132,2074,5.132,2075,5.132,2076,5.132,2077,5.132,2078,5.132,2079,6.288,2080,5.132,2081,6.288,2082,5.132,2083,3.953,2084,4.421,2085,6.288,2086,5.132,2087,6.288,2088,5.132,2089,6.288,2090,5.132]],["title/components/MessageEditComponent.html",[0,0.068,171,0.591]],["body/components/MessageEditComponent.html",[0,0.09,1,0.417,2,0.759,3,0.115,4,0.101,5,0.509,6,0.534,7,0.534,8,0.534,9,0.212,15,0.509,16,1.413,17,1.411,18,0.485,20,0.796,22,0.796,24,0.15,25,0.335,27,0.31,30,0.441,36,0.386,38,0.475,39,0.018,40,0.341,41,0.336,42,0.475,51,0.431,52,0.811,54,0.852,67,0.589,68,0.666,69,0.377,70,0.208,73,1.36,74,0.115,75,0.011,76,0.952,109,1.426,110,1.518,111,1.052,112,1.096,113,1.634,114,1.771,115,1.71,116,0.485,117,0.796,118,0.759,119,0.439,120,1.055,121,0.534,122,0.534,123,0.439,124,0.759,125,0.858,126,0.796,127,0.439,128,0.534,129,0.439,130,0.498,131,0.439,132,0.534,133,0.439,134,0.485,135,0.534,136,0.462,137,0.796,138,0.439,139,0.534,140,0.439,141,0.395,142,0.534,143,0.439,144,0.509,145,0.534,146,0.417,147,1.31,148,0.439,149,0.796,150,0.439,151,0.509,152,0.534,153,0.439,154,0.534,155,0.796,156,0.439,157,0.534,158,0.439,159,0.534,160,0.439,161,0.534,162,0.439,163,0.534,164,0.417,165,0.534,166,0.462,167,0.534,168,0.462,169,1.039,170,0.534,171,0.866,172,0.534,173,0.439,174,0.534,175,0.534,176,0.439,177,0.534,178,0.439,179,0.534,180,0.417,181,0.485,182,0.462,183,0.534,184,0.439,185,0.534,186,0.439,187,0.534,188,0.417,189,0.534,190,0.439,191,0.534,192,0.439,193,0.534,194,0.439,195,0.534,196,0.509,197,0.417,198,0.509,199,0.534,200,0.009,201,0.009,211,2.068,216,1.994,228,1.181,231,2,243,1.44,254,1.853,258,2.37,265,1.853,272,1.052,282,1.022,298,1.312,299,1.181,347,1.605,374,1.837,375,0.773,377,2.028,383,1.411,384,1.562,385,1.546,386,1.457,387,1.551,388,1.55,389,1.271,390,1.508,391,1.299,392,2.59,394,0.886,395,0.928,396,2,397,1.257,398,1.201,423,1.673,426,1.181,438,1.44,440,1.1,441,1.1,442,1.181,444,1.201,445,3.532,447,1.748,452,2.037,453,1.87,454,1.731,456,1.831,458,0.706,459,1.257,460,1.257,461,0.809,462,1.853,463,2.151,468,1.019,469,1.019,470,1.019,471,2.151,472,1.518,473,1.593,474,1.518,475,1.261,476,1.477,477,1.813,483,1.673,484,2.29,485,2.186,486,2.217,487,2.59,488,1.382,493,2.471,495,1.707,496,1.707,499,2.455,509,0.809,514,2.455,518,2.493,523,2.192,531,1.67,533,0.773,564,2.215,575,2.681,578,1.593,580,1.76,584,2.139,595,1.593,604,1.448,606,2.011,611,2.455,614,3.565,618,2.455,635,1.518,652,3.81,658,1.382,659,1.918,662,1.069,663,1.471,667,0.846,671,1.673,822,5.727,877,2.485,881,3.551,884,4.261,908,3.473,927,1.95,932,1.566,936,1.95,937,1.388,939,1.95,940,1.76,941,1.95,966,2.053,969,1.069,970,1.069,971,1.069,973,1.181,975,3.551,979,2.62,986,2.366,994,1.312,1002,3.188,1003,1.799,1021,2.333,1118,1.673,1194,3.849,1205,1.95,1207,1.853,1280,1.673,1283,1.388,1300,1.673,1358,2.77,1398,1.566,1408,2.59,1419,2.681,1455,3.188,1503,3.188,1597,3.532,1633,1.566,1634,1.566,1635,1.566,1637,1.799,1767,1.95,1784,2.139,1947,2.681,1948,2.681,2012,3.473,2017,2.904,2038,1.673,2064,4.261,2091,6.405,2092,2.393,2093,4.946,2094,4.138,2095,4.946,2096,4.946,2097,4.946,2098,4.946,2099,4.946,2100,5.481,2101,5.481,2102,5.481,2103,3.565,2104,4.138,2105,5.481,2106,4.138,2107,5.481,2108,4.946,2109,4.946,2110,3.09,2111,2.777,2112,4.138,2113,2.777,2114,2.777,2115,2.777,2116,2.777,2117,3.565,2118,2.777,2119,4.138,2120,2.777,2121,2.777,2122,3.565,2123,4.138,2124,3.565,2125,4.138,2126,4.138,2127,2.777,2128,2.777,2129,2.777,2130,2.777,2131,2.777,2132,2.777,2133,2.777,2134,2.777,2135,2.777,2136,2.777,2137,2.777,2138,1.799,2139,4.138,2140,6.146,2141,2.777,2142,2.777,2143,2.777,2144,5.481,2145,2.777,2146,2.777,2147,2.777,2148,2.777,2149,2.777,2150,2.777,2151,2.393,2152,2.393,2153,2.777,2154,2.777,2155,4.138,2156,2.777,2157,2.777,2158,2.777,2159,4.138,2160,7.194,2161,4.946,2162,5.04,2163,2.139,2164,5.862,2165,5.481,2166,4.138,2167,2.777,2168,2.777,2169,2.777,2170,2.777,2171,5.481,2172,4.138,2173,2.777,2174,2.777,2175,2.777,2176,2.777]],["title/injectables/MessageFirebaseService.html",[202,0.867,2110,2.108]],["body/injectables/MessageFirebaseService.html",[0,0.086,3,0.137,4,0.12,9,0.12,24,0.12,25,0.382,27,0.353,30,0.502,36,0.388,38,0.545,39,0.018,40,0.351,41,0.346,42,0.581,51,0.463,52,0.76,54,0.948,63,1.588,67,0.779,68,0.738,69,0.403,70,0.249,73,1.27,74,0.137,75,0.008,76,1.416,78,1.904,87,1.722,125,0.447,130,0.399,151,0.864,169,1.066,200,0.011,201,0.011,202,1.093,204,1.342,225,1.486,226,1.411,231,2.975,243,2.109,258,2.546,282,1.087,434,0.67,509,0.966,518,2.838,520,3.592,523,3.158,531,1.435,544,5.086,592,3.592,604,1.649,624,2.656,655,4.398,662,3.029,675,2,680,3.09,759,2.33,877,3.038,889,2.838,890,2.656,893,5.136,899,3.308,932,3.942,937,3.145,1021,1.871,1085,2.838,1092,4.186,1094,4.592,1110,3.629,1323,3.592,1408,2.975,1506,3.687,1524,5.136,1700,4.186,1805,3.308,1809,5.136,2000,3.308,2017,1.758,2052,1.871,2065,4.85,2110,2.656,2138,4.845,2177,2,2178,4.718,2179,4.718,2180,5.477,2181,4.718,2182,5.477,2183,5.477,2184,5.477,2185,4.711,2186,4.711,2187,4.711,2188,4.059,2189,4.711,2190,4.711,2191,2.556,2192,5.945,2193,5.477,2194,4.059,2195,4.711,2196,3.319,2197,5.295,2198,4.711,2199,6.109,2200,4.711,2201,2.859,2202,5.136,2203,5.634,2204,4.059,2205,4.85,2206,4.711,2207,3.319,2208,4.711,2209,4.059,2210,5.961,2211,4.059,2212,3.319,2213,4.85,2214,4.711,2215,3.319,2216,3.319,2217,3.629,2218,4.059,2219,4.711,2220,3.319,2221,4.059,2222,4.711,2223,3.319,2224,2.556,2225,2.859,2226,2.859,2227,2.556,2228,2.859,2229,2.556,2230,2.556,2231,2.556,2232,2.556,2233,2.556,2234,2.556,2235,2.33,2236,2.556,2237,3.319,2238,3.319,2239,2.33,2240,3.319,2241,2.859,2242,2.859,2243,3.319,2244,5.477,2245,4.592,2246,4.592,2247,3.319,2248,3.319,2249,3.629,2250,4.711,2251,3.319,2252,4.711,2253,3.319,2254,4.059,2255,4.711,2256,3.319,2257,4.059,2258,5.477,2259,4.711,2260,3.629,2261,3.319,2262,3.629,2263,4.059,2264,3.319,2265,3.319,2266,4.592,2267,3.319,2268,4.718,2269,2.859,2270,2.859,2271,2.859,2272,2.859,2273,2.859,2274,5.477,2275,4.711,2276,4.711,2277,4.711]],["title/injectables/NotificationService.html",[202,0.867,882,2.108]],["body/injectables/NotificationService.html",[3,0.211,4,0.184,9,0.184,24,0.184,27,0.469,30,0.666,36,0.326,38,0.507,39,0.018,40,0.326,41,0.292,42,0.507,51,0.396,52,0.797,54,0.976,63,1.235,67,1.005,68,0.686,69,0.391,70,0.382,74,0.211,75,0.015,76,0.979,87,1.715,101,3.296,112,1.386,169,1.008,200,0.014,201,0.014,202,1.451,204,2.057,225,2.279,226,2.164,384,1.589,386,1.928,474,1.867,475,1.55,476,1.18,615,3.53,637,2.695,882,3.526,940,2.66,999,3.314,1006,3.847,1029,3.384,1128,4.08,1264,4.318,1287,4.615,1289,4.37,1295,4.507,1298,3.768,1323,3.768,1377,3.065,1399,3.911,1404,3.296,1433,3.296,2162,5.442,2278,4.383,2279,6.255,2280,5.088,2281,5.088,2282,6.255,2283,7.48,2284,5.088,2285,6.255,2286,6.772,2287,6.772,2288,7.065,2289,6.255,2290,4.818,2291,4.383,2292,5.088,2293,5.088,2294,5.088,2295,5.088,2296,5.088,2297,5.088,2298,5.088,2299,5.088,2300,5.088,2301,5.088,2302,5.088,2303,5.088,2304,5.088,2305,5.088,2306,5.088,2307,5.088,2308,5.088,2309,5.088]],["title/components/PrivacyPolicyComponent.html",[0,0.068,173,0.591]],["body/components/PrivacyPolicyComponent.html",[0,0.049,1,0.174,2,0.372,3,0.048,4,0.042,5,0.212,6,0.223,7,0.223,8,0.223,9,0.042,15,0.212,16,1.276,17,1.27,18,0.202,20,0.39,22,0.39,24,0.042,27,0.152,36,0.106,39,0.016,40,0.192,41,0.054,51,0.128,52,0.258,69,0.067,70,0.087,74,0.048,75,0.003,94,4.985,95,1.142,96,4.367,104,4.965,105,4.747,116,0.202,117,0.39,118,0.372,119,0.183,120,0.624,121,0.223,122,0.223,123,0.183,124,0.372,125,0.364,126,0.39,127,0.183,128,0.223,129,0.183,130,0.244,131,0.183,132,0.223,133,0.183,134,0.202,135,0.223,136,0.192,137,0.39,138,0.183,139,0.223,140,0.183,141,0.165,142,0.223,143,0.183,144,0.212,145,0.223,146,0.174,147,0.39,148,0.183,149,0.39,150,0.183,151,0.212,152,0.223,153,0.183,154,0.223,155,0.39,156,0.183,157,0.223,158,0.183,159,0.223,160,0.183,161,0.223,162,0.183,163,0.223,164,0.174,165,0.223,166,0.192,167,0.223,168,0.192,169,0.273,170,0.223,171,0.183,172,0.223,173,0.512,174,1.115,175,0.223,176,0.183,177,0.223,178,0.183,179,0.223,180,0.174,181,0.202,182,0.192,183,0.223,184,0.183,185,0.223,186,0.183,187,0.223,188,0.174,189,0.223,190,0.183,191,0.223,192,0.183,193,0.223,194,0.183,195,0.223,196,0.212,197,0.174,198,0.212,199,0.223,200,0.005,201,0.005,282,0.192,317,5.064,318,5.485,320,4.691,322,1.746,323,2.794,324,1.746,330,4.073,333,3.666,334,5.357,337,5.757,339,4.954,340,4.325,343,4.658,344,6.668,347,0.718,355,5.941,356,1.746,362,5.491,363,1.746,364,2.277,366,1.561,372,3.57,373,5.147,374,0.98,383,0.449,385,0.492,387,0.269,388,0.256,389,0.269,390,0.256,391,0.256,426,0.862,434,0.654,444,1.729,449,0.539,476,0.627,477,0.515,495,0.59,496,0.59,537,5.679,541,3.254,554,1.746,556,5.793,582,0.613,595,0.78,606,0.991,616,1.35,618,0.907,635,0.743,666,1.746,667,1.544,672,3.493,681,2.533,751,2.847,787,2.081,887,0.862,950,5.381,958,3.123,961,0.387,962,0.387,963,0.492,964,0.405,965,0.653,967,0.697,969,0.446,970,0.446,971,0.446,1009,0.653,1014,0.813,1025,1.313,1161,4.073,1164,4.658,1165,2.794,1167,2.794,1169,4.367,1175,5.73,1182,3.992,1193,0.653,1240,1.012,1296,1.142,1301,1.221,1377,2.443,1463,3.987,1466,0.697,1540,4.658,1546,0.997,1560,1.746,1584,1.423,1585,1.313,1618,3.554,1622,1.423,1623,1.746,1624,3.493,1625,4.192,1626,3.493,1628,4.165,1661,1.561,1777,3.123,1784,2.498,1853,5.078,1857,1.746,1859,1.746,1939,5.241,1944,2.794,1986,2.794,1987,4.807,2053,0.997,2310,2.328,2311,0.997,2312,2.498,2313,2.702,2314,2.026,2315,3.243,2316,3.243,2317,1.158,2318,1.158,2319,1.158,2320,1.158,2321,3.57,2322,4.544,2323,2.026,2324,4.054,2325,4.634,2326,4.054,2327,2.026,2328,1.158,2329,2.026,2330,4.054,2331,7.245,2332,2.026,2333,6.037,2334,6.761,2335,2.026,2336,5.407,2337,5.678,2338,4.054,2339,2.026,2340,3.243,2341,5.407,2342,1.158,2343,5.407,2344,4.054,2345,4.634,2346,5.407,2347,5.069,2348,1.158,2349,4.866,2350,4.054,2351,2.026,2352,2.026,2353,5.069,2354,6.761,2355,6.49,2356,4.634,2357,3.243,2358,2.026,2359,3.243,2360,2.026,2361,1.158,2362,4.054,2363,1.158,2364,4.054,2365,2.026,2366,2.026,2367,4.054,2368,5.069,2369,6.681,2370,2.026,2371,3.243,2372,4.054,2373,5.069,2374,5.241,2375,5.069,2376,2.026,2377,2.026,2378,3.243,2379,3.243,2380,5.591,2381,7.14,2382,7.1,2383,3.493,2384,2.026,2385,2.026,2386,2.026,2387,2.026,2388,5.886,2389,4.054,2390,2.026,2391,2.026,2392,2.026,2393,2.026,2394,2.026,2395,2.026,2396,2.026,2397,2.026,2398,2.026,2399,2.026,2400,2.026,2401,4.658,2402,2.026,2403,2.026,2404,2.026,2405,2.026,2406,5.069,2407,2.026,2408,3.243,2409,3.243,2410,4.054,2411,6.116,2412,1.158,2413,6.592,2414,6.761,2415,2.026,2416,4.054,2417,4.866,2418,3.243,2419,2.026,2420,5.407,2421,4.054,2422,3.243,2423,2.702,2424,4.054,2425,4.366,2426,5.899,2427,2.026,2428,2.026,2429,4.634,2430,2.026,2431,1.158,2432,4.634,2433,7.1,2434,4.634,2435,4.054,2436,4.054,2437,2.026,2438,2.026,2439,5.069,2440,4.634,2441,3.243,2442,4.054,2443,2.026,2444,2.026,2445,3.243,2446,3.243,2447,4.054,2448,4.634,2449,2.026,2450,2.026,2451,2.026,2452,2.026,2453,1.158,2454,1.158,2455,1.746,2456,2.026,2457,2.026,2458,2.026,2459,2.026,2460,2.026,2461,2.026,2462,2.026,2463,6.681,2464,7.055,2465,4.629,2466,7.14,2467,6.761,2468,5.407,2469,7.14,2470,4.634,2471,4.634,2472,5.899,2473,1.158,2474,1.158,2475,4.054,2476,6.24,2477,3.243,2478,4.054,2479,2.026,2480,2.702,2481,5.069,2482,5.069,2483,5.407,2484,4.054,2485,4.634,2486,6.761,2487,2.702,2488,3.243,2489,4.054,2490,3.243,2491,3.243,2492,4.634,2493,4.054,2494,4.054,2495,2.026,2496,4.054,2497,2.026,2498,2.026,2499,2.026,2500,3.243,2501,2.026,2502,2.026,2503,2.026,2504,1.158,2505,2.026,2506,3.243,2507,2.026,2508,3.243,2509,5.069,2510,1.158,2511,3.243,2512,3.243,2513,2.026,2514,4.634,2515,1.158,2516,2.026,2517,2.026,2518,2.026,2519,2.026,2520,2.026,2521,3.243,2522,2.026,2523,2.026,2524,2.026,2525,2.026,2526,2.026,2527,2.026,2528,2.026,2529,2.026,2530,2.026,2531,2.026,2532,2.026,2533,1.158,2534,2.026,2535,3.992,2536,1.158,2537,2.026,2538,1.158,2539,2.026,2540,6.084,2541,2.026,2542,2.702,2543,4.366,2544,3.243,2545,2.026,2546,2.026,2547,2.026,2548,4.054,2549,3.243,2550,1.746,2551,2.026,2552,2.026,2553,1.158,2554,2.026,2555,3.243,2556,2.026,2557,2.026,2558,4.634,2559,4.634,2560,2.026,2561,1.746,2562,2.026,2563,2.026,2564,1.158,2565,2.026,2566,3.243,2567,2.026,2568,3.243,2569,2.026,2570,2.026,2571,3.243,2572,4.054,2573,2.026,2574,1.158,2575,2.026,2576,2.026,2577,1.158,2578,2.026,2579,1.158,2580,2.702,2581,2.026,2582,2.026,2583,3.243,2584,2.026,2585,2.026,2586,3.243,2587,3.243,2588,5.069,2589,4.634,2590,2.026,2591,2.026,2592,4.634,2593,2.026,2594,2.702,2595,3.243,2596,2.026,2597,1.746,2598,1.158,2599,2.026,2600,2.026,2601,3.243,2602,2.026,2603,5.069,2604,2.702,2605,2.026,2606,2.026,2607,2.026,2608,2.026,2609,2.026,2610,3.243,2611,3.243,2612,2.026,2613,1.746,2614,2.026,2615,1.158,2616,1.158,2617,2.026,2618,3.243,2619,4.634,2620,1.158,2621,2.026,2622,2.026,2623,3.243,2624,4.054,2625,2.026,2626,2.026,2627,2.026,2628,1.158,2629,2.026,2630,2.026,2631,5.069,2632,2.026,2633,3.243,2634,3.243,2635,1.158,2636,2.026,2637,3.243,2638,2.026,2639,2.026,2640,2.026,2641,2.026,2642,2.026,2643,5.069,2644,1.158,2645,4.054,2646,2.026,2647,2.026,2648,4.054,2649,2.026,2650,1.158,2651,2.026,2652,2.026,2653,1.158,2654,2.026,2655,2.026,2656,3.243,2657,2.026,2658,2.026,2659,5.407,2660,2.026,2661,3.243,2662,2.702,2663,4.634,2664,3.992,2665,2.026,2666,2.026,2667,2.026,2668,5.678,2669,3.243,2670,3.243,2671,4.054,2672,1.158,2673,3.243,2674,2.026,2675,3.243,2676,2.026,2677,3.243,2678,4.054,2679,2.026,2680,2.026,2681,3.243,2682,1.158,2683,2.026,2684,4.054,2685,2.026,2686,2.026,2687,2.026,2688,4.054,2689,2.702,2690,4.054,2691,2.702,2692,2.026,2693,2.026,2694,2.026,2695,3.243,2696,2.026,2697,4.054,2698,2.026,2699,2.026,2700,1.158,2701,1.158,2702,1.158,2703,3.243,2704,2.026,2705,1.158,2706,2.026,2707,2.026,2708,2.026,2709,1.158,2710,1.158,2711,3.243,2712,2.026,2713,2.026,2714,2.026,2715,2.026,2716,2.026,2717,1.158,2718,2.026,2719,3.243,2720,1.746,2721,1.158,2722,2.026,2723,1.158,2724,2.026,2725,2.026,2726,2.026,2727,2.026,2728,2.026,2729,2.026,2730,2.026,2731,2.026,2732,2.026,2733,2.026,2734,2.702,2735,2.026,2736,2.026,2737,1.158,2738,2.026,2739,1.158,2740,1.158,2741,2.026,2742,2.026,2743,2.026,2744,1.158,2745,2.026,2746,2.026,2747,2.026,2748,2.026,2749,2.026,2750,1.158,2751,1.158,2752,3.243,2753,2.026,2754,1.158,2755,2.026,2756,2.026,2757,1.158,2758,2.026,2759,3.243,2760,2.026,2761,4.054,2762,4.054,2763,2.702,2764,4.054,2765,3.243,2766,1.158,2767,2.026,2768,2.026,2769,3.243,2770,2.026,2771,2.026,2772,1.158,2773,2.026,2774,2.026,2775,2.026,2776,2.026,2777,1.158,2778,1.158,2779,2.026,2780,2.026,2781,2.026,2782,2.026,2783,2.026,2784,1.158,2785,2.026,2786,2.026,2787,3.243,2788,2.026,2789,1.158,2790,1.158,2791,2.026,2792,2.026,2793,2.026,2794,2.026,2795,2.026,2796,2.026,2797,2.026,2798,2.026,2799,2.026,2800,2.026,2801,2.026,2802,2.026,2803,2.026,2804,2.026,2805,4.634,2806,3.243,2807,2.026,2808,2.026,2809,2.026,2810,2.026,2811,2.026,2812,4.054,2813,3.243,2814,2.026,2815,2.026,2816,1.158,2817,2.026,2818,1.158,2819,2.026,2820,2.026,2821,2.026,2822,2.026,2823,1.158,2824,2.026,2825,2.026,2826,2.026,2827,3.243,2828,2.026,2829,2.026,2830,5.407,2831,3.243,2832,3.243,2833,2.026,2834,2.026,2835,2.026,2836,1.158,2837,1.158,2838,2.026,2839,2.026,2840,2.026,2841,2.026,2842,2.026,2843,2.026,2844,2.026,2845,2.026,2846,2.026,2847,2.026,2848,2.026,2849,2.026,2850,2.026,2851,2.026,2852,2.026,2853,1.158,2854,2.026,2855,2.026,2856,2.026,2857,2.026,2858,3.243,2859,2.026,2860,2.026,2861,2.026,2862,3.243,2863,1.158,2864,2.026,2865,1.158,2866,1.158,2867,4.054,2868,1.158,2869,3.243,2870,1.158,2871,3.243,2872,2.026,2873,2.026,2874,2.026,2875,2.026,2876,2.026,2877,2.026,2878,2.026,2879,1.158,2880,1.158,2881,1.158,2882,1.158,2883,1.158,2884,2.026,2885,2.026,2886,1.158,2887,1.158,2888,4.192,2889,2.026,2890,2.026,2891,1.158,2892,2.702,2893,4.366,2894,1.158,2895,4.634,2896,2.026,2897,2.026,2898,2.026,2899,1.158,2900,1.158,2901,1.158,2902,1.158,2903,2.026,2904,2.702,2905,1.158,2906,1.158,2907,1.158,2908,2.026,2909,1.158,2910,1.158,2911,1.158,2912,2.026,2913,1.158,2914,2.026,2915,1.158,2916,1.158,2917,1.158,2918,2.702,2919,2.026,2920,2.702,2921,1.158,2922,2.026,2923,2.026,2924,2.026,2925,2.702,2926,1.158,2927,1.158,2928,1.158,2929,1.158,2930,1.158,2931,1.158,2932,1.158,2933,1.158,2934,2.026,2935,2.702,2936,2.026,2937,1.158,2938,1.158,2939,2.026,2940,2.702,2941,2.702,2942,1.158,2943,1.158,2944,1.158,2945,1.158,2946,1.158,2947,1.158,2948,1.158,2949,1.158,2950,1.158,2951,2.702,2952,1.158,2953,1.158,2954,1.158,2955,1.158,2956,1.158,2957,1.158,2958,1.158,2959,1.158,2960,2.026,2961,2.702,2962,1.158,2963,1.158,2964,1.158,2965,1.158,2966,1.158,2967,1.158,2968,1.158,2969,2.026,2970,1.158,2971,1.158,2972,1.158,2973,1.158,2974,1.158,2975,1.158,2976,1.158,2977,1.158,2978,1.158,2979,1.158,2980,1.158]],["title/classes/Reaction.html",[75,0.008,655,2.108]],["body/classes/Reaction.html",[3,0.231,4,0.202,9,0.202,24,0.202,25,0.536,27,0.496,30,0.595,36,0.394,38,0.452,39,0.018,40,0.394,41,0.348,42,0.452,51,0.354,54,0.984,74,0.231,75,0.013,200,0.015,201,0.015,235,1.237,519,3.516,655,3.73,662,2.714,676,2.959,680,3.331,682,4.109,683,4.646,685,5.225,686,3.365,695,3.148,696,3.922,1047,4.646,2083,4.302,2084,4.811,2981,4.811,2982,6.616,2983,5.585,2984,5.585,2985,5.585,2986,5.585,2987,6.616,2988,5.585,2989,5.585]],["title/components/ReactionComponent.html",[0,0.068,176,0.591]],["body/components/ReactionComponent.html",[0,0.117,1,0.677,2,1.064,3,0.187,4,0.163,5,0.828,6,0.869,7,0.869,8,0.869,9,0.163,15,0.828,16,1.456,17,1.455,18,0.788,20,1.116,22,1.116,24,0.163,25,0.47,27,0.435,36,0.374,38,0.366,39,0.018,40,0.353,41,0.327,42,0.366,51,0.406,52,0.817,54,0.739,67,0.642,68,0.782,69,0.335,70,0.338,74,0.187,75,0.01,109,1.047,110,1.047,116,0.788,117,1.116,118,1.064,119,0.713,120,1.302,121,0.869,122,0.869,123,0.713,124,1.064,125,0.864,126,1.116,127,0.713,128,0.869,129,0.713,130,0.698,131,0.713,132,0.869,133,0.713,134,0.788,135,0.869,136,0.75,137,1.116,138,0.713,139,0.869,140,0.713,141,0.642,142,0.869,143,0.713,144,0.828,145,0.869,146,0.677,147,1.116,148,0.713,149,1.116,150,0.713,151,0.828,152,0.869,153,0.713,154,0.869,155,1.116,156,0.713,157,0.869,158,0.713,159,0.869,160,0.713,161,0.869,162,0.713,163,0.869,164,0.677,165,0.869,166,0.75,167,0.869,168,0.75,169,0.782,170,0.869,171,0.713,172,0.869,173,0.713,174,0.869,175,0.869,176,1.069,177,0.869,178,0.713,179,0.869,180,0.677,181,0.788,182,0.75,183,0.869,184,0.713,185,0.869,186,0.713,187,0.869,188,0.677,189,0.869,190,0.713,191,0.869,192,0.713,193,0.869,194,0.713,195,0.869,196,0.828,197,0.677,198,0.828,199,0.869,200,0.013,201,0.013,211,2.898,216,1.767,221,3.758,228,1.919,243,1.314,254,2.598,272,1.474,282,0.75,383,1,390,1.285,391,1,397,1.147,398,1.096,440,1.2,441,1.2,458,1.147,477,1.629,483,2.719,484,1.58,512,4.073,514,3.03,590,5.829,595,2.233,596,5.391,606,2.628,610,3.495,611,3.389,612,3.758,616,2.898,617,3.073,635,2.128,655,4.265,963,1.919,966,1.508,979,3.073,1029,2.898,2241,3.889,2990,3.889,2991,6.41,2992,5.801,2993,6.999,2994,5.801,2995,4.514,2996,4.514,2997,4.998,2998,4.514,2999,4.514,3000,4.514,3001,4.514,3002,4.514,3003,4.514,3004,4.514,3005,4.514,3006,4.514,3007,4.514,3008,4.514]],["title/components/RegisterComponent.html",[0,0.068,178,0.591]],["body/components/RegisterComponent.html",[0,0.09,1,0.41,2,0.75,3,0.113,4,0.099,5,0.501,6,0.526,7,0.526,8,0.526,9,0.099,15,0.501,16,1.411,17,1.409,18,0.477,20,0.786,22,0.786,24,0.099,25,0.331,27,0.306,30,0.435,33,2.447,34,2.434,36,0.381,38,0.331,39,0.018,40,0.367,41,0.332,42,0.331,51,0.422,52,0.624,54,0.83,59,1.539,63,0.663,67,0.979,68,0.958,69,0.314,70,0.205,72,1.29,73,0.948,74,0.113,75,0.006,76,0.786,78,1.694,87,0.663,95,3.443,97,2.103,109,1.572,110,1.664,111,1.244,112,1.085,113,1.445,114,1.362,115,1.137,116,0.477,117,0.786,118,0.75,119,0.431,120,1.046,121,0.526,122,0.526,123,0.431,124,0.75,125,0.66,126,0.786,127,0.431,128,0.526,129,0.431,130,0.892,131,0.431,132,0.526,133,0.431,134,0.477,135,0.526,136,0.454,137,0.786,138,0.431,139,0.526,140,0.431,141,0.388,142,0.526,143,0.431,144,0.501,145,0.526,146,0.41,147,0.786,148,0.431,149,0.786,150,0.431,151,0.501,152,0.526,153,0.431,154,0.526,155,0.786,156,0.431,157,0.526,158,0.431,159,0.526,160,0.431,161,0.526,162,0.431,163,0.526,164,0.41,165,0.526,166,0.454,167,0.526,168,0.454,169,0.551,170,0.526,171,0.431,172,0.526,173,0.431,174,0.526,175,0.526,176,0.431,177,0.526,178,0.859,179,0.526,180,0.41,181,0.477,182,0.454,183,0.526,184,0.431,185,0.526,186,0.431,187,0.526,188,0.41,189,0.526,190,0.431,191,0.526,192,0.431,193,0.526,194,0.431,195,0.526,196,0.501,197,0.41,198,0.501,199,0.526,200,0.009,201,0.009,215,3.443,216,0.832,231,2.198,235,0.605,269,3.275,272,1.654,282,1.106,287,2.76,297,1.539,298,1.29,308,3.68,330,2.462,333,3.275,339,2.869,340,3.923,347,1.475,350,2.869,353,3.521,364,2.869,368,3.148,371,3.148,374,1.547,375,1.362,377,1.699,380,1.734,381,1.562,383,1.289,384,1.479,385,1.537,386,1.087,387,1.469,388,1.502,389,0.633,390,1.403,391,1.204,392,1.29,394,0.871,395,0.912,396,1.652,397,1.038,398,0.663,423,1.645,426,2.082,432,3.817,434,0.825,438,1.426,440,1.087,441,1.087,444,1.581,447,1.734,449,1.445,452,1.929,453,2.02,454,1.902,458,1.722,459,1.654,460,1.244,462,2.434,463,1.499,465,2.193,466,1.447,468,1.499,469,1.499,470,1.499,471,1.714,472,1.002,473,1.051,474,1.002,475,0.832,476,1.35,477,0.694,484,2.138,485,0.912,486,1.652,488,1.636,493,1.364,494,1.645,495,0.795,496,0.795,499,1.223,508,1.83,509,1.582,520,1.645,523,1.447,531,2.167,533,0.76,541,2.869,566,1.645,578,1.051,595,1.573,604,2.529,606,1.797,610,1.645,616,2.447,618,1.83,628,1.902,635,1.499,639,3.521,656,2.76,658,1.636,659,2.138,681,3.052,714,2.908,877,1.98,887,1.738,937,1.364,950,3.817,958,3.148,959,1.917,960,1.917,961,1.365,962,0.912,963,1.161,964,0.956,965,1.539,966,1.816,967,2.462,968,1.645,969,1.885,970,1.885,971,1.885,972,3.438,973,1.161,977,1.104,979,1.447,985,1.931,986,1.573,987,1.769,988,1.917,993,1.447,994,1.29,1009,1.539,1142,2.353,1161,2.462,1180,2.869,1191,1.364,1200,1.917,1218,1.98,1230,2.647,1312,2.103,1341,1.539,1358,1.931,1379,1.917,1463,1.917,1465,1.645,1468,1.539,1469,1.539,1470,1.539,1505,1.645,1511,3.172,1570,3.172,1573,3.438,1576,4.219,1579,3.772,1584,2.869,1585,2.647,1596,2.869,1597,4.146,1598,2.869,1616,3.438,1618,3.68,1619,3.148,1620,3.148,1621,3.148,1622,4.289,1632,1.769,1633,2.304,1634,2.304,1635,2.304,1636,2.103,1637,1.769,1638,2.869,1639,2.103,1646,3.772,1661,4.187,1706,2.103,1742,2.103,1806,2.353,1882,2.647,1920,4.219,1921,4.219,1922,4.219,1925,4.219,1929,4.219,1947,1.769,1948,1.769,1949,3.148,1950,3.148,1959,3.521,1965,3.521,1973,4.219,1974,2.353,1975,2.353,1977,2.353,1990,3.521,1995,5.106,2322,3.148,2401,2.353,2465,2.869,2561,3.521,2613,3.521,2720,5.262,2888,3.521,3009,2.353,3010,4.897,3011,4.086,3012,4.897,3013,4.897,3014,4.897,3015,5.82,3016,4.897,3017,4.683,3018,3.521,3019,5.436,3020,5.436,3021,2.731,3022,2.731,3023,2.731,3024,5.014,3025,2.731,3026,2.353,3027,2.731,3028,4.897,3029,3.521,3030,2.731,3031,3.521,3032,5.436,3033,4.683,3034,2.353,3035,2.731,3036,2.731,3037,1.917,3038,2.731,3039,2.731,3040,2.731,3041,2.731,3042,3.521,3043,4.086,3044,3.521,3045,3.521,3046,4.086,3047,2.731,3048,2.731,3049,2.731,3050,2.731,3051,2.731,3052,2.731,3053,2.731,3054,2.731,3055,2.731,3056,2.731,3057,2.731,3058,3.521,3059,2.353,3060,2.353,3061,4.086,3062,2.731,3063,4.086,3064,2.731,3065,4.086,3066,2.731,3067,2.731,3068,2.731,3069,2.731,3070,2.731,3071,2.731,3072,2.731,3073,2.731,3074,2.731,3075,2.731,3076,2.731,3077,2.731,3078,4.683,3079,4.086,3080,4.086,3081,4.086,3082,4.086,3083,5.436,3084,5.436,3085,4.086,3086,4.086,3087,3.521,3088,4.086,3089,3.521,3090,4.086,3091,4.086,3092,2.731,3093,2.353,3094,2.731]],["title/components/ResetPasswordComponent.html",[0,0.068,180,0.561]],["body/components/ResetPasswordComponent.html",[0,0.109,1,0.433,2,0.781,3,0.12,4,0.104,5,0.529,6,0.556,7,0.556,8,0.556,9,0.104,13,1.64,14,1.771,15,0.529,16,1.417,17,1.421,18,0.504,20,0.82,22,0.82,24,0.104,25,0.345,27,0.319,28,2.375,30,0.454,33,2.528,34,2.502,35,3.416,36,0.358,38,0.234,39,0.018,40,0.291,41,0.236,42,0.234,46,3.669,47,3.553,51,0.419,52,0.821,54,0.368,64,5.82,67,0.795,68,0.753,69,0.344,70,0.216,71,1.442,72,1.364,73,0.988,74,0.12,75,0.007,76,0.974,78,1.815,81,4.359,89,2.487,109,1.667,110,1.726,111,1.584,112,1.428,113,1.759,114,1.794,115,1.657,116,0.504,117,0.82,118,0.781,119,0.456,120,1.075,121,0.556,122,0.556,123,0.456,124,0.781,125,0.682,126,0.82,127,0.456,128,0.556,129,0.456,130,0.672,131,0.456,132,0.556,133,0.456,134,0.744,135,0.556,136,0.48,137,0.82,138,0.456,139,0.556,140,0.456,141,0.411,142,0.556,143,0.456,144,0.529,145,0.556,146,0.433,147,0.82,148,0.456,149,0.82,150,0.456,151,0.529,152,0.556,153,0.456,154,0.556,155,0.82,156,0.456,157,0.556,158,0.456,159,0.556,160,0.456,161,0.556,162,0.456,163,0.556,164,0.433,165,0.556,166,0.48,167,0.556,168,0.48,169,0.574,170,0.556,171,0.456,172,0.556,173,0.456,174,0.974,175,0.556,176,0.456,177,0.556,178,0.456,179,0.556,180,0.838,181,1.294,182,0.48,183,0.556,184,0.456,185,0.556,186,0.456,187,0.556,188,0.433,189,0.556,190,0.456,191,0.556,192,0.456,193,0.556,194,0.456,195,0.556,196,0.529,197,0.433,198,0.529,199,0.556,200,0.01,201,0.01,215,1.627,235,0.943,257,5.37,265,1.907,269,2.566,272,1.286,274,3.28,282,1.036,287,2.852,297,1.627,298,1.364,308,2.566,320,2.99,340,2.566,347,1.544,364,2.99,368,3.28,369,3.669,374,1.485,375,1.841,377,1.554,380,1.9,381,1.9,383,1.604,384,1.584,385,1.356,386,1.132,387,1.446,388,1.544,389,1.174,390,1.522,391,1.32,394,1.614,395,1.69,397,1.584,398,1.446,418,1.739,423,1.739,426,2.375,434,1.021,438,1.626,440,1.485,441,1.485,444,1.64,447,1.9,449,1.714,452,2.016,453,2.056,454,2.085,456,0.964,458,1.638,459,1.681,460,1.082,461,0.84,462,1.907,463,1.857,465,2.668,466,1.529,468,1.857,469,1.857,470,1.857,471,1.955,472,1.059,473,1.111,474,1.059,475,0.88,476,1.616,477,1.286,484,1.771,485,0.964,493,1.442,495,0.84,496,0.84,498,1.293,499,1.907,509,0.84,512,2.99,520,2.566,531,2.148,533,0.803,566,1.739,578,1.64,582,2.256,604,1.771,617,2.256,624,2.401,628,1.771,656,2.852,658,0.964,659,2.256,714,1.442,821,4.893,828,2.256,889,2.566,890,2.401,891,2.99,898,3.669,902,3.669,961,1.422,962,0.964,963,1.227,964,1.01,965,1.627,966,1.866,968,1.739,969,1.64,970,1.64,971,1.64,972,2.99,973,2.152,975,1.87,981,2.759,982,2.759,983,2.759,985,1.364,986,1.948,987,1.87,988,2.027,990,1.87,1009,1.627,1195,1.87,1207,2.668,1218,1.722,1241,2.759,1245,2.027,1358,1.364,1465,2.566,1466,1.739,1468,1.627,1469,1.627,1470,1.627,1505,2.566,1506,2.401,1511,2.759,1569,2.224,1570,4.776,1571,4.359,1572,3.669,1573,3.553,1577,3.898,1579,4.303,1595,3.669,1601,3.669,1616,4.647,1617,3.669,1627,3.28,1631,2.027,1633,1.627,1634,1.627,1635,1.627,1637,1.87,1638,2.99,1645,2.487,1844,4.966,1852,3.28,1890,3.28,1903,3.898,1949,2.224,1950,3.28,1995,3.553,2124,3.669,2235,2.99,2312,3.28,2321,3.28,2322,3.28,2388,3.669,2411,3.669,2465,2.99,2997,3.669,3026,3.669,3037,2.99,3044,3.669,3045,3.669,3087,3.669,3089,3.669,3095,6.003,3096,4.359,3097,4.812,3098,6.234,3099,2.887,3100,2.887,3101,3.669,3102,3.28,3103,3.669,3104,3.669,3105,2.887,3106,2.887,3107,4.259,3108,3.669,3109,2.887,3110,4.259,3111,4.259,3112,2.887,3113,2.887,3114,2.887,3115,2.887,3116,2.887,3117,2.887,3118,4.259,3119,4.259,3120,2.887,3121,4.259,3122,2.887,3123,2.887,3124,2.887,3125,2.887,3126,2.487,3127,2.487,3128,4.259,3129,2.887,3130,4.259,3131,2.887,3132,2.887,3133,2.887,3134,2.887,3135,4.259,3136,2.887,3137,2.887,3138,2.887,3139,4.259,3140,4.259,3141,5.919,3142,2.887,3143,2.887,3144,2.887,3145,2.887]],["title/components/ShowChannelUsersComponent.html",[0,0.068,184,0.591]],["body/components/ShowChannelUsersComponent.html",[0,0.128,1,0.58,2,0.96,3,0.16,4,0.14,5,0.709,6,0.744,7,0.744,8,0.744,9,0.14,15,0.709,16,1.444,17,1.443,18,0.675,20,1.008,22,1.008,24,0.215,25,0.424,27,0.393,30,0.558,36,0.366,38,0.424,39,0.018,40,0.347,41,0.311,42,0.424,51,0.376,52,0.756,63,0.938,69,0.384,70,0.29,73,0.896,74,0.16,75,0.009,76,0.744,87,1.545,99,2.951,109,1.377,110,1.543,111,1.33,112,1.315,113,1.392,114,1.456,115,1.456,116,0.675,117,1.008,118,0.96,119,0.61,120,1.225,121,0.744,122,0.744,123,0.61,124,1.089,125,1.052,126,1.008,127,0.61,128,0.744,129,0.61,130,0.917,131,0.61,132,0.744,133,0.61,134,0.675,135,0.744,136,0.642,137,1.008,138,0.61,139,0.744,140,0.61,141,0.55,142,0.744,143,0.61,144,0.709,145,0.744,146,0.58,147,1.225,148,0.61,149,1.008,150,0.61,151,0.709,152,0.744,153,0.61,154,0.744,155,1.008,156,0.61,157,0.744,158,0.61,159,0.744,160,0.61,161,0.744,162,0.61,163,0.744,164,0.58,165,0.744,166,0.642,167,0.744,168,0.642,169,0.705,170,0.744,171,0.61,172,0.744,173,0.61,174,0.744,175,0.744,176,0.61,177,0.744,178,0.61,179,0.744,180,0.58,181,0.675,182,0.642,183,0.744,184,1.006,185,1.407,186,0.61,187,0.744,188,0.58,189,0.744,190,0.61,191,0.744,192,0.61,193,0.744,194,0.61,195,1.143,196,0.709,197,0.58,198,0.709,199,0.744,200,0.012,201,0.012,203,3.908,205,2.178,243,1.996,258,2.69,265,2.344,272,0.982,282,0.642,299,1.643,347,1.58,367,1.643,374,1.692,377,1.771,379,2.503,380,1.67,381,1.232,383,1.16,384,1.509,385,1.545,386,1.392,387,1.214,388,1.16,389,0.896,390,1.16,391,1.16,394,1.232,395,1.291,396,1.562,397,1.33,398,1.271,416,2.616,434,1.056,444,0.938,449,1.865,454,1.352,459,1.33,460,1.33,461,1.125,462,1.73,476,0.896,477,0.982,486,1.562,488,2.383,495,1.125,496,1.125,497,1.826,498,1.73,501,2.976,519,2.473,533,1.075,553,3.391,555,4.033,564,2.85,579,2.328,580,1.643,581,2.178,595,2.015,606,2.179,635,1.921,667,1.595,671,2.401,852,5.495,913,2.503,961,1.291,962,1.291,964,1.352,966,1.749,977,1.562,990,2.503,1004,1.93,1076,4.51,1079,3.564,1085,3.154,1119,2.047,1120,2.503,1126,2.328,1191,1.93,1197,2.951,1203,2.976,1204,2.976,1343,3.329,1393,5.483,1397,4.574,1398,2.178,1402,3.154,1408,3.143,1445,2.976,1447,2.713,1457,4.51,1459,2.713,1460,2.328,1461,2.713,1462,2.503,1473,2.976,1474,2.503,1480,2.976,1484,2.976,1485,5.115,1486,4.51,1495,3.391,1513,4.033,1525,4.51,1891,2.976,1905,3.329,1906,2.713,3146,6.146,3147,3.864,3148,3.864,3149,5.235,3150,5.235,3151,3.864,3152,4.033,3153,5.235,3154,5.235,3155,3.864,3156,3.864,3157,3.864,3158,5.235,3159,3.864,3160,3.864,3161,3.864,3162,3.864]],["title/components/SidenavComponent.html",[0,0.068,186,0.591]],["body/components/SidenavComponent.html",[0,0.081,1,0.349,2,0.664,3,0.096,4,0.084,5,0.427,6,0.697,7,0.448,8,0.448,9,0.131,13,1.393,14,1.553,15,0.427,16,1.392,17,1.39,18,0.407,20,0.697,22,0.697,24,0.131,25,0.293,27,0.271,28,2.129,30,0.386,36,0.366,38,0.293,39,0.018,40,0.323,41,0.297,42,0.293,45,2.344,51,0.379,52,0.731,54,0.828,63,0.565,67,0.816,68,0.73,69,0.388,70,0.175,73,1.03,74,0.096,75,0.005,76,0.854,78,0.678,87,1.503,99,2.04,109,1.642,110,1.654,111,1.616,112,1.489,113,1.833,114,1.808,115,1.808,116,0.407,117,0.854,118,0.664,119,0.368,120,0.963,121,0.448,122,0.448,123,0.572,124,1.053,125,0.954,126,0.697,127,0.368,128,0.448,129,0.368,130,0.782,131,0.368,132,0.448,133,0.368,134,0.407,135,0.448,136,0.387,137,0.697,138,0.368,139,0.448,140,0.368,141,0.632,142,0.448,143,0.368,144,0.427,145,0.448,146,0.349,147,0.697,148,0.368,149,0.697,150,0.368,151,0.427,152,0.448,153,0.368,154,0.448,155,0.697,156,0.368,157,0.448,158,0.368,159,0.448,160,0.368,161,0.448,162,0.368,163,0.448,164,0.349,165,0.448,166,0.387,167,0.448,168,0.387,169,0.598,170,0.448,171,0.368,172,0.448,173,0.368,174,0.448,175,0.448,176,0.368,177,0.448,178,0.368,179,0.448,180,0.349,181,0.407,182,0.387,183,0.448,184,0.368,185,0.448,186,0.791,187,0.448,188,0.349,189,0.448,190,0.368,191,0.448,192,0.368,193,0.448,194,0.368,195,0.448,196,0.427,197,0.349,198,0.427,199,0.448,200,0.008,201,0.008,203,3.28,205,1.313,216,0.71,235,0.516,236,1.635,237,1.509,239,3.807,243,1.957,247,1.794,253,4.313,258,2.192,259,4.671,272,0.592,278,2.788,281,2.04,282,0.832,285,2.822,286,2.006,299,0.99,300,1.635,301,1.794,347,1.489,351,3.243,367,2.547,374,0.619,375,1.666,377,1.666,380,1.416,381,1.416,382,2.502,383,1.467,384,1.769,385,1.607,386,1.331,387,1.615,388,1.623,389,1.436,390,1.489,391,1.372,394,1.154,395,1.209,397,1.616,398,1.578,399,1.164,434,1.375,438,1.892,440,1.18,441,1.18,442,2.129,444,1.503,447,1.975,449,1.593,452,2.338,453,1.91,454,1.553,456,2.276,458,1.573,459,1.731,460,0.92,461,0.678,462,1.043,465,1.621,468,0.854,469,0.854,470,0.854,471,1.553,472,1.328,473,1.393,474,1.328,475,1.103,476,1.03,477,0.592,478,2.18,484,0.815,485,1.917,488,1.811,495,0.678,496,0.678,497,1.1,498,1.043,499,1.621,508,2.57,509,1.578,513,1.808,514,1.043,531,1.887,533,0.648,553,2.344,571,3.118,580,1.539,611,1.043,615,1.164,628,1.267,658,0.778,659,0.815,662,0.897,663,1.234,667,0.71,668,3.248,671,1.795,678,2.788,816,1.313,887,1.539,940,0.99,969,0.897,970,0.897,971,0.897,975,1.509,977,2.024,984,2.18,985,1.1,986,2.087,993,1.234,994,2.365,995,2.352,999,1.234,1006,1.164,1022,2.218,1029,1.164,1063,3.718,1064,3.094,1078,3.266,1119,1.234,1120,1.509,1121,1.403,1122,1.403,1128,2.18,1192,2.502,1197,1.313,1198,1.635,1201,1.794,1207,1.043,1240,1.808,1252,1.313,1253,1.403,1254,1.509,1255,3.718,1256,3.688,1257,3.688,1258,3.718,1259,3.718,1260,3.512,1261,3.718,1262,2.344,1263,2.875,1264,3.056,1265,3.016,1266,1.509,1267,1.509,1268,1.509,1269,2.344,1270,1.509,1271,1.234,1272,1.509,1273,3.507,1274,1.509,1275,1.509,1276,1.403,1277,3.369,1278,1.509,1279,1.403,1280,1.403,1281,2.18,1282,2.875,1283,2.218,1284,1.509,1285,1.509,1286,1.509,1287,2.674,1288,1.403,1289,2.18,1290,1.403,1291,4.211,1292,1.403,1293,1.509,1294,2.344,1295,2.674,1296,2.502,1297,2.875,1298,1.403,1299,3.243,1300,1.403,1301,2.18,1302,1.509,1303,1.509,1341,1.313,1342,1.794,1351,2.006,1352,1.794,1353,2.006,1354,2.006,1355,2.006,1356,2.006,1358,2.097,1390,3.243,1399,3.28,1402,2.18,1404,2.344,1407,2.18,1408,2.712,1419,2.344,1432,1.403,1433,1.509,1434,1.635,1435,1.635,1436,1.635,1443,2.006,1462,2.344,1466,1.403,1480,1.794,1482,1.794,1495,3.718,1519,2.788,1563,2.788,1646,3.419,1717,3.824,1733,2.006,1735,3.824,1736,3.118,1737,3.118,1754,3.118,1756,2.006,1762,1.794,1765,2.006,1772,2.788,1773,3.118,1942,2.344,2001,4.671,2025,5.6,2051,2.006,3163,2.006,3164,2.329,3165,3.619,3166,3.824,3167,4.439,3168,4.439,3169,4.439,3170,5.006,3171,5.006,3172,5.006,3173,2.329,3174,3.619,3175,2.329,3176,2.329,3177,3.619,3178,2.329,3179,3.619,3180,2.329,3181,2.329,3182,3.856,3183,2.329,3184,2.329,3185,2.329,3186,2.329,3187,2.329,3188,2.329,3189,2.329,3190,2.329,3191,2.329,3192,3.619,3193,2.006,3194,4.439,3195,4.439,3196,2.329,3197,2.329,3198,3.619,3199,3.619,3200,2.329,3201,2.329,3202,3.619,3203,2.329,3204,6.36,3205,6.36,3206,6.36,3207,6.36,3208,6.36,3209,6.36,3210,6.36,3211,5.421,3212,2.329,3213,2.329,3214,2.329,3215,2.329,3216,2.329,3217,2.329,3218,2.329,3219,2.329,3220,4.439,3221,5.006,3222,2.329,3223,2.329,3224,2.329,3225,2.329,3226,6.36,3227,2.329,3228,2.329,3229,2.329,3230,2.329,3231,2.329,3232,2.329,3233,2.329,3234,2.329]],["title/components/StartscreenComponent.html",[0,0.068,188,0.561]],["body/components/StartscreenComponent.html",[0,0.116,1,0.514,2,0.883,3,0.142,4,0.124,5,0.628,6,0.659,7,0.659,8,0.659,9,0.124,13,1.854,14,1.949,15,0.628,16,1.434,17,1.438,18,0.598,20,0.927,22,0.927,24,0.124,25,0.39,27,0.361,28,2.57,30,0.513,33,2.406,34,2.707,35,3.595,36,0.383,38,0.277,39,0.018,40,0.315,41,0.16,42,0.277,43,3.381,51,0.461,52,0.935,60,4.149,61,3.381,67,0.94,68,0.89,69,0.321,70,0.257,71,1.71,72,1.617,73,0.794,74,0.142,75,0.008,76,0.927,109,1.656,110,1.689,111,1.536,112,1.339,113,1.757,114,1.682,115,1.682,116,0.598,117,0.927,118,0.883,119,0.541,120,1.163,121,0.659,122,0.659,123,0.541,124,0.883,125,0.751,126,0.927,127,0.541,128,0.659,129,0.541,130,0.727,131,0.541,132,0.659,133,0.541,134,1.154,135,0.659,136,0.569,137,0.927,138,0.541,139,0.659,140,0.541,141,0.487,142,0.659,143,0.541,144,0.628,145,0.659,146,0.514,147,0.927,148,0.541,149,0.927,150,0.541,151,0.628,152,0.659,153,0.541,154,1.271,155,0.927,156,0.541,157,0.659,158,0.541,159,0.659,160,0.541,161,0.659,162,0.541,163,0.659,164,0.514,165,0.659,166,0.569,167,0.659,168,0.569,169,0.649,170,0.659,171,0.541,172,0.659,173,0.541,174,1.072,175,0.659,176,0.541,177,0.659,178,0.541,179,0.659,180,0.514,181,0.598,182,0.569,183,0.659,184,0.541,185,0.659,186,0.541,187,0.659,188,0.907,189,0.659,190,0.541,191,0.659,192,0.541,193,0.659,194,0.541,195,0.659,196,0.628,197,0.514,198,0.628,199,0.659,200,0.011,201,0.011,265,3.103,347,1.464,350,4.244,374,0.91,375,1.772,380,1.777,381,1.777,383,1.581,384,1.224,385,1.169,386,0.91,388,1.234,390,1.411,391,1.067,394,1.092,395,1.143,397,1.224,398,1.169,426,2.048,434,0.691,438,0.997,440,1.481,441,1.481,444,1.547,447,1.928,449,0.91,452,1.842,453,1.777,454,2.115,456,1.143,457,1.93,458,1.618,459,1.618,463,2.218,468,2.044,469,2.044,470,2.044,476,1.532,477,1.224,484,1.949,495,0.997,496,0.997,531,2.298,576,2.949,578,1.318,582,2.551,624,2.714,628,2.312,660,2.404,828,2.551,874,5.207,887,3.179,889,2.901,890,2.714,891,3.381,966,1.861,969,1.318,970,1.318,971,1.318,972,3.381,973,2.048,981,2.218,982,2.218,983,2.218,1009,1.93,1195,2.218,1218,1.384,1245,2.404,1407,3.356,1465,2.901,1466,2.063,1570,3.915,1578,5.207,1581,2.637,1631,4.945,1844,5.337,1852,4.656,1882,3.915,1890,3.709,1891,2.637,1903,4.291,1928,5.207,1942,3.119,1987,4.656,1995,4.473,2024,3.709,2312,3.709,2321,4.656,3017,5.207,3024,4.149,3078,5.207,3096,4.799,3097,5.207,3101,4.149,3102,3.709,3103,4.149,3104,4.149,3126,2.949,3127,2.949,3141,6.406,3152,5.337,3235,2.949,3236,5.57,3237,4.815,3238,5.57,3239,5.57,3240,5.57,3241,5.57,3242,4.815,3243,3.423,3244,3.423,3245,3.423,3246,3.423,3247,3.423,3248,4.149,3249,4.815,3250,4.815,3251,3.423,3252,3.423,3253,3.423,3254,3.423,3255,3.423,3256,3.423,3257,3.423,3258,3.423,3259,3.423,3260,3.423,3261,4.815,3262,5.57,3263,4.815,3264,6.044]],["title/injectables/StorageFirebaseService.html",[202,0.867,881,2.422]],["body/injectables/StorageFirebaseService.html",[3,0.156,4,0.136,9,0.289,24,0.136,27,0.385,30,0.4,36,0.363,38,0.564,39,0.018,40,0.363,41,0.343,42,0.564,47,5.436,51,0.483,54,0.903,63,1.651,66,4.324,69,0.296,70,0.282,74,0.156,75,0.009,76,1.126,78,2.093,87,1.745,200,0.012,201,0.012,202,1.191,204,1.519,225,1.682,226,1.597,235,1.394,282,1.046,302,2.434,432,3.606,520,3.094,662,2.618,738,2.894,793,3.237,877,3.083,878,4.425,881,3.327,908,2.638,912,6.106,913,4.88,914,6.608,927,4.977,932,4.404,936,4.109,937,3.398,939,4.109,940,3.168,941,3.606,942,4.425,1021,3.299,1323,4.097,1506,2.895,1593,2.894,1686,4.425,1805,4.417,1853,2.894,2177,2.263,2202,4.425,2203,6.375,2204,5.42,2205,3.956,2209,3.237,2383,3.237,3037,3.606,3265,5.136,3266,5.852,3267,5.136,3268,5.136,3269,5.136,3270,3.757,3271,7.769,3272,3.757,3273,5.136,3274,3.757,3275,5.852,3276,6.291,3277,7.451,3278,3.757,3279,7.567,3280,7.088,3281,6.265,3282,5.136,3283,3.757,3284,5.136,3285,7.088,3286,3.757,3287,5.136,3288,3.757,3289,5.136,3290,3.757,3291,3.237,3292,3.757,3293,3.757,3294,5.852,3295,5.136,3296,5.136,3297,5.675,3298,5.136,3299,5.852,3300,3.757,3301,3.757,3302,3.757,3303,5.136,3304,3.757,3305,3.757,3306,3.757,3307,3.757,3308,3.757,3309,5.136,3310,3.757,3311,3.757,3312,3.757,3313,3.757,3314,3.237,3315,3.757]],["title/classes/Thread.html",[75,0.008,2052,2.108]],["body/classes/Thread.html",[3,0.232,4,0.203,9,0.203,24,0.203,25,0.537,27,0.497,30,0.598,36,0.394,38,0.454,39,0.018,40,0.292,41,0.348,42,0.454,51,0.355,54,0.962,69,0.324,74,0.232,75,0.013,141,1.085,200,0.015,201,0.015,235,1.243,519,3.449,676,2.971,680,3.449,682,4.115,686,3.379,695,3.162,1019,5.715,1022,3.647,1023,5.11,1025,3.633,1030,6.289,1031,4.832,1032,4.832,1033,4.832,1035,4.832,1036,4.832,1045,4.832,1046,4.321,1047,3.938,2052,3.739,3316,4.832,3317,7.45,3318,6.633,3319,5.609,3320,6.633,3321,5.609,3322,5.609]],["title/components/ThreadComponent.html",[0,0.068,190,0.591]],["body/components/ThreadComponent.html",[0,0.086,1,0.384,2,0.714,3,0.106,4,0.093,5,0.469,6,0.749,7,0.493,8,0.493,9,0.141,13,1.498,15,0.469,16,1.404,17,1.408,18,0.447,20,0.749,22,0.749,24,0.19,25,0.315,27,0.292,30,0.415,36,0.373,38,0.315,39,0.018,40,0.311,41,0.306,42,0.315,51,0.44,52,0.864,54,0.721,63,0.621,67,0.805,68,0.634,69,0.385,70,0.192,73,1.22,74,0.106,75,0.006,87,0.621,99,1.443,109,1.437,110,1.547,111,1.337,112,1.372,113,1.399,114,1.083,115,1.083,116,0.447,117,0.906,118,0.714,119,0.404,120,1.012,121,0.493,122,0.493,123,0.404,124,0.864,125,0.709,126,0.749,127,0.404,128,0.493,129,0.404,130,0.468,131,0.404,132,0.493,133,0.404,134,0.447,135,0.493,136,0.425,137,0.749,138,0.404,139,0.493,140,0.404,141,0.554,142,0.493,143,0.404,144,1.038,145,0.493,146,0.384,147,0.749,148,0.404,149,0.749,150,0.404,151,0.469,152,0.493,153,0.404,154,0.493,155,0.749,156,0.404,157,0.493,158,0.404,159,0.493,160,0.404,161,0.493,162,0.404,163,0.493,164,0.384,165,0.493,166,0.425,167,0.493,168,0.425,169,0.926,170,0.493,171,0.404,172,0.493,173,0.404,174,0.493,175,0.493,176,0.404,177,0.493,178,0.404,179,0.493,180,0.384,181,0.447,182,0.425,183,0.493,184,0.404,185,0.493,186,0.404,187,0.493,188,0.384,189,0.493,190,0.831,191,0.493,192,0.404,193,0.493,194,0.404,195,0.493,196,0.469,197,0.384,198,0.469,199,0.493,200,0.009,201,0.009,216,1.434,235,0.567,243,2.001,258,2.288,265,2.859,272,0.989,281,1.443,285,2.194,299,1.088,347,1.32,367,2.634,375,1.776,377,1.658,380,1.241,381,1.241,383,1.501,384,1.746,385,1.688,386,1.035,387,1.63,388,1.629,389,1.517,390,1.541,391,1.414,392,2.927,394,0.816,395,0.855,397,1.337,398,1.374,399,2.827,401,2.837,434,1.497,438,1.371,440,1.399,441,1.505,442,2.406,444,1.619,445,3.409,447,1.678,449,1.035,452,2.306,453,1.502,454,1.362,456,1.89,458,1.574,459,1.767,460,1.337,461,1.133,462,1.146,465,1.743,468,0.939,469,0.939,470,0.939,471,1.648,472,1.428,473,1.498,474,1.428,475,1.186,476,1.382,477,0.989,478,2.344,483,2.344,485,1.99,486,1.035,487,1.209,488,1.573,498,1.146,509,1.647,513,3.095,531,2.032,533,0.712,562,1.658,571,3.175,578,0.985,580,1.088,592,3.169,604,2.334,606,0.939,610,2.344,611,2.928,612,3.86,615,1.279,628,1.98,635,0.939,639,2.521,658,1.3,659,0.896,662,2.294,663,1.356,667,1.434,668,1.279,671,1.573,714,1.279,723,2.732,801,3.306,816,1.443,940,1.088,961,0.855,962,0.855,963,1.088,964,0.896,966,0.855,969,0.985,970,0.985,971,0.985,977,1.904,979,2.061,984,2.344,985,1.209,986,2.178,993,1.356,994,2.485,995,2.494,999,1.356,1003,1.658,1006,1.279,1022,1.279,1059,2.837,1064,3.331,1118,1.542,1122,1.542,1123,1.658,1124,1.658,1125,1.971,1128,2.344,1187,1.658,1188,2.494,1189,1.971,1190,1.971,1192,1.443,1193,1.443,1194,4.184,1197,1.443,1198,1.797,1199,1.971,1218,1.573,1240,1.944,1252,1.443,1253,1.542,1254,1.658,1255,3.86,1256,3.641,1257,3.641,1258,3.86,1259,3.86,1260,3.665,1261,3.86,1262,2.521,1263,1.658,1264,3.19,1265,3.169,1266,1.658,1267,1.658,1268,1.658,1269,2.521,1270,1.658,1271,1.356,1272,1.658,1273,3.382,1274,1.658,1275,1.658,1276,1.542,1277,3.157,1278,1.658,1279,1.542,1280,1.542,1281,2.344,1282,3.408,1283,1.279,1284,1.658,1285,1.658,1286,1.658,1287,2.837,1288,1.542,1289,3.59,1290,1.542,1291,4.319,1292,1.542,1293,1.658,1294,2.521,1295,2.837,1296,2.654,1297,3.05,1298,1.542,1299,3.408,1300,1.542,1301,2.344,1302,1.658,1303,1.658,1363,4.056,1377,1.542,1378,1.971,1379,2.732,1380,2.205,1398,1.443,1408,2.485,1419,3.86,1505,2.344,1589,4.875,1590,5.499,1718,3.352,1906,3.694,1947,2.521,1948,2.521,1997,3.352,2000,2.732,2012,4.35,2017,2.998,2038,1.542,2052,3.821,2110,2.654,2138,1.658,2163,4.917,2213,4.359,2217,2.997,2290,2.997,3037,2.732,3182,2.997,3323,2.205,3324,4.708,3325,2.559,3326,3.891,3327,4.708,3328,4.708,3329,6.194,3330,5.658,3331,5.26,3332,5.26,3333,5.26,3334,5.26,3335,3.891,3336,5.26,3337,5.26,3338,3.891,3339,2.559,3340,2.559,3341,2.559,3342,4.532,3343,2.559,3344,5.658,3345,3.891,3346,2.559,3347,4.708,3348,2.559,3349,3.891,3350,3.352,3351,2.559,3352,2.559,3353,3.891,3354,2.559,3355,2.559,3356,2.559,3357,2.559,3358,2.559,3359,2.559,3360,3.891,3361,2.559,3362,5.26,3363,3.891,3364,2.559,3365,2.559,3366,3.891,3367,3.891,3368,3.891,3369,2.559,3370,2.559,3371,2.559,3372,3.891,3373,2.559,3374,2.559]],["title/injectables/ThreadFirebaseService.html",[202,0.867,2017,1.981]],["body/injectables/ThreadFirebaseService.html",[3,0.196,4,0.172,9,0.172,24,0.172,25,0.485,27,0.449,30,0.638,36,0.398,38,0.576,39,0.018,40,0.371,41,0.354,42,0.597,51,0.45,52,0.763,54,0.95,67,0.675,68,0.639,69,0.419,70,0.356,73,1.1,74,0.196,75,0.011,76,0.913,78,1.743,169,1.052,200,0.014,201,0.014,202,1.389,204,1.918,216,1.824,225,2.124,226,2.017,235,1.051,243,2.112,282,0.788,592,4.152,662,2.935,675,2.858,759,3.331,877,2.934,1118,2.858,2017,3.172,2038,4.616,2052,4.153,2083,3.654,2110,2.674,2151,4.087,2177,2.858,2179,5.652,2181,5.652,2188,5.158,2191,3.654,2192,5.589,2194,4.087,2211,5.158,2213,3.654,2224,4.612,2227,3.654,2228,4.087,2230,3.654,2231,3.654,2232,3.654,2233,3.654,2234,3.654,2235,3.331,2236,3.654,2239,3.331,2245,4.612,2246,3.654,2249,3.654,2254,4.087,2257,5.158,2260,3.654,2262,3.654,2263,4.087,2266,4.612,2268,5.652,2269,4.087,2270,4.087,2271,4.087,2272,4.087,2273,4.087,3375,6.561,3376,5.987,3377,5.987,3378,5.987,3379,4.087,3380,5.987,3381,4.744,3382,4.744,3383,5.987,3384,5.987,3385,4.744,3386,4.744,3387,4.087,3388,4.744,3389,4.744,3390,4.744,3391,4.087,3392,4.744,3393,4.744,3394,5.987,3395,4.744,3396,5.987,3397,5.987]],["title/components/ToolbarComponent.html",[0,0.068,192,0.591]],["body/components/ToolbarComponent.html",[0,0.095,1,0.457,2,1.051,3,0.126,4,0.11,5,0.558,6,0.586,7,0.586,8,0.586,9,0.11,15,0.558,16,1.423,17,1.421,18,0.532,20,0.852,22,0.852,24,0.16,25,0.359,27,0.332,30,0.472,36,0.385,38,0.515,39,0.018,40,0.357,41,0.341,42,0.515,51,0.459,52,0.924,54,0.835,63,1.391,67,0.63,68,0.597,69,0.33,70,0.228,73,1.027,74,0.126,75,0.007,87,1.478,109,1.027,110,1.027,111,1.125,112,1.156,113,1.523,114,1.232,115,1.232,116,0.532,117,0.852,118,0.812,119,0.481,120,1.103,121,0.586,122,0.586,123,0.481,124,0.812,125,0.703,126,0.852,127,0.481,128,0.586,129,0.481,130,0.732,131,0.481,132,0.586,133,0.481,134,0.532,135,0.586,136,0.506,137,0.852,138,0.481,139,0.586,140,0.481,141,0.433,142,0.586,143,0.481,144,0.558,145,0.586,146,0.457,147,1.103,148,0.481,149,0.852,150,0.481,151,0.558,152,0.586,153,0.481,154,0.586,155,0.852,156,0.481,157,0.586,158,0.481,159,0.586,160,0.481,161,0.586,162,0.481,163,0.586,164,0.457,165,0.586,166,0.506,167,0.586,168,0.506,169,1.038,170,0.586,171,0.481,172,0.586,173,0.481,174,0.586,175,0.586,176,0.481,177,0.586,178,0.481,179,0.586,180,0.457,181,0.532,182,0.506,183,0.586,184,0.481,185,0.586,186,0.481,187,0.586,188,0.457,189,0.586,190,0.481,191,0.586,192,0.905,193,0.586,194,0.481,195,0.586,196,0.558,197,0.457,198,0.558,199,0.586,200,0.01,201,0.01,216,1.935,221,3.712,231,2.569,243,1.519,254,1.983,272,1.456,282,0.867,347,1.269,374,0.809,375,0.847,383,0.981,384,1.125,385,1.631,386,0.809,387,1.412,388,1.407,389,1.027,390,1.407,391,1.269,392,1.438,397,1.125,398,1.075,399,1.521,434,0.894,438,1.289,440,0.809,441,0.809,444,1.267,447,0.971,449,1.689,452,1.59,453,0.971,456,1.479,457,1.716,458,0.774,459,1.125,460,0.774,461,0.886,476,0.706,487,1.438,495,0.886,496,0.886,497,1.438,499,1.363,514,3.341,531,2.226,580,1.295,584,2.345,595,1.705,596,5.05,604,2.223,606,2.661,610,3.452,611,3.389,612,4.698,613,4.893,616,3.356,617,3.035,618,3.482,628,1.55,635,2.102,652,4.414,654,2.623,656,2.496,659,1.065,662,2.009,663,1.613,667,0.928,675,1.834,890,3.786,894,5.174,961,1.017,962,1.017,964,1.065,966,1.017,977,1.79,979,1.613,981,1.972,982,1.972,983,1.972,986,2.009,1004,1.521,1005,2.345,1118,1.834,1192,1.716,1234,2.345,1271,1.613,1283,1.521,1290,1.834,1358,2.707,1454,3.411,1468,1.716,1469,2.496,1470,1.716,1549,2.623,1561,4.414,1633,1.716,1634,1.716,1635,1.716,1678,3.815,1746,3.411,1767,4.023,1906,3.109,1947,2.868,1948,2.868,2012,4.023,2017,3.225,2024,5.489,2038,1.834,2065,5.587,2103,3.815,2110,1.716,2117,3.815,2138,1.972,2152,5.245,2162,4.893,2163,4.414,2178,4.496,2205,3.411,3102,4.893,3152,3.411,3182,4.414,3314,3.815,3342,4.936,3398,2.623,3399,5.218,3400,4.428,3401,6.088,3402,6.556,3403,5.73,3404,5.73,3405,5.73,3406,4.428,3407,4.428,3408,4.428,3409,5.218,3410,5.218,3411,5.218,3412,3.044,3413,4.428,3414,3.044,3415,3.044,3416,3.044,3417,3.044,3418,3.044,3419,3.044,3420,6.352,3421,6.352,3422,5.73,3423,3.044,3424,5.73,3425,3.044,3426,4.428,3427,4.428,3428,3.044,3429,4.428,3430,3.044,3431,5.73,3432,5.73,3433,3.815,3434,3.815,3435,4.428,3436,4.428,3437,3.044,3438,4.428,3439,3.044,3440,4.428,3441,4.428,3442,3.044,3443,3.044,3444,3.044,3445,3.044,3446,3.044,3447,6.088,3448,5.73,3449,3.044,3450,3.044,3451,2.345,3452,3.044,3453,3.044,3454,3.044]],["title/classes/User.html",[75,0.008,130,0.45]],["body/classes/User.html",[3,0.219,4,0.191,9,0.191,24,0.191,25,0.518,27,0.48,30,0.563,36,0.399,38,0.428,39,0.018,40,0.275,41,0.355,42,0.428,51,0.334,54,1.004,74,0.219,75,0.012,130,0.77,134,1.28,200,0.015,201,0.015,235,1.17,351,4.748,676,2.798,678,5.646,679,5.512,680,3.463,681,3.662,682,4.034,683,4.493,685,5.34,686,3.182,695,3.607,696,3.709,697,5.513,698,4.55,699,5.513,700,4.55,701,5.513,702,4.55,703,4.069,704,5.513,705,4.55,706,5.513,707,4.55,1319,4.131,3455,4.55,3456,6.399,3457,5.282,3458,5.282,3459,5.282,3460,5.282,3461,5.282,3462,5.282,3463,5.282,3464,5.282,3465,6.399,3466,5.282,3467,4.55]],["title/injectables/UserFirebaseService.html",[202,0.867,509,1.089]],["body/injectables/UserFirebaseService.html",[0,0.055,3,0.124,4,0.108,9,0.108,14,1.047,24,0.187,25,0.354,27,0.328,30,0.319,34,1.34,36,0.395,38,0.594,39,0.018,40,0.377,41,0.351,42,0.594,51,0.484,52,0.724,54,0.98,59,4.177,63,1.724,66,2.464,67,0.808,68,0.766,69,0.376,70,0.224,73,0.694,74,0.124,75,0.007,76,1.215,78,2.017,87,1.741,118,0.802,125,0.696,130,0.955,200,0.01,201,0.01,202,1.014,204,1.21,216,1.332,223,1.802,225,1.34,226,1.272,228,1.859,231,1.768,235,1.399,243,2.12,281,2.464,282,1.225,302,1.938,351,3.916,434,0.604,509,1.273,513,3.462,518,3.423,519,3.484,520,2.634,523,3.345,531,1.842,533,2.113,544,3.07,549,5.617,592,3.112,604,1.989,624,1.686,628,1.808,679,3.367,680,2.983,681,2.184,759,2.1,877,3.104,889,1.802,890,1.686,899,3.99,937,2.581,1025,3.681,1085,4.417,1092,3.07,1094,4.377,1110,2.304,1114,4.895,1311,6.575,1319,3.675,1330,3.766,1334,4.45,1414,5.439,1419,4.09,1463,2.1,1507,4.377,1510,3.99,1511,2.832,1940,6.118,1942,2.832,2000,2.1,2122,3.766,2177,1.802,2191,2.304,2192,5.647,2197,3.367,2199,3.766,2201,2.577,2217,2.304,2218,2.577,2224,2.304,2225,2.577,2226,2.577,2227,2.304,2229,2.304,2230,2.304,2231,2.304,2232,2.304,2233,2.304,2234,2.304,2235,2.1,2236,2.304,2239,2.1,2245,2.304,2246,3.367,2249,2.304,2260,2.304,2262,2.304,2266,2.304,2291,3.766,3093,3.766,3166,5.208,3193,3.766,3379,2.577,3387,2.577,3391,4.45,3468,5.166,3469,5.166,3470,5.166,3471,5.166,3472,5.166,3473,4.371,3474,4.371,3475,4.371,3476,4.371,3477,5.682,3478,4.371,3479,4.371,3480,4.371,3481,4.371,3482,4.371,3483,4.371,3484,5.682,3485,4.371,3486,4.371,3487,4.371,3488,2.991,3489,4.371,3490,2.991,3491,4.371,3492,4.371,3493,2.991,3494,5.682,3495,4.371,3496,5.682,3497,6.313,3498,5.682,3499,5.166,3500,5.682,3501,4.371,3502,2.991,3503,4.895,3504,4.371,3505,4.371,3506,2.991,3507,2.991,3508,4.371,3509,2.991,3510,2.991,3511,4.371,3512,5.682,3513,4.371,3514,2.991,3515,4.371,3516,5.439,3517,4.371,3518,2.991,3519,4.371,3520,2.991,3521,4.371,3522,4.371,3523,4.371,3524,5.682,3525,4.371,3526,2.991,3527,4.371,3528,2.991,3529,4.371,3530,2.991,3531,5.166,3532,2.991,3533,2.991,3534,2.991,3535,2.991,3536,2.577,3537,2.991,3538,2.991,3539,5.166,3540,2.991,3541,2.991,3542,4.371,3543,4.371,3544,4.371,3545,2.991,3546,2.991,3547,2.991,3548,2.991,3549,4.371,3550,4.371,3551,2.991,3552,2.991,3553,2.991,3554,2.991,3555,2.991,3556,2.991,3557,2.991,3558,2.991,3559,2.991,3560,5.166,3561,4.371,3562,4.371,3563,4.371,3564,4.371,3565,4.371,3566,2.991,3567,2.991,3568,2.991,3569,4.371,3570,2.991,3571,2.991,3572,2.991,3573,2.991,3574,2.991]],["title/components/UserProfilComponent.html",[0,0.068,194,0.591]],["body/components/UserProfilComponent.html",[0,0.088,1,0.399,2,0.735,3,0.11,4,0.096,5,0.488,6,0.512,7,0.512,8,0.512,9,0.096,13,1.543,14,1.687,15,0.488,16,1.408,17,1.406,18,0.465,20,0.771,22,0.771,24,0.175,25,0.325,27,0.301,28,2.281,30,0.427,33,2.681,34,2.403,35,2.123,36,0.378,38,0.391,39,0.018,40,0.345,41,0.293,42,0.391,45,3.476,51,0.433,52,0.823,54,0.614,59,2.717,62,3.452,63,0.973,66,1.5,67,0.861,68,0.907,69,0.395,70,0.2,71,1.329,72,1.257,73,1.245,74,0.11,75,0.006,76,1.164,78,1.167,87,1.605,94,2.814,95,3.641,103,2.292,104,3.918,105,2.814,109,1.587,110,1.626,111,1.595,112,1.391,113,1.864,114,1.797,115,1.797,116,0.465,117,0.771,118,0.735,119,0.42,120,1.033,121,0.512,122,0.512,123,0.42,124,0.735,125,0.65,126,0.771,127,0.42,128,0.512,129,0.42,130,0.914,131,0.42,132,0.512,133,0.42,134,0.465,135,0.512,136,0.442,137,0.771,138,0.42,139,0.512,140,0.42,141,1.016,142,0.512,143,0.42,144,0.488,145,0.512,146,0.399,147,0.928,148,0.42,149,0.771,150,0.42,151,0.488,152,0.512,153,0.42,154,0.512,155,0.771,156,0.42,157,0.512,158,0.42,159,0.512,160,0.42,161,0.512,162,0.42,163,0.512,164,0.399,165,0.512,166,0.442,167,0.512,168,0.442,169,0.65,170,0.512,171,0.42,172,0.512,173,0.42,174,0.512,175,0.512,176,0.42,177,0.512,178,0.42,179,0.512,180,0.399,181,0.465,182,0.442,183,0.512,184,0.42,185,0.512,186,0.42,187,0.512,188,0.399,189,0.512,190,0.42,191,0.512,192,0.42,193,0.512,194,0.848,195,1.208,196,0.488,197,0.399,198,0.488,199,0.512,200,0.009,201,0.009,215,2.259,224,2.049,254,1.795,265,1.795,269,2.414,272,1.462,274,3.087,282,1.177,285,2.259,287,2.717,297,1.5,298,1.257,308,3.233,333,2.414,340,2.414,347,1.515,367,1.704,374,1.065,375,0.74,377,1.601,380,1.278,381,0.849,382,1.5,383,1.189,384,1.018,385,1.469,386,0.707,387,1.456,388,1.568,389,0.617,390,1.34,391,1.275,394,1.278,395,1.792,396,1.62,397,1.018,398,0.973,426,1.131,434,1.083,438,1.167,440,0.707,441,0.707,442,1.704,444,0.646,447,0.849,449,1.669,452,1.469,456,0.889,457,1.5,458,1.363,459,1.462,460,1.018,461,0.775,466,2.554,468,0.976,469,0.976,470,0.976,471,0.931,472,0.976,473,1.024,474,0.976,475,0.811,476,0.93,477,0.676,484,1.402,485,1.792,487,1.257,488,2.02,493,2.681,498,1.191,508,2.403,509,1.562,513,3.302,518,2.414,519,1.257,527,2.049,531,1.843,532,2.049,533,1.341,564,2.709,579,1.603,581,1.5,604,0.931,618,2.709,628,0.931,659,0.931,667,1.221,671,2.327,681,3.365,825,5.612,877,2.327,882,3.641,913,1.723,928,1.868,961,0.889,962,0.889,964,1.402,966,1.792,973,2.447,977,1.62,994,1.257,1003,1.723,1004,1.329,1063,3.476,1078,3.233,1079,3.136,1099,3.087,1119,1.409,1121,1.603,1126,1.603,1140,3.385,1161,2.414,1188,2.123,1191,2.002,1207,1.191,1218,1.62,1240,1.329,1256,1.409,1257,1.409,1264,1.5,1265,1.603,1273,1.409,1277,1.409,1281,1.603,1313,5.211,1314,3.476,1319,3.41,1337,2.292,1339,2.292,1341,2.259,1342,2.049,1346,3.452,1347,2.292,1350,3.087,1359,4.153,1360,3.713,1402,2.414,1424,2.049,1447,2.814,1454,3.087,1455,3.087,1459,1.868,1460,1.603,1465,1.603,1467,4.133,1474,2.596,1495,2.596,1507,3.087,1509,3.087,1561,3.087,1596,3.767,1597,4.058,1598,2.814,1618,3.892,1627,3.087,1628,3.087,1632,2.596,1679,3.452,1706,2.049,1720,3.452,1743,4.433,1744,2.292,1746,3.087,1748,3.452,1758,2.292,1766,2.292,1767,1.868,1785,5.893,1786,4.622,1787,2.292,1788,3.452,1789,2.292,1942,2.596,1992,3.452,2197,3.087,2333,3.452,2374,3.452,2380,3.452,2535,3.452,3018,3.452,3029,3.452,3031,3.452,3033,3.452,3034,2.292,3042,4.622,3058,4.153,3059,2.292,3060,2.292,3248,3.452,3297,2.292,3433,3.452,3434,3.452,3451,3.087,3575,6.277,3576,2.292,3577,4.821,3578,4.007,3579,4.821,3580,4.821,3581,4.821,3582,4.821,3583,4.821,3584,5.365,3585,5.365,3586,5.365,3587,4.821,3588,5.365,3589,5.365,3590,2.66,3591,2.66,3592,2.66,3593,2.66,3594,2.66,3595,4.007,3596,2.66,3597,4.007,3598,4.007,3599,4.007,3600,2.66,3601,4.007,3602,2.66,3603,2.66,3604,2.66,3605,2.66,3606,4.007,3607,4.007,3608,2.66,3609,4.007,3610,2.66,3611,4.007,3612,4.007,3613,2.66,3614,3.452,3615,2.66,3616,2.66,3617,4.007,3618,2.66,3619,2.66,3620,2.66,3621,2.66,3622,4.007,3623,2.66,3624,4.007,3625,4.007,3626,5.365,3627,4.007,3628,2.66,3629,4.007,3630,2.66,3631,2.66,3632,2.66,3633,2.66,3634,4.007,3635,2.66,3636,2.66,3637,2.66,3638,2.66,3639,2.66,3640,2.66,3641,2.66,3642,2.66,3643,2.66,3644,2.66,3645,2.66,3646,2.66,3647,2.66,3648,2.66,3649,2.66,3650,4.007,3651,4.007,3652,4.007,3653,4.007,3654,4.007,3655,4.007,3656,4.007,3657,4.007,3658,4.007,3659,4.007,3660,4.007,3661,2.66,3662,2.66,3663,2.66,3664,2.66,3665,2.66]],["title/injectables/UserProfileService.html",[202,0.867,1079,1.868]],["body/injectables/UserProfileService.html",[3,0.222,4,0.194,9,0.194,24,0.194,25,0.523,27,0.484,30,0.738,36,0.394,38,0.434,39,0.018,40,0.279,41,0.25,42,0.434,51,0.408,52,0.822,63,1.299,67,1.023,68,0.968,69,0.399,70,0.401,74,0.222,75,0.012,76,1.438,87,1.299,130,0.923,200,0.015,201,0.015,202,1.496,204,2.164,225,2.396,226,2.275,282,1.195,533,2.121,564,3.346,602,5.666,636,5.047,637,2.835,1079,3.222,1085,3.886,1119,2.835,1310,6.337,1321,4.61,1743,5.536,1873,6.192,2290,4.968,3666,4.61,3667,6.923,3668,6.923,3669,6.923,3670,6.45,3671,5.351,3672,5.351,3673,6.45,3674,6.45,3675,5.351,3676,6.45,3677,5.351,3678,5.351,3679,5.351,3680,5.351,3681,5.351]],["title/injectables/UserStatusFirebaseService.html",[202,0.867,1314,2.422]],["body/injectables/UserStatusFirebaseService.html",[3,0.207,4,0.181,9,0.181,14,1.748,24,0.181,25,0.501,27,0.464,30,0.716,36,0.366,38,0.501,39,0.018,40,0.322,41,0.314,42,0.501,51,0.457,52,0.636,54,0.936,63,1.501,67,0.711,68,0.673,69,0.387,70,0.375,74,0.207,75,0.011,76,1.293,78,1.955,87,1.631,130,0.937,200,0.014,201,0.014,202,1.434,204,2.02,222,3.847,225,2.237,226,2.124,228,2.856,235,1.555,513,3.507,518,3.725,523,3.276,533,2.007,615,2.495,680,3.473,830,4.303,932,3.486,940,2.629,1021,2.815,1085,3.725,1086,4.303,1148,4.303,1314,4.006,1319,4.463,1335,5.327,1341,2.815,2177,3.009,2229,3.847,2239,3.507,3291,4.303,3350,5.327,3467,6.215,3503,6.047,3516,6.332,3682,6.183,3683,6.183,3684,6.183,3685,4.994,3686,4.994,3687,7.35,3688,4.994,3689,6.183,3690,6.183,3691,6.183,3692,4.994,3693,4.994,3694,4.994,3695,6.183,3696,6.183,3697,4.994,3698,4.994,3699,4.994,3700,4.994,3701,4.994,3702,4.994,3703,4.994,3704,4.994,3705,4.303,3706,4.994]],["title/injectables/WindowSizeService.html",[202,0.867,1399,1.981]],["body/injectables/WindowSizeService.html",[3,0.234,4,0.205,9,0.205,13,2.18,14,2.335,24,0.205,25,0.54,27,0.5,28,3.114,30,0.756,36,0.389,39,0.018,51,0.422,52,0.85,67,0.949,68,0.899,69,0.385,70,0.425,74,0.234,75,0.013,76,1.365,200,0.015,201,0.015,202,1.547,204,2.29,225,2.536,226,2.408,282,1.109,602,5.463,637,3,1390,4.594,1399,3.534,1432,4.56,3707,4.878,3708,7.091,3709,7.322,3710,6.671,3711,5.662,3712,5.662,3713,6.671,3714,5.662,3715,7.322,3716,5.662]],["title/coverage.html",[3717,4.41]],["body/coverage.html",[0,0.145,1,0.668,9,0.161,10,3.836,11,3.126,12,3.836,34,1.994,39,0.018,41,0.208,72,2.104,75,0.016,119,0.703,123,0.703,125,0.978,127,0.703,129,0.703,130,0.766,131,0.703,133,0.703,136,0.74,138,0.703,140,0.703,141,0.633,143,0.703,146,0.668,148,0.703,150,0.703,153,0.703,156,0.703,158,0.703,160,0.703,162,0.703,164,0.668,166,0.74,168,0.74,169,0.6,171,0.703,173,0.703,176,0.703,178,0.703,180,0.668,182,0.74,184,0.703,186,0.703,188,0.668,190,0.703,192,0.703,194,0.703,197,0.668,200,0.013,201,0.013,202,1.785,203,2.359,205,2.51,206,3.836,236,4.037,237,3.725,238,4.429,258,1.8,270,4.954,282,0.74,299,1.893,367,2.708,434,1.562,509,1.296,533,1.772,583,3.836,655,2.51,675,2.682,677,3.836,711,3.836,756,3.429,787,3.429,791,3.429,798,3.836,801,3.126,813,3.429,821,3.126,822,3.429,825,3.429,835,3.429,840,3.126,847,3.429,849,3.429,852,3.429,858,3.429,859,3.429,867,3.836,868,3.836,881,2.884,882,2.51,927,3.126,1018,3.836,1048,3.836,1058,3.836,1059,2.682,1064,2.224,1078,2.682,1079,2.224,1121,2.682,1123,2.884,1124,2.884,1229,3.429,1235,3.429,1304,3.836,1305,3.836,1314,2.884,1319,2.51,1361,3.836,1362,3.836,1381,4.429,1382,3.836,1399,2.359,1432,2.682,1460,2.682,1484,4.429,1553,3.836,1554,3.836,1568,3.836,1569,4.429,1649,3.836,1690,3.836,1698,5.487,1700,3.126,1701,3.836,1702,3.836,1711,3.836,1777,5.185,1793,3.836,1794,3.836,1833,3.836,1843,3.836,1861,3.836,1914,3.836,2003,3.836,2017,2.359,2038,2.682,2052,2.51,2061,3.836,2091,4.954,2092,3.836,2110,2.51,2138,2.884,2177,4.434,2278,3.836,2310,3.836,2311,3.836,2455,3.836,2465,3.126,2550,3.836,2664,3.836,2981,3.836,2990,3.836,3009,3.836,3095,3.836,3146,3.836,3163,3.836,3235,3.836,3316,3.836,3323,3.836,3398,3.836,3455,3.836,3575,3.836,3576,3.836,3666,3.836,3707,3.836,3717,3.836,3718,4.452,3719,4.452,3720,4.452,3721,6.369,3722,5.75,3723,4.452,3724,4.452,3725,5.75,3726,5.75,3727,4.452,3728,4.452,3729,4.452,3730,4.452,3731,4.452,3732,4.452,3733,4.452,3734,5.75,3735,4.452,3736,4.452,3737,4.452,3738,4.452,3739,4.452,3740,6.369,3741,4.452,3742,6.731,3743,4.452,3744,4.452,3745,4.452,3746,4.452,3747,4.452,3748,4.452,3749,4.452,3750,4.452,3751,5.75,3752,4.452,3753,4.452,3754,4.452,3755,4.452,3756,5.75,3757,5.75,3758,4.452,3759,4.452,3760,4.452,3761,4.452,3762,5.487,3763,6.369,3764,4.452,3765,4.452,3766,4.452,3767,4.452,3768,4.452,3769,3.836,3770,5.75,3771,3.836,3772,4.452,3773,5.75,3774,5.75,3775,5.75,3776,5.75,3777,4.452,3778,4.452,3779,4.452,3780,4.452,3781,4.452,3782,4.452,3783,4.452,3784,4.452,3785,4.452,3786,4.452]],["title/dependencies.html",[720,3.161,3787,2.399]],["body/dependencies.html",[39,0.018,66,3.316,70,0.441,71,2.939,200,0.015,201,0.015,298,2.779,611,2.634,637,3.116,720,4.13,750,5.876,751,4.789,816,3.316,817,5.068,828,3.116,829,5.068,1253,3.544,3536,5.068,3788,5.882,3789,7.748,3790,5.882,3791,6.821,3792,5.882,3793,5.882,3794,5.882,3795,5.882,3796,5.882,3797,5.882,3798,5.882,3799,5.882,3800,5.882,3801,5.882,3802,5.882,3803,5.882]],["title/index.html",[24,0.113,3705,2.683,3804,3.114]],["body/index.html",[0,0.13,4,0.205,13,2.178,39,0.015,40,0.295,57,4.358,124,1.038,200,0.015,201,0.015,282,0.94,418,4.604,475,1.724,578,2.913,828,3.756,1113,4.874,1252,3.996,1276,3.409,1510,3.973,1772,4.358,1805,3.973,1882,3.665,2221,4.874,2242,6.107,2597,5.744,3108,4.874,3281,4.874,3451,4.358,3614,4.874,3787,4.358,3805,6.667,3806,7.089,3807,4.874,3808,5.658,3809,5.658,3810,6.667,3811,7.467,3812,5.658,3813,5.658,3814,5.658,3815,5.658,3816,5.658,3817,5.658,3818,5.658,3819,5.658,3820,5.658,3821,7.32,3822,5.658,3823,5.658,3824,5.658,3825,6.667,3826,6.667,3827,7.32,3828,6.667,3829,5.658,3830,5.658,3831,5.658,3832,5.658,3833,6.667,3834,5.658,3835,5.658,3836,5.658,3837,5.658,3838,7.089,3839,5.658,3840,4.358]],["title/modules.html",[719,3.316]],["body/modules.html",[39,0.016,200,0.016,201,0.016,615,3.072,661,5.297,718,4.317,719,3.983,729,3.983,751,4.317,3841,6.149,3842,6.996,3843,6.149]],["title/overview.html",[3840,3.944]],["body/overview.html",[1,0.984,2,0.869,39,0.018,48,3.071,116,0.828,119,0.749,123,1.036,127,1.088,129,1.036,131,1.164,133,1.036,136,1.09,138,1.036,140,1.036,143,1.036,146,0.984,148,1.036,150,1.036,153,1.036,156,1.036,158,1.036,160,1.036,162,1.036,164,0.984,166,1.09,168,1.09,171,1.036,173,1.036,176,1.036,178,1.036,180,0.984,181,0.828,182,1.09,184,1.036,186,1.036,188,0.984,190,1.036,192,1.036,194,1.036,197,0.984,200,0.014,201,0.014,204,1.917,444,1.151,475,1.444,676,2.511,717,3.328,718,5.651,719,3.071,720,3.328,721,4.084,722,4.084,723,3.328,724,3.651,725,4.084,726,4.084,727,4.084,728,4.084,729,4.249,730,6.12,731,5.651,732,6.12,733,5.651,734,6.12,735,5.651,736,6.12,737,5.651,738,5.472,739,5.651,740,5.156,1296,2.672,1377,2.856,1460,2.856,3762,4.084,3840,3.651,3844,4.74]],["title/properties.html",[25,0.365,3787,2.399]],["body/properties.html",[25,0.501,39,0.017,200,0.016,201,0.016,3807,5.327,3845,6.184]],["title/routes.html",[48,3.316]],["body/routes.html",[39,0.016,48,4.017,200,0.016,201,0.016]],["title/miscellaneous/variables.html",[3846,2.683,3847,3.878]],["body/miscellaneous/variables.html",[24,0.21,33,2.897,35,3.072,39,0.018,41,0.316,43,4.072,66,3.269,67,1.019,68,0.911,78,1.969,82,4.996,200,0.015,201,0.015,231,2.345,235,1.498,531,1.767,628,2.029,756,5.21,858,5.21,859,4.467,1882,4.639,3769,4.996,3771,5.827,3846,4.996,3847,4.996,3848,5.798,3849,5.798,3850,5.798,3851,5.798,3852,5.798,3853,5.798,3854,5.798,3855,5.798,3856,5.798,3857,6.764,3858,5.798,3859,5.798,3860,5.798,3861,5.798,3862,5.798,3863,5.798,3864,5.798,3865,5.798,3866,5.798,3867,5.798,3868,5.798,3869,5.798,3870,5.798,3871,5.798,3872,5.798]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":434,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"injectables/MessageFirebaseService.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":3845,"title":{},"body":{"properties.html":{}}}],["0.08",{"_index":965,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["0.13.0",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":473,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["0.2",{"_index":1005,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["0.3",{"_index":1911,"title":{},"body":{"components/IntroComponent.html":{}}}],["0.37",{"_index":1356,"title":{},"body":{"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{}}}],["0.4",{"_index":984,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["0.456",{"_index":1244,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["0.4s",{"_index":1007,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["0.5",{"_index":1474,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["0.5px",{"_index":1379,"title":{},"body":{"components/DateLineComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{}}}],["0.5rem",{"_index":1483,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["0.5s",{"_index":1894,"title":{},"body":{"components/IntroComponent.html":{}}}],["0.75",{"_index":2059,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["0.8",{"_index":1189,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ThreadComponent.html":{}}}],["0.85",{"_index":572,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["0.mdc",{"_index":429,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["0.ng",{"_index":405,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["0/1",{"_index":3770,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3773,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":3772,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":3775,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3722,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3733,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3740,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3774,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3776,"title":{},"body":{"coverage.html":{}}}],["00000014",{"_index":1481,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["00000033",{"_index":1461,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["00d84f",{"_index":1303,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["02742",{"_index":2456,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["0px",{"_index":449,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["1",{"_index":444,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"overview.html":{}}}],["1)!important",{"_index":2002,"title":{},"body":{"components/LoginComponent.html":{}}}],["1).tostring().padstart(2",{"_index":1671,"title":{},"body":{"injectables/FormatService.html":{}}}],["1.22",{"_index":1886,"title":{},"body":{"components/IntroComponent.html":{}}}],["1.5.0",{"_index":3797,"title":{},"body":{"dependencies.html":{}}}],["1.5em",{"_index":489,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/EditChannelComponent.html":{}}}],["1.5s",{"_index":1008,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["1/3",{"_index":3763,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":3782,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":3748,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1240,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["10.5.0",{"_index":3798,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":375,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["1000",{"_index":1691,"title":{},"body":{"injectables/FormatService.html":{},"components/IntroComponent.html":{}}}],["1000px",{"_index":1477,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{}}}],["100px",{"_index":973,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{}}}],["100vh",{"_index":498,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["100vw",{"_index":579,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["1024",{"_index":1754,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["1024px",{"_index":673,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["103px",{"_index":1630,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["104",{"_index":1642,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["108deg",{"_index":3210,"title":{},"body":{"components/SidenavComponent.html":{}}}],["10px",{"_index":477,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["10vh",{"_index":1791,"title":{},"body":{"components/HeaderComponent.html":{}}}],["10vw",{"_index":1478,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["11/18",{"_index":3759,"title":{},"body":{"coverage.html":{}}}],["11/28",{"_index":3728,"title":{},"body":{"coverage.html":{}}}],["110",{"_index":1299,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["110px",{"_index":2060,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["11px",{"_index":1195,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["12",{"_index":3778,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":1013,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["123",{"_index":1857,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["12345",{"_index":1858,"title":{},"body":{"components/ImprintComponent.html":{}}}],["125px",{"_index":569,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MainscreenComponent.html":{}}}],["126",{"_index":469,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["126px",{"_index":450,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["12px",{"_index":485,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["137px",{"_index":991,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["13px",{"_index":2171,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["14",{"_index":1473,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["14/34",{"_index":3746,"title":{},"body":{"coverage.html":{}}}],["1400",{"_index":1614,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["14px",{"_index":3453,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["15",{"_index":1460,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["15/22",{"_index":3777,"title":{},"body":{"coverage.html":{}}}],["15/25",{"_index":3784,"title":{},"body":{"coverage.html":{}}}],["15/36",{"_index":3743,"title":{},"body":{"coverage.html":{}}}],["150",{"_index":1354,"title":{},"body":{"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{}}}],["1500",{"_index":946,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["155px",{"_index":1892,"title":{},"body":{"components/IntroComponent.html":{}}}],["15px",{"_index":1218,"title":{},"body":{"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["16",{"_index":3747,"title":{},"body":{"coverage.html":{}}}],["16.2.0",{"_index":3789,"title":{},"body":{"dependencies.html":{}}}],["16.2.3",{"_index":3808,"title":{},"body":{"index.html":{}}}],["16.2.9",{"_index":3791,"title":{},"body":{"dependencies.html":{}}}],["16.55px",{"_index":2172,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["166",{"_index":1243,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["168px",{"_index":974,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["16px",{"_index":656,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["176",{"_index":982,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["17px",{"_index":1646,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{}}}],["18",{"_index":3738,"title":{},"body":{"coverage.html":{}}}],["180px",{"_index":1790,"title":{},"body":{"components/HeaderComponent.html":{}}}],["184px",{"_index":1895,"title":{},"body":{"components/IntroComponent.html":{}}}],["18px",{"_index":454,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{}}}],["190px",{"_index":3094,"title":{},"body":{"components/RegisterComponent.html":{}}}],["193px",{"_index":1645,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["19px",{"_index":1566,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["1:73912220171:web:0e604f1dd6f6f3f304e50e",{"_index":3859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1em",{"_index":1471,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["1px",{"_index":441,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["1s",{"_index":1888,"title":{},"body":{"components/IntroComponent.html":{}}}],["2",{"_index":1377,"title":{},"body":{"components/DateLineComponent.html":{},"components/IntroComponent.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ThreadComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["2/11",{"_index":3739,"title":{},"body":{"coverage.html":{}}}],["2/32",{"_index":3780,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3723,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":3721,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":3756,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":3781,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1263,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["200.woff2",{"_index":1266,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["200px",{"_index":1900,"title":{},"body":{"components/IntroComponent.html":{}}}],["20px",{"_index":484,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{}}}],["21",{"_index":2664,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["217",{"_index":983,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["218px",{"_index":1012,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["21px",{"_index":1011,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["22",{"_index":3736,"title":{},"body":{"coverage.html":{}}}],["22px",{"_index":1016,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["238",{"_index":1634,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["23px",{"_index":1190,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ThreadComponent.html":{}}}],["24",{"_index":1689,"title":{},"body":{"injectables/FormatService.html":{}}}],["24.55px",{"_index":2166,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["24/42",{"_index":3755,"title":{},"body":{"coverage.html":{}}}],["240px",{"_index":1351,"title":{},"body":{"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{}}}],["241",{"_index":1470,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["242",{"_index":971,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{}}}],["243",{"_index":470,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["24px",{"_index":488,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["25",{"_index":1777,"title":{},"body":{"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["250",{"_index":1355,"title":{},"body":{"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{}}}],["250px",{"_index":348,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/MainscreenComponent.html":{}}}],["254",{"_index":1635,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["255",{"_index":1002,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/MessageEditComponent.html":{}}}],["25px",{"_index":986,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["26",{"_index":3766,"title":{},"body":{"coverage.html":{}}}],["269px",{"_index":1648,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["26px",{"_index":1010,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["28",{"_index":3764,"title":{},"body":{"coverage.html":{}}}],["280px",{"_index":1238,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["285px",{"_index":560,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["28px",{"_index":464,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/MainscreenComponent.html":{}}}],["29px",{"_index":455,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/LoginComponent.html":{}}}],["2px",{"_index":963,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{}}}],["3",{"_index":366,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["3/12",{"_index":3761,"title":{},"body":{"coverage.html":{}}}],["3/20",{"_index":3744,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":994,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["300",{"_index":1267,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["300.woff2",{"_index":1268,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["3000",{"_index":103,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/UserProfilComponent.html":{}}}],["300px",{"_index":1459,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["30px",{"_index":385,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["30vh",{"_index":2056,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["310px",{"_index":1247,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["313ae6",{"_index":1885,"title":{},"body":{"components/IntroComponent.html":{}}}],["323px",{"_index":1015,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["32px",{"_index":462,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["33",{"_index":3762,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["33px",{"_index":3229,"title":{},"body":{"components/SidenavComponent.html":{}}}],["340px",{"_index":2881,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["35",{"_index":1234,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ToolbarComponent.html":{}}}],["350px",{"_index":1640,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{}}}],["35px",{"_index":392,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["36",{"_index":3725,"title":{},"body":{"coverage.html":{}}}],["360px",{"_index":1778,"title":{},"body":{"components/HeaderComponent.html":{}}}],["366px",{"_index":2051,"title":{},"body":{"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["36px",{"_index":1003,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["370px",{"_index":2176,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["37px",{"_index":1352,"title":{},"body":{"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/SidenavComponent.html":{}}}],["38",{"_index":3751,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1235,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"coverage.html":{}}}],["39px",{"_index":1236,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["3px",{"_index":1782,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":2804,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["4/11",{"_index":3726,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":3724,"title":{},"body":{"coverage.html":{}}}],["4/18",{"_index":3737,"title":{},"body":{"coverage.html":{}}}],["4/19",{"_index":3732,"title":{},"body":{"coverage.html":{}}}],["4/33",{"_index":3779,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":3731,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1698,"title":{},"body":{"injectables/FormatService.html":{},"coverage.html":{}}}],["400",{"_index":2001,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{}}}],["400px",{"_index":990,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["40px",{"_index":1207,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["41",{"_index":3742,"title":{},"body":{"coverage.html":{}}}],["41px",{"_index":1639,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["42",{"_index":3734,"title":{},"body":{"coverage.html":{}}}],["42px",{"_index":1230,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["43px",{"_index":1999,"title":{},"body":{"components/LoginComponent.html":{}}}],["44",{"_index":2550,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["444df2",{"_index":442,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["44px",{"_index":570,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["45px",{"_index":562,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/ThreadComponent.html":{}}}],["460px",{"_index":2879,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["46px",{"_index":968,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["47",{"_index":3749,"title":{},"body":{"coverage.html":{}}}],["480px",{"_index":2174,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["48px",{"_index":582,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ImprintComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["49",{"_index":2549,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["496px",{"_index":1246,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["49px",{"_index":987,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["4f9d00",{"_index":1302,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["4px",{"_index":494,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{}}}],["5",{"_index":1296,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"overview.html":{}}}],["5/13",{"_index":3760,"title":{},"body":{"coverage.html":{}}}],["5/19",{"_index":3767,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":367,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["500",{"_index":1269,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["500.woff2",{"_index":1270,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["5000",{"_index":1324,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["500px",{"_index":1632,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["50px",{"_index":486,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{}}}],["510px",{"_index":2173,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["530px",{"_index":1000,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["535af1",{"_index":1283,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["53px",{"_index":960,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["54px",{"_index":568,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["55",{"_index":2551,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["550px",{"_index":1904,"title":{},"body":{"components/IntroComponent.html":{}}}],["556px",{"_index":378,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["560px",{"_index":2170,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["56px",{"_index":1014,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["57",{"_index":3754,"title":{},"body":{"coverage.html":{}}}],["570px",{"_index":1913,"title":{},"body":{"components/IntroComponent.html":{}}}],["57px",{"_index":443,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["58px",{"_index":451,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["59",{"_index":1565,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["5px",{"_index":979,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/DateLineComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["6",{"_index":2465,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["6/12",{"_index":3729,"title":{},"body":{"coverage.html":{}}}],["6/14",{"_index":3768,"title":{},"body":{"coverage.html":{}}}],["6/21",{"_index":3765,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3783,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1690,"title":{},"body":{"injectables/FormatService.html":{},"coverage.html":{}}}],["600",{"_index":1271,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["600.woff2",{"_index":1272,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["600px",{"_index":2053,"title":{},"body":{"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["606px",{"_index":959,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["60px",{"_index":499,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["61",{"_index":3758,"title":{},"body":{"coverage.html":{}}}],["620px",{"_index":2169,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["640px",{"_index":1009,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["642px",{"_index":559,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["66",{"_index":1301,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["660px",{"_index":1647,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["68",{"_index":2455,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["686868",{"_index":1788,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["68px",{"_index":1245,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["692px",{"_index":3142,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["698px",{"_index":1629,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["6px",{"_index":1004,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["7",{"_index":3844,"title":{},"body":{"overview.html":{}}}],["7.6.1",{"_index":3794,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":3799,"title":{},"body":{"dependencies.html":{}}}],["7/17",{"_index":3757,"title":{},"body":{"coverage.html":{}}}],["7/18",{"_index":3752,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1291,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["700",{"_index":975,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/MessageEditComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{}}}],["700ms",{"_index":1893,"title":{},"body":{"components/IntroComponent.html":{}}}],["700px",{"_index":1644,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{}}}],["70px",{"_index":1202,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["70vh",{"_index":3159,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["720px",{"_index":1643,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["72px",{"_index":978,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["73912220171",{"_index":3868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1229,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"coverage.html":{}}}],["75px",{"_index":1903,"title":{},"body":{"components/IntroComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["768",{"_index":1768,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{}}}],["768px",{"_index":497,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["77",{"_index":970,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{}}}],["77px",{"_index":1237,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MainscreenComponent.html":{}}}],["78px",{"_index":1249,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["797ef3",{"_index":575,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/IntroComponent.html":{},"components/MessageEditComponent.html":{}}}],["7px",{"_index":576,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/StartscreenComponent.html":{}}}],["8",{"_index":2057,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["8/17",{"_index":3750,"title":{},"body":{"coverage.html":{}}}],["8/18",{"_index":3730,"title":{},"body":{"coverage.html":{}}}],["8/19",{"_index":3735,"title":{},"body":{"coverage.html":{}}}],["800px",{"_index":379,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/IntroComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["80px",{"_index":1912,"title":{},"body":{"components/IntroComponent.html":{}}}],["80vw",{"_index":1479,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["86px",{"_index":1636,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["880px",{"_index":1017,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["8px",{"_index":977,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["9",{"_index":1784,"title":{},"body":{"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["9.2.0",{"_index":3796,"title":{},"body":{"dependencies.html":{}}}],["9.55px",{"_index":2175,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["90",{"_index":1469,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["90210",{"_index":2547,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["90px",{"_index":3143,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["92px",{"_index":1891,"title":{},"body":{"components/IntroComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/StartscreenComponent.html":{}}}],["94",{"_index":574,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["95",{"_index":1297,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["98.76",{"_index":1887,"title":{},"body":{"components/IntroComponent.html":{}}}],["99",{"_index":1290,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["9])(?=.*[!@#$%^&*()_",{"_index":3119,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["_isopened",{"_index":587,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["_message",{"_index":2095,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["_path",{"_index":2096,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["a.fullname.localecompare(b.fullname",{"_index":3548,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["aa8ad",{"_index":3857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aa8ad.appspot.com",{"_index":3861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aa8ad.firebaseapp.com",{"_index":3866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abbrechen",{"_index":3660,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1708,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["abgefragt",{"_index":2478,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abgeschlossener",{"_index":2826,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abgesehen",{"_index":2753,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abs",{"_index":2466,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abs&auml;tzen",{"_index":2616,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abschnitt",{"_index":2360,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["absence",{"_index":3704,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["absolute",{"_index":461,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["absätzen",{"_index":2927,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abw&auml;gung",{"_index":2744,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["abwägung",{"_index":2955,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["accessors",{"_index":211,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelUsersComponent.html":{},"directives/IfChangedDirective.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{}}}],["accordingly",{"_index":3039,"title":{},"body":{"components/RegisterComponent.html":{}}}],["accounticon",{"_index":3231,"title":{},"body":{"components/SidenavComponent.html":{}}}],["achtung",{"_index":3653,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["action",{"_index":18,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["actionhandler",{"_index":108,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["actionhandlercomponent",{"_index":1,"title":{"components/ActionHandlerComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actions",{"_index":894,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ToolbarComponent.html":{}}}],["activatedroute",{"_index":32,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["active",{"_index":2000,"title":{},"body":{"components/LoginComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["activeselection",{"_index":212,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["activeselection(selection",{"_index":229,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["activeselectionobject",{"_index":207,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["activeselectionservice",{"_index":203,"title":{"injectables/ActiveSelectionService.html":{}},"body":{"injectables/ActiveSelectionService.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["activeselectiontype",{"_index":208,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["actual_component",{"_index":199,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["adb0d9",{"_index":483,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/ThreadComponent.html":{}}}],["add",{"_index":124,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"index.html":{}}}],["addchaneneldialog",{"_index":266,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["addchannel",{"_index":286,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/SidenavComponent.html":{}}}],["addchanneldialogcomponent",{"_index":123,"title":{"components/AddChannelDialogComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addchanneldialogcontainer",{"_index":376,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["addchanneldialogheader",{"_index":393,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["addchannelform",{"_index":242,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["adddoc",{"_index":2237,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["added",{"_index":1524,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"injectables/MessageFirebaseService.html":{}}}],["addimage",{"_index":3215,"title":{},"body":{"components/SidenavComponent.html":{}}}],["adding",{"_index":524,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelUsersComponent.html":{}}}],["addition",{"_index":2222,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["addmembercontainer",{"_index":1223,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["addmemberimage",{"_index":1224,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["addmemberinmenu",{"_index":1225,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["addmembers",{"_index":1208,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["addmembertext",{"_index":1226,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["addnewchanneldialog",{"_index":3179,"title":{},"body":{"components/SidenavComponent.html":{}}}],["addnewuserwithuid",{"_index":3473,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["addnewuserwithuid(user",{"_index":3487,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["addreaction",{"_index":584,"title":{},"body":{"components/AddreactionComponent.html":{},"components/MessageEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["addreaction'},{'name",{"_index":128,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["addreaction.component.html",{"_index":586,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["addreaction.component.scss",{"_index":585,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["addreactioncomponent",{"_index":127,"title":{"components/AddreactionComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addregistuserwithuid",{"_index":3474,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["addregistuserwithuid(uid",{"_index":3489,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["address",{"_index":3662,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["adds",{"_index":273,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["addselection",{"_index":1248,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["adduserdialogcomponent",{"_index":129,"title":{"components/AddUserDialogComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adduserevent",{"_index":1396,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["addusertochannelcontainer",{"_index":558,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["addusertochanneldialoginput",{"_index":573,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["addusertoselection",{"_index":567,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["addusertoselectioncontainer",{"_index":577,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["adress",{"_index":3524,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["adresse",{"_index":95,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["adressen",{"_index":2562,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["adresszeile",{"_index":2775,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["affecting",{"_index":3435,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["afterviewinit",{"_index":3532,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["against",{"_index":1821,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["aizasyd1r",{"_index":3862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aktiviert",{"_index":2783,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aktuell",{"_index":538,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["align",{"_index":114,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["alle",{"_index":554,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["allein",{"_index":2556,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allem",{"_index":2390,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allen",{"_index":2817,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aller",{"_index":2809,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allgemeine",{"_index":2324,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["allowed",{"_index":988,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["already",{"_index":3248,"title":{},"body":{"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{}}}],["als",{"_index":2770,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["amoundofusersinchannel",{"_index":1196,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["analyse",{"_index":2405,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anbieter",{"_index":2447,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["andere",{"_index":2378,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anderen",{"_index":2558,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anderweitiger",{"_index":2713,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfrage",{"_index":2805,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anfragen",{"_index":2769,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["angeforderter",{"_index":2792,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["angelegt",{"_index":3072,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":828,"title":{},"body":{"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"directives/IfChangedDirective.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":3788,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3790,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/observers",{"_index":1117,"title":{},"body":{"components/ChatComponent.html":{}}}],["angular/common",{"_index":3536,"title":{},"body":{"injectables/UserFirebaseService.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":3792,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":3793,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/app",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/auth",{"_index":758,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/fire/database",{"_index":830,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["angular/fire/firestore",{"_index":759,"title":{},"body":{"modules/AppModule.html":{},"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["angular/fire/storage",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"injectables/StorageFirebaseService.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1253,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":833,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":807,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":782,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["angular/material/card",{"_index":772,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":778,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":845,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":300,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"modules/AppModule.html":{},"components/SidenavComponent.html":{}}}],["angular/material/form",{"_index":774,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["angular/material/input",{"_index":780,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":795,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["angular/material/radio",{"_index":843,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":809,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":838,"title":{},"body":{"modules/AppModule.html":{},"components/ChatViewComponent.html":{}}}],["angular/platform",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":71,"title":{},"body":{"components/ActionHandlerComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1006,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["animation=\"shift",{"_index":2293,"title":{},"body":{"injectables/NotificationService.html":{}}}],["animationlogo",{"_index":1868,"title":{},"body":{"components/IntroComponent.html":{}}}],["animations",{"_index":1864,"title":{},"body":{"components/IntroComponent.html":{}}}],["animationstart",{"_index":1869,"title":{},"body":{"components/IntroComponent.html":{}}}],["anliegens",{"_index":2813,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["anmelden",{"_index":1992,"title":{},"body":{"components/LoginComponent.html":{},"components/UserProfilComponent.html":{}}}],["anmeldung",{"_index":1984,"title":{},"body":{"components/LoginComponent.html":{}}}],["anschliessend",{"_index":2699,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["answer",{"_index":675,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["answer.id",{"_index":2271,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["answer.path",{"_index":2272,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["answers",{"_index":2213,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{}}}],["answerspath",{"_index":3327,"title":{},"body":{"components/ThreadComponent.html":{}}}],["antworten",{"_index":3368,"title":{},"body":{"components/ThreadComponent.html":{}}}],["anywhere",{"_index":3374,"title":{},"body":{"components/ThreadComponent.html":{}}}],["anzuzeigen",{"_index":2841,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["apikey",{"_index":82,"title":{},"body":{"components/ActionHandlerComponent.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["app.component",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":713,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":712,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":131,"title":{"components/AppComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":409,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["appid",{"_index":3858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appifchanged",{"_index":198,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["appifchanged(value",{"_index":1825,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["application",{"_index":3816,"title":{},"body":{"index.html":{}}}],["application/pdf",{"_index":3305,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["apply",{"_index":2288,"title":{},"body":{"injectables/NotificationService.html":{}}}],["appmodule",{"_index":718,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":729,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["arbeit",{"_index":1988,"title":{},"body":{"components/LoginComponent.html":{}}}],["arbeiten",{"_index":2621,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["arbeitsplatzes",{"_index":2707,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["array",{"_index":1414,"title":{},"body":{"components/EditChannelComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["array(length",{"_index":1710,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["arrow_drop",{"_index":3230,"title":{},"body":{"components/SidenavComponent.html":{}}}],["arrow_drop_channels",{"_index":3217,"title":{},"body":{"components/SidenavComponent.html":{}}}],["art",{"_index":2464,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["artifacts",{"_index":3822,"title":{},"body":{"index.html":{}}}],["aspect",{"_index":1203,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["assets/img/avatar",{"_index":931,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["assets/img/avatar/avatar0.svg",{"_index":703,"title":{},"body":{"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/User.html":{}}}],["assets/img/icons/eye.png",{"_index":1965,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["assets/img/icons/hideeye.png",{"_index":1959,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["associated",{"_index":1589,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ThreadComponent.html":{}}}],["async",{"_index":877,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["asynchronously",{"_index":2122,"title":{},"body":{"components/MessageEditComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["attempts",{"_index":3038,"title":{},"body":{"components/RegisterComponent.html":{}}}],["au&szlig;erdem",{"_index":2423,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auch",{"_index":1182,"title":{},"body":{"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["auf",{"_index":337,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["aufbewahrungsfristen",{"_index":2583,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufenthalts",{"_index":2706,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auffordern",{"_index":2824,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgef&uuml;hrten",{"_index":2348,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgeführten",{"_index":2887,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufgerufen",{"_index":2849,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufnehmen",{"_index":2844,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufruf",{"_index":2835,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichts&shy;beh&ouml;rde",{"_index":2701,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichtsbeh&ouml;rde",{"_index":2438,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichtsbehörde",{"_index":2897,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufsichts­behörde",{"_index":2943,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auftragsverarbeitern",{"_index":2641,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auftragsverarbeitung",{"_index":2493,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aufweisen",{"_index":2537,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auml",{"_index":2564,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aus",{"_index":541,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["aus&uuml;bung",{"_index":2689,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdr&uuml;cklich",{"_index":2791,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdr&uuml;cklichen",{"_index":2593,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdrücklich",{"_index":2969,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausdrücklichen",{"_index":2919,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausf&uuml;hrliche",{"_index":2342,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausführliche",{"_index":2886,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausgeloggt",{"_index":3656,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["ausgewählten",{"_index":539,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["aush&auml;ndigen",{"_index":2723,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["aushändigen",{"_index":2950,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auskunft",{"_index":2416,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschlie&szlig;lich",{"_index":2479,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausschließlich",{"_index":2903,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ausübung",{"_index":2940,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["auth",{"_index":3537,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["authdomain",{"_index":3865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":1940,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["authfirebaseservice",{"_index":34,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["authguard",{"_index":858,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":33,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":1199,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ThreadComponent.html":{}}}],["automatically",{"_index":3817,"title":{},"body":{"index.html":{}}}],["automatisch",{"_index":2379,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["automatisiert",{"_index":2718,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["autorid",{"_index":2062,"title":{},"body":{"classes/Message.html":{}}}],["außerdem",{"_index":2892,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["available",{"_index":615,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserStatusFirebaseService.html":{},"modules.html":{}}}],["avatar",{"_index":134,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"components/UserProfilComponent.html":{}}}],["avatar's",{"_index":907,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatar0",{"_index":1357,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["avatar1.svg",{"_index":915,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatar2.svg",{"_index":916,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatar3.svg",{"_index":917,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatar4.svg",{"_index":918,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatar5.svg",{"_index":919,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatar6.svg",{"_index":920,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatarchoosecomponent",{"_index":133,"title":{"components/AvatarChooseComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["avatars",{"_index":872,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["avatarsrc",{"_index":2063,"title":{},"body":{"classes/Message.html":{}}}],["avv",{"_index":2495,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["await",{"_index":937,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["b",{"_index":1463,"title":{},"body":{"components/EditChannelComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["back",{"_index":2167,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["background",{"_index":387,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["background.d",{"_index":1889,"title":{},"body":{"components/IntroComponent.html":{}}}],["bar",{"_index":1997,"title":{},"body":{"components/LoginComponent.html":{},"components/ThreadComponent.html":{}}}],["based",{"_index":520,"title":{},"body":{"components/AddUserDialogComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["bdquo;eu",{"_index":2865,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;hinweis",{"_index":2361,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;http://&ldquo",{"_index":2777,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bdquo;https://&ldquo",{"_index":2778,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bearbeiten",{"_index":1454,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["bearbeitung",{"_index":2812,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["behalten",{"_index":2796,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["behandeln",{"_index":2518,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bei",{"_index":1987,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/StartscreenComponent.html":{}}}],["beim",{"_index":2383,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["beispiel",{"_index":363,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["beispielfirma",{"_index":2545,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ben&ouml;tigen",{"_index":2734,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ben&ouml;tigten",{"_index":2837,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benutzen",{"_index":2523,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benötigen",{"_index":2951,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["benötigten",{"_index":2974,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ber",{"_index":1625,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["berblick",{"_index":2883,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berechtigten",{"_index":2610,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berechtigtes",{"_index":2470,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereinkommen",{"_index":2979,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereitgestellt",{"_index":2834,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereits",{"_index":2651,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bereitstellung",{"_index":2403,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berichtigung",{"_index":2424,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bermitteln",{"_index":2966,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bermittlung",{"_index":2929,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berprüfen",{"_index":2952,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bersandten",{"_index":2972,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bersendung",{"_index":2968,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bertragung",{"_index":2920,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beruht",{"_index":2675,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["berwiegen",{"_index":2939,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschreibung",{"_index":370,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/EditChannelComponent.html":{}}}],["beschwerde&shy;recht",{"_index":2700,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerderecht",{"_index":2436,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["beschwerde­recht",{"_index":2942,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besondere",{"_index":2590,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besonderen",{"_index":2661,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besprechen",{"_index":1186,"title":{},"body":{"components/ChatComponent.html":{}}}],["bestehen",{"_index":3086,"title":{},"body":{"components/RegisterComponent.html":{}}}],["besteht",{"_index":2711,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestellungen",{"_index":2768,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besten",{"_index":357,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["bestimmte",{"_index":557,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["bestimmten",{"_index":2430,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestimmungen",{"_index":2671,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestreiten",{"_index":2733,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bestätigung",{"_index":3657,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["besuch",{"_index":2384,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["besuchen",{"_index":2335,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreffender",{"_index":2693,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreiben",{"_index":2692,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreiber",{"_index":2511,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betreibers",{"_index":1854,"title":{},"body":{"components/ImprintComponent.html":{}}}],["betreten",{"_index":2398,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betriebssystem",{"_index":2393,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["betroffenen",{"_index":2677,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["between",{"_index":395,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["bewahre",{"_index":1176,"title":{},"body":{"components/ChatComponent.html":{}}}],["bez&uuml;glich",{"_index":2412,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bezüglich",{"_index":2891,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bild",{"_index":954,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["bildes",{"_index":3315,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["bis",{"_index":2572,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bitte",{"_index":371,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["black",{"_index":566,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["bleiben",{"_index":2828,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["bleibt",{"_index":2655,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["blick",{"_index":2323,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["block",{"_index":1482,"title":{},"body":{"components/EditChannelComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["blue",{"_index":985,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["body",{"_index":478,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["bold",{"_index":457,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/LoginComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["boolean",{"_index":604,"title":{},"body":{"components/AddreactionComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/IfChangedService.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["boolean=false",{"_index":1529,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["bootstrap",{"_index":722,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":390,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["bottom",{"_index":463,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["box",{"_index":961,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["br",{"_index":993,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["break",{"_index":99,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["brigen",{"_index":2971,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browse",{"_index":3842,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"components/PrivacyPolicyComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":761,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":760,"title":{},"body":{"modules/AppModule.html":{}}}],["browsercache",{"_index":2838,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browsermodule",{"_index":749,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":2776,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["browserzeile",{"_index":2782,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["btn",{"_index":1281,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["bubble",{"_index":715,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":3821,"title":{},"body":{"index.html":{}}}],["button",{"_index":659,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["bzw",{"_index":2589,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["c",{"_index":2607,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["c1205077789",{"_index":404,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["c2786309385",{"_index":1211,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["c546112664",{"_index":3145,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["calc",{"_index":1380,"title":{},"body":{"components/DateLineComponent.html":{},"components/ThreadComponent.html":{}}}],["calc(100",{"_index":487,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["calc(100vh",{"_index":2054,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["calc(100vw",{"_index":501,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["calc(40",{"_index":1910,"title":{},"body":{"components/IntroComponent.html":{}}}],["calc(50",{"_index":1378,"title":{},"body":{"components/DateLineComponent.html":{},"components/IntroComponent.html":{},"components/ThreadComponent.html":{}}}],["called",{"_index":890,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["calling",{"_index":3441,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["canactivate",{"_index":862,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":3850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancelselection",{"_index":1251,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["capabilities",{"_index":3837,"title":{},"body":{"index.html":{}}}],["card",{"_index":1289,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["case",{"_index":92,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["catch",{"_index":939,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/MessageEditComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["catch((error",{"_index":1341,"title":{},"body":{"components/ChatViewComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["cdk",{"_index":479,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["center",{"_index":113,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["change",{"_index":57,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ChatComponent.html":{},"index.html":{}}}],["changed",{"_index":1124,"title":{},"body":{"components/ChatComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["changed.directive",{"_index":804,"title":{},"body":{"modules/AppModule.html":{}}}],["changed.directive.ts",{"_index":1794,"title":{},"body":{"directives/IfChangedDirective.html":{},"coverage.html":{}}}],["changed.directive.ts:25",{"_index":1801,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["changed.directive.ts:47",{"_index":1815,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["changed.directive.ts:7",{"_index":1800,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["changes",{"_index":1140,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"directives/IfChangedDirective.html":{},"components/UserProfilComponent.html":{}}}],["channel",{"_index":125,"title":{"classes/Channel.html":{}},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["channel'},{'name",{"_index":137,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["channel(doc.data",{"_index":3571,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["channel(newchannel",{"_index":332,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["channel(value",{"_index":313,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["channel,chat",{"_index":227,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["channel.channeldescription",{"_index":1456,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.channelname",{"_index":1453,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component",{"_index":841,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["channel.component.html",{"_index":1384,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.scss",{"_index":1383,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts",{"_index":1382,"title":{},"body":{"components/EditChannelComponent.html":{},"coverage.html":{}}}],["channel.component.ts:107",{"_index":1421,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:116",{"_index":1412,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:14",{"_index":1410,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:15",{"_index":1409,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:17",{"_index":1426,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:18",{"_index":1428,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:19",{"_index":1429,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:22",{"_index":1431,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:23",{"_index":1430,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:24",{"_index":1427,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:26",{"_index":1400,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:48",{"_index":1418,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:64",{"_index":1411,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:72",{"_index":1415,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:81",{"_index":1425,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.component.ts:94",{"_index":1423,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channel.users",{"_index":1534,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["channel.users.length",{"_index":1535,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["channel/edit",{"_index":840,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditChannelComponent.html":{},"coverage.html":{}}}],["channelcomponent",{"_index":136,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["channelcopy",{"_index":1487,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["channelcreatorname",{"_index":1385,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["channeldescription",{"_index":244,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"classes/Channel.html":{}}}],["channeldescriptioncontainer",{"_index":491,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["channelfirebaseservice",{"_index":258,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["channelname",{"_index":245,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"classes/Channel.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["channelnamecontainer",{"_index":490,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["channelopen",{"_index":2007,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["channels",{"_index":351,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"classes/Answer.html":{},"components/SidenavComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{}}}],["channelselected",{"_index":1722,"title":{},"body":{"components/HeaderComponent.html":{}}}],["channelservice",{"_index":1408,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["charset",{"_index":1707,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["chat",{"_index":141,"title":{"classes/Chat.html":{}},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["chat'},{'name",{"_index":139,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["chat.class",{"_index":1035,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["chat.component.html",{"_index":1061,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss",{"_index":1127,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat.component.scss,../../../styles.scss",{"_index":1060,"title":{},"body":{"components/ChatComponent.html":{}}}],["chat:11",{"_index":3319,"title":{},"body":{"classes/Thread.html":{}}}],["chat:17",{"_index":1034,"title":{},"body":{"classes/Channel.html":{}}}],["chat:5",{"_index":1031,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["chat:6",{"_index":1032,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["chat:7",{"_index":1033,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["chat__message",{"_index":665,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["chatcomponent",{"_index":138,"title":{"components/ChatComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chatfirebaseservice",{"_index":1078,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["chatparter",{"_index":1100,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatpartner",{"_index":1062,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatpartner.fullname",{"_index":1160,"title":{},"body":{"components/ChatComponent.html":{}}}],["chats",{"_index":678,"title":{},"body":{"classes/Answer.html":{},"components/SidenavComponent.html":{},"classes/User.html":{}}}],["chats/${newselectedchat.id}/messages",{"_index":1145,"title":{},"body":{"components/ChatComponent.html":{}}}],["chatselected",{"_index":1723,"title":{},"body":{"components/HeaderComponent.html":{}}}],["chatservice",{"_index":1063,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["chatviewcomponent",{"_index":140,"title":{"components/ChatViewComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chechs",{"_index":3522,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["check",{"_index":1510,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/UserFirebaseService.html":{},"index.html":{}}}],["checkbox",{"_index":3028,"title":{},"body":{"components/RegisterComponent.html":{}}}],["checkboxvalue",{"_index":3012,"title":{},"body":{"components/RegisterComponent.html":{}}}],["checkifuserisselected",{"_index":1490,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["checkifuserisselected(channel",{"_index":1500,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["checks",{"_index":1502,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["checkstatus",{"_index":1309,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["child",{"_index":3372,"title":{},"body":{"components/ThreadComponent.html":{}}}],["choice",{"_index":3832,"title":{},"body":{"index.html":{}}}],["choose",{"_index":869,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose'},{'name",{"_index":135,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["choose.component",{"_index":792,"title":{},"body":{"modules/AppModule.html":{}}}],["choose.component.html",{"_index":871,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.scss",{"_index":870,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts",{"_index":868,"title":{},"body":{"components/AvatarChooseComponent.html":{},"coverage.html":{}}}],["choose.component.ts:14",{"_index":924,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:15",{"_index":925,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:17",{"_index":921,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:24",{"_index":883,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:27",{"_index":926,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:29",{"_index":922,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:33",{"_index":885,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:41",{"_index":886,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:51",{"_index":888,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:60",{"_index":905,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:70",{"_index":911,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose.component.ts:87",{"_index":896,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["choose/avatar",{"_index":791,"title":{},"body":{"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"coverage.html":{}}}],["chooseselection",{"_index":504,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["class",{"_index":75,"title":{"classes/Answer.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{}}}],["classes",{"_index":676,"title":{},"body":{"classes/Answer.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{},"overview.html":{}}}],["clears",{"_index":1808,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["cli",{"_index":3806,"title":{},"body":{"index.html":{}}}],["click",{"_index":645,"title":{},"body":{"components/AddreactionComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["clickevent",{"_index":1748,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["clicklistener",{"_index":588,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["close",{"_index":564,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{}}}],["closeavatar",{"_index":874,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/StartscreenComponent.html":{}}}],["closeavatarview",{"_index":879,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["closechatorchannel",{"_index":1715,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closedialog",{"_index":250,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["closeeditmode",{"_index":2100,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["closeemojibar",{"_index":2101,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["closeemojilist",{"_index":3331,"title":{},"body":{"components/ThreadComponent.html":{}}}],["closeemptyviewevent",{"_index":1725,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeevent",{"_index":1397,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["closeforgotpassword",{"_index":1578,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["closeforgotpasswordview",{"_index":1580,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["closeicon",{"_index":1282,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["closeimprint",{"_index":1847,"title":{},"body":{"components/ImprintComponent.html":{}}}],["closeimprintandprivacy",{"_index":3097,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["closeimprintview",{"_index":1848,"title":{},"body":{"components/ImprintComponent.html":{}}}],["closemenu",{"_index":1216,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["closeprivacypolicy",{"_index":2315,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["closeprivacypolicyview",{"_index":2316,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["closeprofilepopup",{"_index":1716,"title":{},"body":{"components/HeaderComponent.html":{}}}],["closeregister",{"_index":3017,"title":{},"body":{"components/RegisterComponent.html":{},"components/StartscreenComponent.html":{}}}],["closeregisterview",{"_index":3020,"title":{},"body":{"components/RegisterComponent.html":{}}}],["closes",{"_index":265,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/MessageEditComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["closethread",{"_index":3332,"title":{},"body":{"components/ThreadComponent.html":{}}}],["closetoolbar",{"_index":3333,"title":{},"body":{"components/ThreadComponent.html":{}}}],["closeuserprofil",{"_index":3667,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["closeuserprofilsubject",{"_index":3668,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["closewithoutsave",{"_index":3584,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["closing",{"_index":1585,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["cluster_appmodule",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1772,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"index.html":{}}}],["col",{"_index":1359,"title":{},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["collection",{"_index":2230,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["color",{"_index":388,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["column",{"_index":381,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["command",{"_index":3833,"title":{},"body":{"index.html":{}}}],["compares",{"_index":1803,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["comparisons",{"_index":1814,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["complete",{"_index":2210,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["component",{"_index":0,"title":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1817,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["component_template",{"_index":121,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["componente",{"_index":280,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"overview.html":{}}}],["componetn",{"_index":3349,"title":{},"body":{"components/ThreadComponent.html":{}}}],["computer",{"_index":2856,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["confirm",{"_index":62,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/UserProfilComponent.html":{}}}],["confirmedit",{"_index":3585,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["connects",{"_index":268,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["console",{"_index":2997,"title":{},"body":{"components/ReactionComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error(\"error",{"_index":1148,"title":{},"body":{"components/ChatComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["console.error('error",{"_index":941,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/MessageEditComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["console.error('fehler",{"_index":3313,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["console.log(\"authresponse",{"_index":3075,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(\"channel",{"_index":543,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["console.log(\"code",{"_index":3124,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(\"param",{"_index":3123,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(\"registrierung",{"_index":3071,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log('file",{"_index":3303,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["console.log('user",{"_index":1968,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(error",{"_index":1342,"title":{},"body":{"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["console.log(error.message",{"_index":1615,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["console.log(errorcode",{"_index":1975,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["console.log(this.channel",{"_index":545,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["console.log(this.emoji+\"selected",{"_index":3006,"title":{},"body":{"components/ReactionComponent.html":{}}}],["console.log(this.oobcode",{"_index":3125,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(this.selectedoption",{"_index":535,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["console.log(this.user.id",{"_index":1348,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["const",{"_index":78,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"directives/IfChangedDirective.html":{},"components/LoginComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"classes/Reaction.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["constructor(authservice",{"_index":1581,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/StartscreenComponent.html":{}}}],["constructor(channelservice",{"_index":1398,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{}}}],["constructor(chatservice",{"_index":1077,"title":{},"body":{"components/ChatComponent.html":{}}}],["constructor(data",{"_index":1023,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Thread.html":{}}}],["constructor(dialog",{"_index":3173,"title":{},"body":{"components/SidenavComponent.html":{}}}],["constructor(fb",{"_index":256,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["constructor(firebasechannel",{"_index":507,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["constructor(firestore",{"_index":2191,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["constructor(formatservice",{"_index":1367,"title":{},"body":{"components/DateLineComponent.html":{}}}],["constructor(formbuilder",{"_index":3099,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(obj",{"_index":683,"title":{},"body":{"classes/Answer.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/User.html":{}}}],["constructor(private",{"_index":302,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/LoginComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["constructor(public",{"_index":534,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["constructor(renderer",{"_index":597,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["constructor(route",{"_index":31,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["constructor(storage",{"_index":3270,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["constructor(storageservice",{"_index":880,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["constructor(templateref",{"_index":1796,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["constructor(threadservice",{"_index":3412,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["constructor(userprofileservice",{"_index":3590,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["constructor(userservice",{"_index":1312,"title":{},"body":{"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/RegisterComponent.html":{}}}],["constructor(windowsizeservice",{"_index":2280,"title":{},"body":{"injectables/NotificationService.html":{}}}],["contact",{"_index":1587,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{}}}],["contactform",{"_index":1573,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["container",{"_index":476,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["container.appendchild(element",{"_index":2307,"title":{},"body":{"injectables/NotificationService.html":{}}}],["container.classlist.add('notification",{"_index":2300,"title":{},"body":{"injectables/NotificationService.html":{}}}],["container.remove",{"_index":2308,"title":{},"body":{"injectables/NotificationService.html":{}}}],["container=document.createelement(\"div",{"_index":2298,"title":{},"body":{"injectables/NotificationService.html":{}}}],["containerofinput",{"_index":1227,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["containing",{"_index":2208,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["contains",{"_index":1508,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["content",{"_index":112,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["content.ng",{"_index":1210,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["content:first",{"_index":3373,"title":{},"body":{"components/ThreadComponent.html":{}}}],["content:last",{"_index":3371,"title":{},"body":{"components/ThreadComponent.html":{}}}],["context",{"_index":1818,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["control",{"_index":3033,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["control.value",{"_index":3059,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["controle",{"_index":3606,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["cookies",{"_index":2484,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["corresponding",{"_index":2198,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["count",{"_index":2993,"title":{},"body":{"components/ReactionComponent.html":{}}}],["cover",{"_index":1205,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MessageEditComponent.html":{}}}],["coverage",{"_index":3717,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":281,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["create'},{'name",{"_index":170,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["create.component",{"_index":799,"title":{},"body":{"modules/AppModule.html":{}}}],["create.component.ts",{"_index":3741,"title":{},"body":{"coverage.html":{}}}],["create/message",{"_index":798,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["createchannel",{"_index":505,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["createchannelbutton",{"_index":448,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["createchat",{"_index":3586,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["created",{"_index":2197,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["createmessage",{"_index":2185,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["createmessage(path",{"_index":2195,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["creates",{"_index":518,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["creator",{"_index":1472,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["creatorchannel",{"_index":246,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["creatorofchannel",{"_index":1020,"title":{},"body":{"classes/Channel.html":{}}}],["ctrl/ngx",{"_index":816,"title":{},"body":{"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["current",{"_index":513,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["currentauthmail",{"_index":3579,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["currentday",{"_index":1151,"title":{},"body":{"components/ChatComponent.html":{}}}],["currentdaytimestring",{"_index":1365,"title":{},"body":{"components/DateLineComponent.html":{}}}],["currentlocation",{"_index":255,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["currentlocation(value",{"_index":304,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["currently",{"_index":3440,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["currentuser",{"_index":3166,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["currentuserinput",{"_index":3580,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["currentuserposition",{"_index":3664,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["cursor",{"_index":397,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["custom",{"_index":3093,"title":{},"body":{"components/RegisterComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["cutstrlen",{"_index":1650,"title":{},"body":{"injectables/FormatService.html":{}}}],["cutstrlen(string",{"_index":1654,"title":{},"body":{"injectables/FormatService.html":{}}}],["d",{"_index":3212,"title":{},"body":{"components/SidenavComponent.html":{}}}],["d&uuml;rfen",{"_index":2751,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["d_none",{"_index":1870,"title":{},"body":{"components/IntroComponent.html":{}}}],["da",{"_index":327,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AppComponent.html":{},"components/ChatComponent.html":{}}}],["dabei",{"_index":2626,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dabubble",{"_index":1882,"title":{},"body":{"components/IntroComponent.html":{},"components/RegisterComponent.html":{},"components/StartscreenComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["dabubbleguest",{"_index":1957,"title":{},"body":{"components/LoginComponent.html":{}}}],["dadurch",{"_index":2366,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dann",{"_index":2629,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dar&uuml;ber",{"_index":2329,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daran",{"_index":2774,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darauf",{"_index":2531,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daraus",{"_index":2810,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darstellung",{"_index":2475,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["darüber",{"_index":2884,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["das",{"_index":2388,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dass",{"_index":2368,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["data",{"_index":1025,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Thread.html":{},"injectables/UserFirebaseService.html":{}}}],["data.channeldescription",{"_index":1040,"title":{},"body":{"classes/Channel.html":{}}}],["data.channelname",{"_index":1038,"title":{},"body":{"classes/Channel.html":{}}}],["data.creatorofchannel",{"_index":1042,"title":{},"body":{"classes/Channel.html":{}}}],["data.id",{"_index":1055,"title":{},"body":{"classes/Chat.html":{}}}],["data.messages",{"_index":1056,"title":{},"body":{"classes/Chat.html":{}}}],["data.refchannelid",{"_index":3321,"title":{},"body":{"classes/Thread.html":{}}}],["data.timestamp",{"_index":1044,"title":{},"body":{"classes/Channel.html":{}}}],["data.users",{"_index":1057,"title":{},"body":{"classes/Chat.html":{}}}],["database",{"_index":3516,"title":{},"body":{"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["databaseurl",{"_index":3869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":144,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["date().gettime",{"_index":1686,"title":{},"body":{"injectables/FormatService.html":{},"injectables/StorageFirebaseService.html":{}}}],["date(message.timestamp",{"_index":1154,"title":{},"body":{"components/ChatComponent.html":{}}}],["date(now",{"_index":1695,"title":{},"body":{"injectables/FormatService.html":{}}}],["date(timestamp",{"_index":1675,"title":{},"body":{"injectables/FormatService.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1668,"title":{},"body":{"injectables/FormatService.html":{}}}],["date.getfullyear",{"_index":1673,"title":{},"body":{"injectables/FormatService.html":{}}}],["date.getmonth",{"_index":1670,"title":{},"body":{"injectables/FormatService.html":{}}}],["datei",{"_index":956,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["dateien",{"_index":1178,"title":{},"body":{"components/ChatComponent.html":{}}}],["datelinecomponent",{"_index":143,"title":{"components/DateLineComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["daten",{"_index":344,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["daten&shy;&uuml;bertrag&shy;barkeit",{"_index":2717,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten&uuml;bertragung",{"_index":2533,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenerfassung",{"_index":2350,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenerhebung",{"_index":2660,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenkategorien",{"_index":2591,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz",{"_index":2321,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["datenschutz&shy;erkl&auml;rung",{"_index":2320,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzerkl&auml;rung",{"_index":2349,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzerklärung",{"_index":2888,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["datenschutzrechtlich",{"_index":2502,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzstandards",{"_index":2871,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutzvorschriften",{"_index":2522,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenschutz­erklärung",{"_index":2882,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenspeicherung",{"_index":2825,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitung",{"_index":2354,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungen",{"_index":2872,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungsvorg&auml;nge",{"_index":2650,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenverarbeitungsvorgänge",{"_index":2932,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenweitergabe",{"_index":2638,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["daten­übertrag­barkeit",{"_index":2948,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["datenübertragung",{"_index":2909,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dauer",{"_index":2738,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["day",{"_index":1667,"title":{},"body":{"injectables/FormatService.html":{}}}],["day.month.year",{"_index":1660,"title":{},"body":{"injectables/FormatService.html":{}}}],["day}.${month}.${year",{"_index":1674,"title":{},"body":{"injectables/FormatService.html":{}}}],["dd.mm.yyyy",{"_index":1659,"title":{},"body":{"injectables/FormatService.html":{}}}],["debugger",{"_index":1880,"title":{},"body":{"components/IntroComponent.html":{}}}],["declarations",{"_index":721,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declared",{"_index":2287,"title":{},"body":{"injectables/NotificationService.html":{}}}],["declares",{"_index":1401,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["declase",{"_index":1496,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["decoration",{"_index":1465,"title":{},"body":{"components/EditChannelComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{}}}],["decorators",{"_index":528,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{}}}],["deep",{"_index":419,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["default",{"_index":67,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/IfChangedService.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":638,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["defines",{"_index":1495,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["dein",{"_index":3081,"title":{},"body":{"components/RegisterComponent.html":{}}}],["deine",{"_index":1173,"title":{},"body":{"components/ChatComponent.html":{}}}],["deinem",{"_index":353,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/RegisterComponent.html":{}}}],["deinen",{"_index":948,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["deiner",{"_index":3079,"title":{},"body":{"components/RegisterComponent.html":{}}}],["delay",{"_index":903,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["deleted",{"_index":2205,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{},"components/ToolbarComponent.html":{}}}],["deletedoc",{"_index":2238,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletedoc(doc(this.firestore",{"_index":2255,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletedoc(docinstance",{"_index":2248,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletefile",{"_index":2102,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["deleteimage",{"_index":3265,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["deleteimage(imagepath",{"_index":3273,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["deletemessage",{"_index":2186,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletemessage(path",{"_index":2200,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletemessageoutput",{"_index":3410,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["deleteobject",{"_index":3293,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["deleteobject(fileref",{"_index":3312,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["deletereaction",{"_index":2187,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletereaction(reaction",{"_index":2206,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["deletes",{"_index":2202,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{}}}],["deleting",{"_index":2158,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["deletion",{"_index":2209,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{}}}],["delta",{"_index":1687,"title":{},"body":{"injectables/FormatService.html":{}}}],["dem",{"_index":1540,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["den",{"_index":537,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["denen",{"_index":2338,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["denn",{"_index":2680,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dependencies",{"_index":720,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3527,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["der",{"_index":950,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["derartiger",{"_index":2694,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["deren",{"_index":2730,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["des",{"_index":1853,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["description",{"_index":63,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/IntroComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["desktop",{"_index":1406,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["dessen",{"_index":2358,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["destroy",{"_index":1097,"title":{},"body":{"components/ChatComponent.html":{}}}],["destroyed",{"_index":2217,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["details",{"_index":2459,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["determines",{"_index":3026,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["determining",{"_index":1588,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["dev",{"_index":3813,"title":{},"body":{"index.html":{}}}],["development",{"_index":3809,"title":{},"body":{"index.html":{}}}],["device",{"_index":672,"title":{},"body":{"components/AddreactionComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["dialog",{"_index":239,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/SidenavComponent.html":{}}}],["dialog'},{'name",{"_index":126,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["dialog.component",{"_index":301,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"modules/AppModule.html":{},"components/SidenavComponent.html":{}}}],["dialog.component.html",{"_index":241,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["dialog.component.scss",{"_index":240,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts",{"_index":238,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:14",{"_index":526,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":525,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":510,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":290,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":289,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":291,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":288,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":295,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":261,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":511,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":294,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":292,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":293,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":263,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":522,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":267,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:47",{"_index":517,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:55",{"_index":276,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:65",{"_index":516,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":284,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog.component.ts:76",{"_index":264,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialog/add",{"_index":237,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"modules/AppModule.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["dialog__surface",{"_index":421,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["dialogaddusercomponent",{"_index":325,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialogeditadresscomponent",{"_index":338,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dialogref",{"_index":247,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/SidenavComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":3197,"title":{},"body":{"components/SidenavComponent.html":{}}}],["dialogref.componentinstance.channel",{"_index":331,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dich",{"_index":1170,"title":{},"body":{"components/ChatComponent.html":{}}}],["die",{"_index":318,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["dienen",{"_index":352,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dienstes",{"_index":2499,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dient",{"_index":2687,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dies",{"_index":2631,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["diese",{"_index":1161,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["diesem",{"_index":323,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["dieser",{"_index":334,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["different",{"_index":1807,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["digits",{"_index":1680,"title":{},"body":{"injectables/FormatService.html":{}}}],["dinge",{"_index":1184,"title":{},"body":{"components/ChatComponent.html":{}}}],["dir",{"_index":1166,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{}}}],["direction",{"_index":380,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["directive",{"_index":119,"title":{"directives/IfChangedDirective.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":196,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["directives/if",{"_index":803,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3820,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1329,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["directory",{"_index":3824,"title":{},"body":{"index.html":{}}}],["direkte",{"_index":2725,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["direktnachrichten",{"_index":3199,"title":{},"body":{"components/SidenavComponent.html":{}}}],["direktwerbung",{"_index":2663,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["disabled",{"_index":465,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["disconnect",{"_index":3689,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["display",{"_index":109,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["displayed",{"_index":2290,"title":{},"body":{"injectables/NotificationService.html":{},"components/ThreadComponent.html":{},"injectables/UserProfileService.html":{}}}],["displaying",{"_index":1937,"title":{},"body":{"components/LoginComponent.html":{}}}],["displays",{"_index":1862,"title":{},"body":{"components/IntroComponent.html":{}}}],["dist",{"_index":3823,"title":{},"body":{"index.html":{}}}],["div",{"_index":3008,"title":{},"body":{"components/ReactionComponent.html":{}}}],["div#mat",{"_index":1212,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["divider",{"_index":1476,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["doc",{"_index":2232,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["doc(collection(this.firestore",{"_index":3395,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["doc(this.firestore",{"_index":2246,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["doc.data",{"_index":2263,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["doc.id",{"_index":2266,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["docinstance",{"_index":2245,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["docref",{"_index":3553,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["docsnap",{"_index":3554,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["docsnap.id",{"_index":3557,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["document",{"_index":2199,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["document.body.append(container",{"_index":2299,"title":{},"body":{"injectables/NotificationService.html":{}}}],["documentation",{"_index":3718,"title":{},"body":{"coverage.html":{}}}],["doesnt",{"_index":1131,"title":{},"body":{"components/ChatComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["done",{"_index":1133,"title":{},"body":{"components/ChatComponent.html":{}}}],["dort",{"_index":342,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["dos",{"_index":1174,"title":{},"body":{"components/ChatComponent.html":{}}}],["download",{"_index":3279,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["dpf",{"_index":2867,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dritte",{"_index":2539,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dritten",{"_index":2719,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["drittstaaten",{"_index":2596,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dsgvo",{"_index":2469,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["dsp",{"_index":1279,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["du",{"_index":1180,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["duration",{"_index":2283,"title":{},"body":{"injectables/NotificationService.html":{}}}],["duration*1000",{"_index":2309,"title":{},"body":{"injectables/NotificationService.html":{}}}],["duration=2",{"_index":2294,"title":{},"body":{"injectables/NotificationService.html":{}}}],["duration}s",{"_index":2305,"title":{},"body":{"injectables/NotificationService.html":{}}}],["durch",{"_index":2356,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["durchf&uuml;hrung",{"_index":2600,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["durchführung",{"_index":2923,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["during",{"_index":3310,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["dynamic",{"_index":3795,"title":{},"body":{"dependencies.html":{}}}],["dürfen",{"_index":2957,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["e",{"_index":1618,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["e.g",{"_index":3350,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["e2e",{"_index":3830,"title":{},"body":{"index.html":{}}}],["ease",{"_index":474,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["eceefe",{"_index":1192,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["edeefe",{"_index":1278,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["edit",{"_index":147,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["edit'},{'name",{"_index":172,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["edit.component",{"_index":823,"title":{},"body":{"modules/AppModule.html":{}}}],["edit.component.html",{"_index":2094,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.scss",{"_index":2093,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts",{"_index":2092,"title":{},"body":{"components/MessageEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:16",{"_index":2135,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:17",{"_index":2136,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:18",{"_index":2130,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:19",{"_index":2129,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:20",{"_index":2133,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:21",{"_index":2134,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:22",{"_index":2132,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:24",{"_index":2113,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:26",{"_index":2112,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:28",{"_index":2111,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:31",{"_index":2131,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:44",{"_index":2121,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:55",{"_index":2128,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:63",{"_index":2114,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:71",{"_index":2127,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:80",{"_index":2115,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:84",{"_index":2120,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:89",{"_index":2118,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit.component.ts:99",{"_index":2116,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["edit/message",{"_index":822,"title":{},"body":{"modules/AppModule.html":{},"components/MessageEditComponent.html":{},"coverage.html":{}}}],["edit_square",{"_index":2046,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["editchannel",{"_index":865,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EditChannelUsersComponent.html":{}}}],["editchannelbackground",{"_index":1551,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["editchannelcomponent",{"_index":146,"title":{"components/EditChannelComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editchanneldescription",{"_index":1386,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["editchannelheader",{"_index":1547,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["editchannelname",{"_index":1387,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["editchanneluserscomponent",{"_index":148,"title":{"components/EditChannelUsersComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edited",{"_index":3426,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editmailinfo",{"_index":1789,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["editmessageoutput",{"_index":3411,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["editmode",{"_index":1467,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["edits",{"_index":3597,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["editsquare",{"_index":3203,"title":{},"body":{"components/SidenavComponent.html":{}}}],["edituser",{"_index":3587,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["edituserform",{"_index":3581,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["editusermode",{"_index":3582,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["effektiven",{"_index":2820,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eigenes",{"_index":953,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["ein",{"_index":320,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eine",{"_index":373,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["einem",{"_index":2720,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["einen",{"_index":2322,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["einer",{"_index":2472,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eines",{"_index":2643,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einfachen",{"_index":2327,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeben",{"_index":1622,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["eingelegt",{"_index":2743,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeschr&auml;nkt",{"_index":2750,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingeschränkt",{"_index":2956,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eingewilligt",{"_index":2587,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einhaltung",{"_index":2508,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einheitlichen",{"_index":2831,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einlegen",{"_index":2676,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einsatz",{"_index":2640,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschl&auml;gigen",{"_index":2615,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschlägigen",{"_index":2926,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschr&auml;nkung",{"_index":2432,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einschränkung",{"_index":2895,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einwilligung",{"_index":2382,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzelfall",{"_index":2614,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzuhalten",{"_index":2875,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["einzulegen",{"_index":2669,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["el",{"_index":599,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["element",{"_index":118,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["element.classlist.add('notification",{"_index":2302,"title":{},"body":{"injectables/NotificationService.html":{}}}],["element.classlist.add(style",{"_index":2303,"title":{},"body":{"injectables/NotificationService.html":{}}}],["element.innerhtml",{"_index":2306,"title":{},"body":{"injectables/NotificationService.html":{}}}],["element.style.animation",{"_index":2304,"title":{},"body":{"injectables/NotificationService.html":{}}}],["element=document.createelement(\"div",{"_index":2301,"title":{},"body":{"injectables/NotificationService.html":{}}}],["elementref",{"_index":527,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/UserProfilComponent.html":{}}}],["email",{"_index":59,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["emailinput",{"_index":1596,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["emailinputvalue",{"_index":3063,"title":{},"body":{"components/RegisterComponent.html":{}}}],["emailsubmitted",{"_index":1574,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["embedded",{"_index":1811,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["emits",{"_index":616,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ToolbarComponent.html":{}}}],["emitting",{"_index":1945,"title":{},"body":{"components/LoginComponent.html":{}}}],["emoji",{"_index":611,"title":{},"body":{"components/AddreactionComponent.html":{},"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["emojiinput",{"_index":593,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["emojimartelement",{"_index":589,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["emojimartelement.contains(event.target",{"_index":648,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["emojiselected",{"_index":590,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ReactionComponent.html":{}}}],["emojiselected(event",{"_index":608,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["emojiselectedoutput",{"_index":596,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ReactionComponent.html":{},"components/ToolbarComponent.html":{}}}],["empf&auml;nger",{"_index":2419,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["empfehlen",{"_index":1985,"title":{},"body":{"components/LoginComponent.html":{}}}],["empfänger",{"_index":2618,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["empty",{"_index":151,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["emptychat",{"_index":1159,"title":{},"body":{"components/ChatComponent.html":{}}}],["emptychatselectedmobile",{"_index":1724,"title":{},"body":{"components/HeaderComponent.html":{}}}],["emptywindow",{"_index":1562,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["emptywindowcomponent",{"_index":150,"title":{"components/EmptyWindowComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["end",{"_index":578,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"index.html":{}}}],["endger&auml;t",{"_index":2487,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["endgerät",{"_index":2904,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ensure",{"_index":1678,"title":{},"body":{"injectables/FormatService.html":{},"components/ToolbarComponent.html":{}}}],["enter",{"_index":3599,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["entf&auml;llt",{"_index":2573,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entfällt",{"_index":2914,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["enthalten",{"_index":329,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["entnehmen",{"_index":2345,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entry",{"_index":1792,"title":{},"body":{"components/HeaderComponent.html":{}}}],["entscheidet",{"_index":2565,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entsprechend",{"_index":2520,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["entsprechende",{"_index":2477,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["environment",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":757,"title":{},"body":{"modules/AppModule.html":{}}}],["erf&uuml;llung",{"_index":2604,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfassen",{"_index":2365,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfasst",{"_index":2387,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfassung",{"_index":2396,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgen",{"_index":2612,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgreich",{"_index":97,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/RegisterComponent.html":{}}}],["erfolgt",{"_index":2355,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfolgten",{"_index":2654,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erforderlich",{"_index":2603,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erfüllung",{"_index":2925,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ergeben",{"_index":2667,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhalten",{"_index":2422,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erheben",{"_index":2527,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erhoben",{"_index":2367,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erkennen",{"_index":2773,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erl&auml;utert",{"_index":2526,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erlangt",{"_index":2846,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erlaubt",{"_index":2639,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erläutert",{"_index":2908,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ernst",{"_index":2517,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["error",{"_index":940,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["error('invalid",{"_index":3298,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["error(`failed",{"_index":3646,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["error.code",{"_index":1974,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["error.message",{"_index":3647,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["errorcode",{"_index":1973,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errorinfo",{"_index":1575,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["errorvalidation",{"_index":492,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["erstellen",{"_index":350,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/RegisterComponent.html":{},"components/StartscreenComponent.html":{}}}],["erstellt",{"_index":945,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{}}}],["erteilt",{"_index":2427,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["erteilte",{"_index":2652,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["es",{"_index":2373,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["etwa",{"_index":2802,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["eu",{"_index":2977,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europ&auml;ischen",{"_index":2758,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europ&auml;ischer",{"_index":2870,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europäischen",{"_index":2960,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["europäischer",{"_index":2980,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["evaluates",{"_index":1504,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["event",{"_index":618,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["event.emoji.native",{"_index":653,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["event.stoppropagation",{"_index":1767,"title":{},"body":{"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["eventemitter",{"_index":606,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["events",{"_index":1288,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["example",{"_index":1141,"title":{},"body":{"components/ChatComponent.html":{},"directives/IfChangedDirective.html":{}}}],["execute",{"_index":3828,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1809,"title":{},"body":{"directives/IfChangedDirective.html":{},"injectables/MessageFirebaseService.html":{}}}],["exists",{"_index":1507,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["existst",{"_index":3612,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["expand_more",{"_index":1770,"title":{},"body":{"components/HeaderComponent.html":{}}}],["expired",{"_index":3250,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["export",{"_index":74,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["exports",{"_index":724,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":1019,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["externe",{"_index":2630,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["externen",{"_index":2623,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f",{"_index":2468,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f&auml;llen",{"_index":2662,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["f&uuml;r",{"_index":2353,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["face",{"_index":1255,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["failures",{"_index":1936,"title":{},"body":{"components/LoginComponent.html":{}}}],["fall",{"_index":324,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["falle",{"_index":2592,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["false",{"_index":531,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1256,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["fb",{"_index":262,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["fehlerfreie",{"_index":2402,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ferner",{"_index":2608,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["feststeht",{"_index":2748,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["fetching",{"_index":3706,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["ffentlichen",{"_index":2959,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ffffff",{"_index":3454,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["ffnen",{"_index":2050,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["field",{"_index":277,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"modules/AppModule.html":{},"components/EditChannelComponent.html":{}}}],["field.formfieldchannelname.ng",{"_index":417,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["field.formfieldchannelname.removebackground.ng",{"_index":402,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["field.mat",{"_index":400,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["field.ng",{"_index":428,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{}}}],["file.name}_${timestamp",{"_index":3306,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["file.type",{"_index":3304,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["file.type.startswith('image",{"_index":3296,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["fileimg",{"_index":2097,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["filename",{"_index":908,"title":{},"body":{"components/AvatarChooseComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["fileref",{"_index":3311,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["files",{"_index":1276,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"index.html":{}}}],["filesrc",{"_index":2064,"title":{},"body":{"classes/Message.html":{},"components/MessageEditComponent.html":{}}}],["fill",{"_index":663,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["fill.mat",{"_index":410,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["filled.mdc",{"_index":430,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["filled:not(.mdc",{"_index":481,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["filter",{"_index":3204,"title":{},"body":{"components/SidenavComponent.html":{}}}],["finally",{"_index":1812,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["find",{"_index":3500,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["findchannels",{"_index":3572,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["findchannels.push(new",{"_index":3570,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["finden",{"_index":2859,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["findet",{"_index":1163,"title":{},"body":{"components/ChatComponent.html":{}}}],["findusers",{"_index":3567,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["findusers.push(new",{"_index":3566,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["fingerprinting",{"_index":2489,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["finishedloading",{"_index":3468,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase",{"_index":66,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/HeaderComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.service",{"_index":73,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["firebase.service.ts",{"_index":2177,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{},"coverage.html":{}}}],["firebase.service.ts:10",{"_index":3684,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["firebase.service.ts:100",{"_index":2212,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:104",{"_index":3288,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:114",{"_index":3278,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:121",{"_index":3518,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:126",{"_index":2196,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:13",{"_index":3386,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["firebase.service.ts:130",{"_index":3530,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:138",{"_index":3528,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:14",{"_index":3387,"title":{},"body":{"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:146",{"_index":2201,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:15",{"_index":2227,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:154",{"_index":2216,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:158",{"_index":3506,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:16",{"_index":2228,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["firebase.service.ts:17",{"_index":2224,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:175",{"_index":3514,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:18",{"_index":3290,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:186",{"_index":3493,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:19",{"_index":2229,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["firebase.service.ts:20",{"_index":2225,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:206",{"_index":3509,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:22",{"_index":2226,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:225",{"_index":3510,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:23",{"_index":2194,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["firebase.service.ts:24",{"_index":3486,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:27",{"_index":2223,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:29",{"_index":3381,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["firebase.service.ts:33",{"_index":3379,"title":{},"body":{"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:35",{"_index":3686,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["firebase.service.ts:40",{"_index":3507,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:42",{"_index":2220,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:46",{"_index":3286,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:48",{"_index":3385,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["firebase.service.ts:56",{"_index":3520,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:58",{"_index":3382,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["firebase.service.ts:65",{"_index":2207,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:66",{"_index":3526,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:7",{"_index":3272,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:72",{"_index":3283,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:76",{"_index":2215,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["firebase.service.ts:79",{"_index":3488,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:84",{"_index":3274,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["firebase.service.ts:88",{"_index":3490,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase.service.ts:99",{"_index":3502,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["firebase/firestore",{"_index":2239,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["firebasechannel",{"_index":248,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["firebaseuserservice",{"_index":1917,"title":{},"body":{"components/LoginComponent.html":{}}}],["firestore",{"_index":2192,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["first",{"_index":3835,"title":{},"body":{"index.html":{}}}],["firstchange",{"_index":1834,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["fit",{"_index":580,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["fixed",{"_index":581,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["flag",{"_index":3342,"title":{},"body":{"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["flags",{"_index":3104,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["flex",{"_index":110,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["flex.ng",{"_index":433,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["float",{"_index":1549,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ToolbarComponent.html":{}}}],["focus",{"_index":423,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["folder",{"_index":3285,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["folder}/${filename",{"_index":3307,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["folgendem",{"_index":2446,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["folgenden",{"_index":2326,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["following",{"_index":3421,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["font",{"_index":452,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["fonts",{"_index":2830,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["forgot",{"_index":154,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["forgotpasswordcomponent",{"_index":153,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forgotpasswordlinkclick",{"_index":1930,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":269,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["format",{"_index":1661,"title":{},"body":{"injectables/FormatService.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["formatdatetodmy",{"_index":1651,"title":{},"body":{"injectables/FormatService.html":{}}}],["formatdatetodmy(date",{"_index":1656,"title":{},"body":{"injectables/FormatService.html":{}}}],["formated",{"_index":1084,"title":{},"body":{"components/ChatComponent.html":{}}}],["formats",{"_index":1658,"title":{},"body":{"injectables/FormatService.html":{}}}],["formatservice",{"_index":1064,"title":{"injectables/FormatService.html":{}},"body":{"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelUsersComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["formatservice.cutstrlen(channelservice.selectedchannel.channelname",{"_index":3366,"title":{},"body":{"components/ThreadComponent.html":{}}}],["formatservice.cutstrlen(chatpartner.fullname",{"_index":1157,"title":{},"body":{"components/ChatComponent.html":{}}}],["formatted",{"_index":1662,"title":{},"body":{"injectables/FormatService.html":{}}}],["formattimedelta",{"_index":1652,"title":{},"body":{"injectables/FormatService.html":{}}}],["formattimedelta(timestamp",{"_index":1663,"title":{},"body":{"injectables/FormatService.html":{}}}],["formattimestamptohhmm",{"_index":1653,"title":{},"body":{"injectables/FormatService.html":{}}}],["formattimestamptohhmm(timestamp",{"_index":1665,"title":{},"body":{"injectables/FormatService.html":{}}}],["formbuilder",{"_index":257,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":1597,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["formfieldchanneldescription",{"_index":437,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["formfieldchannelname",{"_index":436,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["formgroup",{"_index":287,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["formsmodule",{"_index":783,"title":{},"body":{"modules/AppModule.html":{}}}],["fortfall",{"_index":2585,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["fragen",{"_index":2441,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["framework",{"_index":2978,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["framework&ldquo",{"_index":2866,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["freiheiten",{"_index":2685,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["friedersdorf",{"_index":2457,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["fullname",{"_index":679,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{}}}],["fullname:string",{"_index":3464,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":1503,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"directives/IfChangedDirective.html":{},"components/MessageEditComponent.html":{}}}],["further",{"_index":3614,"title":{},"body":{"components/UserProfilComponent.html":{},"index.html":{}}}],["future",{"_index":1813,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["fällen",{"_index":2935,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["fügen",{"_index":316,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["für",{"_index":1169,"title":{},"body":{"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["g&auml;ngigen",{"_index":2721,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["g&uuml;ltigen",{"_index":2644,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gap",{"_index":966,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["gap:12px",{"_index":1201,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{}}}],["gap:18px",{"_index":1545,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["gap:6px",{"_index":3227,"title":{},"body":{"components/SidenavComponent.html":{}}}],["gap:8px",{"_index":3663,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["geben",{"_index":372,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["gegen",{"_index":2659,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gel&ouml;scht",{"_index":2577,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltend",{"_index":2575,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltenden",{"_index":2728,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geltendmachung",{"_index":2688,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gelöscht",{"_index":2916,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsam",{"_index":2557,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsame",{"_index":2647,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gemeinsamen",{"_index":2646,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["genannt",{"_index":2570,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["genannte",{"_index":2833,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["genannten",{"_index":2498,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["general",{"_index":3322,"title":{},"body":{"classes/Thread.html":{}}}],["generate",{"_index":2242,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"index.html":{}}}],["generated",{"_index":2221,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"index.html":{}}}],["generateidservice",{"_index":1700,"title":{"injectables/GenerateIdService.html":{}},"body":{"injectables/GenerateIdService.html":{},"injectables/MessageFirebaseService.html":{},"coverage.html":{}}}],["generaterandomid",{"_index":1703,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["generaterandomid(length",{"_index":1704,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["genutzt",{"_index":2857,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gerichteten",{"_index":2821,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gerichtlicher",{"_index":2715,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gerne",{"_index":1183,"title":{},"body":{"components/ChatComponent.html":{}}}],["gesch&auml;ftst&auml;tigkeit",{"_index":2620,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschah/geschieht",{"_index":2741,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschieht",{"_index":2529,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschlossen",{"_index":2500,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geschäftstätigkeit",{"_index":2928,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesendet",{"_index":1612,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["gesetzlich",{"_index":2632,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzliche",{"_index":2827,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gesetzlichen",{"_index":2521,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeichert",{"_index":2814,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gespeicherten",{"_index":2421,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gest&uuml;tztes",{"_index":2672,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gestern",{"_index":1697,"title":{},"body":{"injectables/FormatService.html":{}}}],["gestütztes",{"_index":2937,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["get(userstatusdatabaseref).then((snapshot",{"_index":3700,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["getactiveselectionobject",{"_index":209,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["getactiveselectiontype",{"_index":210,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["getanswerspath",{"_index":3334,"title":{},"body":{"components/ThreadComponent.html":{}}}],["getauth",{"_index":730,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getauth()).html\">provideauth",{"_index":743,"title":{},"body":{"modules/AppModule.html":{}}}],["getchannelforsearch",{"_index":3475,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getchannelforsearch(searchstring",{"_index":3492,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getcurrentuserchannel",{"_index":1391,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["getdatabase",{"_index":732,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getdatabase()).html\">providedatabase",{"_index":744,"title":{},"body":{"modules/AppModule.html":{}}}],["getdoc",{"_index":3533,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getdoc(docref",{"_index":3555,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getdocs",{"_index":2233,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["getdownloadurl",{"_index":3266,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["getdownloadurl(storageref",{"_index":3276,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["getfirestore",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["getfirestore()).html\">providefirestore",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["getformatedstring",{"_index":1491,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["getformatedstring(channelcopy.channelname",{"_index":1544,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["getformatedstring(stringtoformat",{"_index":1514,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["getformatedstring(stringtoformat:string",{"_index":1542,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["getinput",{"_index":251,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["getisopened",{"_index":632,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["getlasttime",{"_index":1795,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["getlasttime(value",{"_index":1831,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["getlasttime]=&quot;somevalue&quot;&gt",{"_index":1824,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["getlocalefirstdayofweek",{"_index":3535,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getmessagetime",{"_index":1073,"title":{},"body":{"components/ChatComponent.html":{}}}],["getmessagetime(message",{"_index":1081,"title":{},"body":{"components/ChatComponent.html":{}}}],["getpreviousvalue",{"_index":1835,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["gets",{"_index":45,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["getshortenedstring",{"_index":1717,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["getshortenedstring(channel.channelname",{"_index":3198,"title":{},"body":{"components/SidenavComponent.html":{}}}],["getshortenedstring(stringtoshort",{"_index":1733,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["getshortenedstring(user.fullname",{"_index":1769,"title":{},"body":{"components/HeaderComponent.html":{}}}],["getstatus",{"_index":3588,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["getstorage",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"injectables/StorageFirebaseService.html":{},"overview.html":{}}}],["getstorage()).html\">providestorage",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["getting",{"_index":3705,"title":{"index.html":{}},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["getuserbyuid",{"_index":1330,"title":{},"body":{"components/ChatViewComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["getuserbyuid(uid",{"_index":3501,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getuserforsearch",{"_index":3476,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getuserforsearch(searchstring",{"_index":3505,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["getuserstatus",{"_index":3682,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["getuserstatus(userid",{"_index":3685,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["getuserstatus(userid:string",{"_index":3699,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["gew&auml;hrleisten",{"_index":2404,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gew&auml;hrleistet",{"_index":2504,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gew&ouml;hnlichen",{"_index":2705,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewährleisten",{"_index":2890,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewährleistet",{"_index":2905,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gewöhnlichen",{"_index":2945,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["geändert",{"_index":100,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["geöffnet",{"_index":321,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["ggf",{"_index":2731,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gibt",{"_index":536,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["gilt",{"_index":2670,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["give",{"_index":278,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["given",{"_index":1085,"title":{},"body":{"components/ChatComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ShowChannelUsersComponent.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["global",{"_index":1275,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["go",{"_index":3839,"title":{},"body":{"index.html":{}}}],["google",{"_index":1939,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["gr&uuml;nde",{"_index":2580,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gr&uuml;nden",{"_index":2665,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gradient(1.46deg",{"_index":1884,"title":{},"body":{"components/IntroComponent.html":{}}}],["graph",{"_index":3843,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":466,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["green",{"_index":1360,"title":{},"body":{"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["greifen",{"_index":336,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["griffbereit",{"_index":1179,"title":{},"body":{"components/ChatComponent.html":{}}}],["gro",{"_index":3139,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["grow",{"_index":1187,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ThreadComponent.html":{}}}],["großbuchstaben",{"_index":3088,"title":{},"body":{"components/RegisterComponent.html":{}}}],["grundlage",{"_index":2463,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gründe",{"_index":2918,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gründen",{"_index":2936,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["guard.guard",{"_index":860,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.guard.ts",{"_index":3771,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["guest",{"_index":1934,"title":{},"body":{"components/LoginComponent.html":{}}}],["guest@guest.at",{"_index":1955,"title":{},"body":{"components/LoginComponent.html":{}}}],["guestlogin",{"_index":1926,"title":{},"body":{"components/LoginComponent.html":{}}}],["guestloginname",{"_index":1918,"title":{},"body":{"components/LoginComponent.html":{}}}],["guestloginpassword",{"_index":1919,"title":{},"body":{"components/LoginComponent.html":{}}}],["gängigen",{"_index":2949,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gäste",{"_index":1993,"title":{},"body":{"components/LoginComponent.html":{}}}],["gültige",{"_index":1621,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["gültigen",{"_index":2931,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["gültiges",{"_index":1990,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["h1",{"_index":967,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["h2",{"_index":1193,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ThreadComponent.html":{}}}],["h3",{"_index":1466,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{}}}],["h4",{"_index":1546,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["haben",{"_index":2411,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hallo",{"_index":1112,"title":{},"body":{"components/ChatComponent.html":{}}}],["handeln",{"_index":2376,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handelsrechtliche",{"_index":2582,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handelt",{"_index":2501,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["handle",{"_index":3703,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["handlechanneluserupdate",{"_index":506,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelUsersComponent.html":{}}}],["handlechanneluserupdate(newchannel",{"_index":521,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelUsersComponent.html":{}}}],["handleemojibarvisibility",{"_index":3335,"title":{},"body":{"components/ThreadComponent.html":{}}}],["handleemojibarvisibility(isvisible",{"_index":3345,"title":{},"body":{"components/ThreadComponent.html":{}}}],["handleemojiselection",{"_index":2103,"title":{},"body":{"components/MessageEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["handleemojiselection(selectedemoji",{"_index":2117,"title":{},"body":{"components/MessageEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["handlemessagedelete",{"_index":3403,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handlemessageedit",{"_index":3404,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["handler",{"_index":19,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["handler'},{'name",{"_index":122,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["handler.component",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["handler.component.html",{"_index":23,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["handler.component.scss",{"_index":21,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["handler.component.ts",{"_index":12,"title":{},"body":{"components/ActionHandlerComponent.html":{},"coverage.html":{}}}],["handler.component.ts:12",{"_index":37,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["handler.component.ts:22",{"_index":44,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["handler.component.ts:41",{"_index":55,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["handler/action",{"_index":11,"title":{},"body":{"components/ActionHandlerComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["handles",{"_index":610,"title":{},"body":{"components/AddreactionComponent.html":{},"components/LoginComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["hast",{"_index":3080,"title":{},"body":{"components/RegisterComponent.html":{}}}],["hat",{"_index":2850,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hauptstra&szlig;e",{"_index":2454,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hauptstraße",{"_index":2900,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["header",{"_index":1188,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["header'},{'name",{"_index":157,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["header.component.html",{"_index":1713,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1755,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss,../../../styles.scss",{"_index":1712,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":156,"title":{"components/HeaderComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headercontainer",{"_index":563,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["headerdropdownpositionrigth",{"_index":1780,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headerdropdownpositiontop",{"_index":1779,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headerimage",{"_index":1775,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headermenu",{"_index":1781,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headertext",{"_index":565,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["headeruser",{"_index":1776,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headeruserprofil",{"_index":1785,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["height",{"_index":377,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["help",{"_index":3838,"title":{},"body":{"index.html":{}}}],["herkunft",{"_index":2418,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hervorgehenden",{"_index":2811,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["heute",{"_index":1087,"title":{},"body":{"components/ChatComponent.html":{}}}],["hidden",{"_index":1906,"title":{},"body":{"components/IntroComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["hide",{"_index":1742,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hideoptions",{"_index":3405,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hideoptions(event",{"_index":3427,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hidepasswordimage",{"_index":1920,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["hidereactions",{"_index":3406,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hidereactions(event",{"_index":3429,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["hides",{"_index":2024,"title":{},"body":{"components/MainscreenComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["hier",{"_index":315,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{}}}],["hierbei",{"_index":2371,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hierdurch",{"_index":2845,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hiermit",{"_index":2794,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hierzu",{"_index":2439,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["highlight",{"_index":1286,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["highlighted",{"_index":1284,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["hin",{"_index":2532,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinweis",{"_index":2542,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinweise",{"_index":2325,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hinzufügen",{"_index":553,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{}}}],["hinzugefügt",{"_index":1541,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["hmtl",{"_index":271,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["hochladen",{"_index":957,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["home",{"_index":3107,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["hook",{"_index":624,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["hosten",{"_index":2444,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hosting",{"_index":2443,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hours",{"_index":1676,"title":{},"body":{"injectables/FormatService.html":{}}}],["hover",{"_index":438,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["html",{"_index":117,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["htmlinputelement",{"_index":910,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["http",{"_index":2964,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["http://localhost:4200",{"_index":3815,"title":{},"body":{"index.html":{}}}],["https",{"_index":2965,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://all",{"_index":2460,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://dabubble",{"_index":3870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://developers.google.com/fonts/faq",{"_index":2860,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://policies.google.com/privacy?hl=de",{"_index":2861,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["https://www.e",{"_index":2877,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["hue",{"_index":3208,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ich",{"_index":3090,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon",{"_index":1358,"title":{},"body":{"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["icon[_ngcontent",{"_index":3144,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["icons",{"_index":1564,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["id",{"_index":680,"title":{},"body":{"classes/Answer.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"injectables/MessageFirebaseService.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["id.service",{"_index":2243,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["id.service.ts",{"_index":1702,"title":{},"body":{"injectables/GenerateIdService.html":{},"coverage.html":{}}}],["id.service.ts:8",{"_index":1705,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["idarray",{"_index":1709,"title":{},"body":{"injectables/GenerateIdService.html":{}}}],["identifier",{"_index":3719,"title":{},"body":{"coverage.html":{}}}],["identifiziert",{"_index":2340,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["idservice",{"_index":2193,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["if(authservice.isloggedin",{"_index":3854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(this.authservice.isloggedin",{"_index":3257,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["if(this.selectedchatsubscription",{"_index":1155,"title":{},"body":{"components/ChatComponent.html":{}}}],["if(this.showheadermenu",{"_index":1764,"title":{},"body":{"components/HeaderComponent.html":{}}}],["if(this.threadservice.message",{"_index":2146,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["if(this.threadservice.message.id",{"_index":2147,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["if(this.user",{"_index":3636,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["if(this.user.id",{"_index":1345,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["if(userschat",{"_index":3640,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["ifchangeddirective",{"_index":197,"title":{"directives/IfChangedDirective.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ifchangedservice",{"_index":1059,"title":{"injectables/IfChangedService.html":{}},"body":{"components/ChatComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["ihnen",{"_index":1624,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["ihr",{"_index":1626,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["ihre",{"_index":94,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["ihrem",{"_index":2855,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihren",{"_index":2330,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihrer",{"_index":2381,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ihrere",{"_index":3658,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["ihres",{"_index":2406,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["im",{"_index":2486,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["image",{"_index":913,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/HeaderComponent.html":{},"components/ShowChannelUsersComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["imagepath",{"_index":3275,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["img",{"_index":396,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["implementation",{"_index":895,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["implements",{"_index":13,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{},"injectables/WindowSizeService.html":{},"index.html":{}}}],["implicit",{"_index":1832,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["important",{"_index":471,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["imports",{"_index":742,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["impressum",{"_index":1852,"title":{},"body":{"components/ImprintComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["impressumspflicht",{"_index":2788,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["imprint",{"_index":1844,"title":{},"body":{"components/ImprintComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["imprint'},{'name",{"_index":159,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["imprint.component.html",{"_index":1846,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.component.scss",{"_index":1845,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprintcomponent",{"_index":158,"title":{"components/ImprintComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["index",{"_index":24,"title":{"index.html":{}},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":3424,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["indicating",{"_index":1590,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ThreadComponent.html":{}}}],["infix",{"_index":422,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["info@beispielfirma.de",{"_index":2552,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["information",{"_index":1420,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["informationen",{"_index":2343,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informationsmaterialien",{"_index":2793,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["informiert",{"_index":2617,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inh",{"_index":2452,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inhalte",{"_index":2445,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inherited",{"_index":1030,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["init",{"_index":1130,"title":{},"body":{"components/ChatComponent.html":{}}}],["initchat",{"_index":1074,"title":{},"body":{"components/ChatComponent.html":{}}}],["initialization",{"_index":891,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["initializeapp",{"_index":754,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment",{"_index":734,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["initializeapp(environment.firebase",{"_index":854,"title":{},"body":{"modules/AppModule.html":{}}}],["initializeapp(environment.html\">providefirebaseapp",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["initializes",{"_index":1872,"title":{},"body":{"components/IntroComponent.html":{}}}],["initiates",{"_index":1592,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["inject",{"_index":222,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/LoginComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["inject(authfirebaseservice",{"_index":3852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(database",{"_index":3691,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["inject(router",{"_index":3853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(userfirebaseservice",{"_index":1953,"title":{},"body":{"components/LoginComponent.html":{}}}],["injectable",{"_index":202,"title":{"injectables/ActiveSelectionService.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"injectables/IfChangedService.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}},"body":{"injectables/ActiveSelectionService.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"injectables/IfChangedService.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{}}}],["injectables",{"_index":204,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"injectables/IfChangedService.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"overview.html":{}}}],["inkl",{"_index":2448,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inkl.com",{"_index":2449,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inkl.com/datenschutzinformationen",{"_index":2461,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inklusive",{"_index":2808,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inline",{"_index":1550,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["innerhalb",{"_index":2567,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["input",{"_index":272,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["input#mat",{"_index":439,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["input.files",{"_index":933,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["input.files.length",{"_index":934,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["input.files[0",{"_index":935,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["input.mat",{"_index":408,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["inputavatar",{"_index":1232,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["inputcontainer",{"_index":1228,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["inputcontainermaster",{"_index":1250,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["inputcontent",{"_index":1233,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["inputs",{"_index":254,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["insbesondere",{"_index":2703,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["inserted",{"_index":425,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["inserted.mat",{"_index":407,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["inserts",{"_index":1810,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["inside",{"_index":1747,"title":{},"body":{"components/HeaderComponent.html":{}}}],["instance",{"_index":2125,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["instanceof",{"_index":232,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/ChatComponent.html":{}}}],["interesse",{"_index":2471,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interessen",{"_index":2684,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["interesses",{"_index":2611,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internet",{"_index":2534,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["internetbrowser",{"_index":2392,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["intervall",{"_index":1320,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["intro",{"_index":1865,"title":{},"body":{"components/IntroComponent.html":{}}}],["intro'},{'name",{"_index":161,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["intro.component.html",{"_index":1867,"title":{},"body":{"components/IntroComponent.html":{}}}],["intro.component.scss",{"_index":1866,"title":{},"body":{"components/IntroComponent.html":{}}}],["introcomponent",{"_index":160,"title":{"components/IntroComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["introduction",{"_index":1863,"title":{},"body":{"components/IntroComponent.html":{}}}],["invalid",{"_index":432,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["invalid.mat",{"_index":413,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["invalid.ng",{"_index":414,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["invalidname",{"_index":3032,"title":{},"body":{"components/RegisterComponent.html":{}}}],["invert(11",{"_index":3205,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ip",{"_index":2848,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["iput",{"_index":283,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["isbuttondisabled",{"_index":1579,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["iscurrentuser",{"_index":3583,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["isemailinputactive",{"_index":1576,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["isinputactive",{"_index":1577,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isnameinputactive",{"_index":3013,"title":{},"body":{"components/RegisterComponent.html":{}}}],["isopened",{"_index":594,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["isopened(value",{"_index":641,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["isownmessage",{"_index":2178,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"components/ToolbarComponent.html":{}}}],["ispasswordinputactive",{"_index":1921,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ispasswordvalid",{"_index":3014,"title":{},"body":{"components/RegisterComponent.html":{}}}],["ispasswordvisible",{"_index":1922,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ist",{"_index":330,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["isuserselected",{"_index":1488,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["isvisible",{"_index":3347,"title":{},"body":{"components/ThreadComponent.html":{}}}],["items",{"_index":115,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["jederzeit",{"_index":2413,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jedes",{"_index":2873,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jedoch",{"_index":2742,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jeweilige",{"_index":2674,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["jeweils",{"_index":2613,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["juristische",{"_index":2554,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["juristischen",{"_index":2755,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["justify",{"_index":111,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["k&ouml;nnen",{"_index":2341,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kann",{"_index":2372,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kannst",{"_index":1181,"title":{},"body":{"components/ChatComponent.html":{}}}],["karma",{"_index":3829,"title":{},"body":{"index.html":{}}}],["keine",{"_index":2568,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kenntnis",{"_index":2847,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["key",{"_index":3058,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["keyframes",{"_index":995,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["kleinbuchstaben",{"_index":3140,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["kommunikation",{"_index":356,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["komponente",{"_index":319,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["kontaktanfragen",{"_index":2822,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontaktdaten",{"_index":2359,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontaktformular",{"_index":2377,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kontaktieren",{"_index":2807,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["konto",{"_index":3078,"title":{},"body":{"components/RegisterComponent.html":{},"components/StartscreenComponent.html":{}}}],["korrekt",{"_index":2840,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["kunden",{"_index":2642,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["können",{"_index":1628,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["kürze",{"_index":106,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["l&auml;dt",{"_index":2836,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&ouml;schersuchen",{"_index":2574,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&ouml;schung",{"_index":2425,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["l&uuml;ckenloser",{"_index":2538,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["label.mdc",{"_index":431,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["lagern",{"_index":341,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["lang",{"_index":369,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["lassen",{"_index":2724,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["last",{"_index":1802,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["latin",{"_index":1261,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["leading",{"_index":1681,"title":{},"body":{"injectables/FormatService.html":{}}}],["leaks",{"_index":627,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["learning",{"_index":1773,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["leave",{"_index":1416,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["leavechannel",{"_index":1392,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["left",{"_index":384,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["left18",{"_index":3223,"title":{},"body":{"components/SidenavComponent.html":{}}}],["left40",{"_index":3224,"title":{},"body":{"components/SidenavComponent.html":{}}}],["left60",{"_index":3225,"title":{},"body":{"components/SidenavComponent.html":{}}}],["legend",{"_index":116,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"overview.html":{}}}],["leider",{"_index":1619,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["length",{"_index":1706,"title":{},"body":{"injectables/GenerateIdService.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["letztgenannten",{"_index":2584,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["leute",{"_index":552,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelUsersComponent.html":{}}}],["lifecycle",{"_index":889,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["line",{"_index":445,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{}}}],["line'},{'name",{"_index":145,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["line.component",{"_index":802,"title":{},"body":{"modules/AppModule.html":{}}}],["line.component.html",{"_index":1364,"title":{},"body":{"components/DateLineComponent.html":{}}}],["line.component.scss",{"_index":1363,"title":{},"body":{"components/DateLineComponent.html":{},"components/ThreadComponent.html":{}}}],["line.component.ts",{"_index":1362,"title":{},"body":{"components/DateLineComponent.html":{},"coverage.html":{}}}],["line.component.ts:10",{"_index":1368,"title":{},"body":{"components/DateLineComponent.html":{}}}],["line.component.ts:16",{"_index":1371,"title":{},"body":{"components/DateLineComponent.html":{}}}],["line.component.ts:17",{"_index":1370,"title":{},"body":{"components/DateLineComponent.html":{}}}],["line.component.ts:20",{"_index":1369,"title":{},"body":{"components/DateLineComponent.html":{}}}],["line/date",{"_index":801,"title":{},"body":{"modules/AppModule.html":{},"components/DateLineComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["linear",{"_index":1883,"title":{},"body":{"components/IntroComponent.html":{}}}],["link",{"_index":1944,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["links",{"_index":1177,"title":{},"body":{"components/ChatComponent.html":{}}}],["list",{"_index":1194,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{}}}],["liste",{"_index":951,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{}}}],["listener",{"_index":623,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["lit",{"_index":2467,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["literal",{"_index":3034,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["load",{"_index":3477,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["loadanswers",{"_index":2188,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["loadanswers(message",{"_index":2211,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["loadanswersquery",{"_index":3376,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["loadanswersquery(path",{"_index":3380,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["loadchat",{"_index":1075,"title":{},"body":{"components/ChatComponent.html":{}}}],["loadchat(newselectedchat",{"_index":1090,"title":{},"body":{"components/ChatComponent.html":{}}}],["loaded",{"_index":1094,"title":{},"body":{"components/ChatComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["loadedanswers",{"_index":2179,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["loadedreactions",{"_index":2180,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["loadedthread",{"_index":3375,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["loadeduser",{"_index":1334,"title":{},"body":{"components/ChatViewComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["loadedusers",{"_index":3469,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["loading",{"_index":1149,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{}}}],["loadreactions",{"_index":2189,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["loadreactions(message",{"_index":2214,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["loads",{"_index":1092,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["location",{"_index":249,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["location.reload",{"_index":3632,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["log",{"_index":1771,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logged",{"_index":1942,"title":{},"body":{"components/LoginComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["loggout",{"_index":1739,"title":{},"body":{"components/HeaderComponent.html":{}}}],["login",{"_index":1631,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["login'},{'name",{"_index":163,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["login(this.guestloginname",{"_index":1980,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1916,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1915,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":162,"title":{"components/LoginComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginerrormessage",{"_index":1923,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginfailed",{"_index":1924,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginwithgoogle",{"_index":1927,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":1890,"title":{},"body":{"components/IntroComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["logo.d",{"_index":1896,"title":{},"body":{"components/IntroComponent.html":{}}}],["logout",{"_index":1718,"title":{},"body":{"components/HeaderComponent.html":{},"components/ThreadComponent.html":{}}}],["logs",{"_index":512,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/LoginComponent.html":{},"components/ReactionComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["long",{"_index":1517,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["lt;app",{"_index":1823,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["lädt",{"_index":2973,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["löschen",{"_index":3314,"title":{},"body":{"injectables/StorageFirebaseService.html":{},"components/ToolbarComponent.html":{}}}],["löschersuchen",{"_index":2915,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["löschung",{"_index":2893,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["lückenloser",{"_index":2911,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&ouml;glich",{"_index":2541,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&ouml;glichst",{"_index":2473,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["m&uuml;nnich",{"_index":2451,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ma&szlig;nahmen",{"_index":2602,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["machbar",{"_index":2727,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mache",{"_index":1171,"title":{},"body":{"components/ChatComponent.html":{}}}],["machen",{"_index":2576,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mail",{"_index":681,"title":{},"body":{"classes/Answer.html":{},"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["mailexists",{"_index":3478,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["mailexists(mail",{"_index":3508,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["mails",{"_index":2787,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["main",{"_index":61,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/MainscreenComponent.html":{},"components/StartscreenComponent.html":{}}}],["mainscreen",{"_index":2004,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["mainscreen'},{'name",{"_index":165,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["mainscreen.component.html",{"_index":2006,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["mainscreen.component.scss",{"_index":2039,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["mainscreen.component.scss,../../styles.scss",{"_index":2005,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["mainscreen/channel/add",{"_index":853,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/channel/channel.component",{"_index":768,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/channel/edit",{"_index":839,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mainscreen/channel/show",{"_index":851,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/chat/chat.component",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/empty",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/header/header.component",{"_index":767,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/mainscreen.component",{"_index":763,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["mainscreen/message/addreaction/addreaction.component",{"_index":811,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/message/date",{"_index":800,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/message/message",{"_index":797,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/message/message.component",{"_index":789,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/message/reaction/reaction.component",{"_index":805,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/message/thread/thread.component",{"_index":769,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/message/toolbar/toolbar.component",{"_index":810,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/searchbar/searchbar.component",{"_index":819,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/sidenav/chat",{"_index":834,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/sidenav/sidenav.component",{"_index":766,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreen/user",{"_index":824,"title":{},"body":{"modules/AppModule.html":{}}}],["mainscreencomponent",{"_index":164,"title":{"components/MainscreenComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":458,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["marketing",{"_index":361,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["marks",{"_index":900,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["mart",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["mart/picker",{"_index":1254,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["maschinenlesbaren",{"_index":2722,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mat",{"_index":399,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["matautocompletemodule",{"_index":832,"title":{},"body":{"modules/AppModule.html":{}}}],["matbadgemodule",{"_index":806,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":781,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["matcardmodule",{"_index":771,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":777,"title":{},"body":{"modules/AppModule.html":{}}}],["matches",{"_index":3496,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["matching",{"_index":201,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchipsmodule",{"_index":844,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":259,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/SidenavComponent.html":{}}}],["matdialogmodule",{"_index":796,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":260,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["materror1",{"_index":435,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["matformfieldmodule",{"_index":773,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":775,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["matinputmodule",{"_index":779,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{}}}],["matradiomodule",{"_index":842,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":808,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":837,"title":{},"body":{"modules/AppModule.html":{},"components/ChatViewComponent.html":{}}}],["max",{"_index":374,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["max.mustermann@example.com",{"_index":1860,"title":{},"body":{"components/ImprintComponent.html":{}}}],["maßnahmen",{"_index":2924,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mdc",{"_index":401,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/ThreadComponent.html":{}}}],["media",{"_index":495,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["medien",{"_index":2450,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mehr",{"_index":2678,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["member",{"_index":3162,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["membername",{"_index":1065,"title":{},"body":{"components/ChatComponent.html":{}}}],["membernameinput",{"_index":1231,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["memberof",{"_index":1877,"title":{},"body":{"components/IntroComponent.html":{}}}],["memory",{"_index":626,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["men",{"_index":2048,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["mentionmodule",{"_index":827,"title":{},"body":{"modules/AppModule.html":{}}}],["mentions",{"_index":829,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["menu",{"_index":1209,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{}}}],["menuheader",{"_index":1567,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["menuheader.ng",{"_index":1214,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["menuheadertext",{"_index":1215,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["menuusers",{"_index":1220,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["menuuserscontainer",{"_index":1219,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["menuusersimage",{"_index":1221,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["menuusersname",{"_index":1222,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["message",{"_index":169,"title":{"classes/Message.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["message'},{'name",{"_index":167,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["message(doc.data",{"_index":2270,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["message(value",{"_index":2139,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["message.class",{"_index":1053,"title":{},"body":{"classes/Chat.html":{}}}],["message.id",{"_index":2274,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["message.path",{"_index":2257,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["message.tojson",{"_index":2275,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["messagecomponent",{"_index":166,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagecontrol",{"_index":2098,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["messagecreatecomponent",{"_index":168,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagedmy",{"_index":1153,"title":{},"body":{"components/ChatComponent.html":{}}}],["messageeditcomponent",{"_index":171,"title":{"components/MessageEditComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messagefirebaseservice",{"_index":2110,"title":{"injectables/MessageFirebaseService.html":{}},"body":{"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["messagelocation",{"_index":3409,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["messagepath",{"_index":1066,"title":{},"body":{"components/ChatComponent.html":{}}}],["messages",{"_index":1022,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{}}}],["messageservice",{"_index":2109,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["messagetime",{"_index":1067,"title":{},"body":{"components/ChatComponent.html":{},"components/DateLineComponent.html":{}}}],["messagetime(value",{"_index":1375,"title":{},"body":{"components/DateLineComponent.html":{}}}],["messagetimestring",{"_index":1366,"title":{},"body":{"components/DateLineComponent.html":{}}}],["messagingsenderid",{"_index":3867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["method",{"_index":612,"title":{},"body":{"components/AddreactionComponent.html":{},"directives/IfChangedDirective.html":{},"components/ReactionComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["milliseconds",{"_index":1692,"title":{},"body":{"injectables/FormatService.html":{}}}],["min",{"_index":671,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["mindesten",{"_index":365,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["mindestens",{"_index":3087,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["minutes",{"_index":1683,"title":{},"body":{"injectables/FormatService.html":{}}}],["miscellaneous",{"_index":3846,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":333,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["mitgelesen",{"_index":2785,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitglieder",{"_index":555,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["mitgliedstaat",{"_index":2704,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitgliedstaats",{"_index":2760,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mitteilen",{"_index":2370,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mittel",{"_index":2560,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mobile",{"_index":1407,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{}}}],["mode",{"_index":79,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["models/message.class",{"_index":2240,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["models/thread.class",{"_index":3389,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["models/user.class",{"_index":3534,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["module",{"_index":717,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":719,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["month",{"_index":1669,"title":{},"body":{"injectables/FormatService.html":{}}}],["more",{"_index":3451,"title":{},"body":{"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"index.html":{}}}],["mouseevent",{"_index":646,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["move",{"_index":1422,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["moves",{"_index":3149,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["msg",{"_index":2160,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["muss",{"_index":364,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["mustermann",{"_index":1855,"title":{},"body":{"components/ImprintComponent.html":{}}}],["musterstadt",{"_index":1859,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["musterstraße",{"_index":1856,"title":{},"body":{"components/ImprintComponent.html":{}}}],["musterweg",{"_index":2546,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mutma&szlig;lichen",{"_index":2709,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mutmaßlichen",{"_index":2946,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["mychannels",{"_index":3226,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mychannelsheader",{"_index":3213,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mychannelsheader2",{"_index":3216,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mychannelsheadertext",{"_index":3219,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mymessages",{"_index":3234,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mymessagescontainer",{"_index":3233,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mymessagesheader",{"_index":3228,"title":{},"body":{"components/SidenavComponent.html":{}}}],["mymessagesheadertext",{"_index":3232,"title":{},"body":{"components/SidenavComponent.html":{}}}],["möglich",{"_index":2912,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["möglichst",{"_index":2901,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["münnich",{"_index":2898,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["müssen",{"_index":3654,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["nach",{"_index":2380,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["nachfolgend",{"_index":2458,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nachname",{"_index":3084,"title":{},"body":{"components/RegisterComponent.html":{}}}],["nachricht",{"_index":1561,"title":{},"body":{"components/EmptyWindowComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["nachweisen",{"_index":2683,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"index.html":{}}}],["nameinput",{"_index":3042,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["nameinputvalue",{"_index":3061,"title":{},"body":{"components/RegisterComponent.html":{}}}],["namen",{"_index":2561,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["names",{"_index":3495,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["namevalidator",{"_index":3018,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["namevalidator(control",{"_index":3029,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["nat&uuml;rliche",{"_index":2553,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nat&uuml;rlichen",{"_index":2754,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["natürliche",{"_index":2913,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["natürlichen",{"_index":2958,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["navigate",{"_index":3814,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":902,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["nbsp;(du",{"_index":1158,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{}}}],["ndash",{"_index":2752,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ndern",{"_index":1627,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["need",{"_index":3834,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1086,"title":{},"body":{"components/ChatComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["nehmen",{"_index":2513,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["neu",{"_index":3264,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["neue",{"_index":1560,"title":{},"body":{"components/EmptyWindowComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["neuen",{"_index":3659,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["neues",{"_index":3082,"title":{},"body":{"components/RegisterComponent.html":{}}}],["new",{"_index":282,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{},"index.html":{}}}],["newchannel",{"_index":312,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelUsersComponent.html":{}}}],["newchanneldescription",{"_index":1388,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["newchannelinputfield",{"_index":482,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["newchannelname",{"_index":1389,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["newemail",{"_index":3531,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["newmessagemobile",{"_index":2015,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["newpassword",{"_index":3098,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["newselectedchat",{"_index":1093,"title":{},"body":{"components/ChatComponent.html":{}}}],["next",{"_index":279,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["ng",{"_index":418,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":591,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["ngmodule",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":592,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["ngoninit",{"_index":28,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{},"injectables/WindowSizeService.html":{}}}],["nicht",{"_index":2540,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["noch",{"_index":2747,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["node",{"_index":649,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["none",{"_index":447,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["normal",{"_index":1265,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["noselection",{"_index":2152,"title":{},"body":{"components/MessageEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["not(:disabled):hover",{"_index":467,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["notification",{"_index":1287,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["notificationservice",{"_index":882,"title":{"injectables/NotificationService.html":{}},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/NotificationService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["notizen",{"_index":1172,"title":{},"body":{"components/ChatComponent.html":{}}}],["now",{"_index":1685,"title":{},"body":{"injectables/FormatService.html":{}}}],["nowrap",{"_index":992,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{}}}],["null",{"_index":215,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["number",{"_index":1029,"title":{},"body":{"classes/Channel.html":{},"components/ChatViewComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"classes/Message.html":{},"injectables/NotificationService.html":{},"components/ReactionComponent.html":{},"components/SidenavComponent.html":{}}}],["number=2",{"_index":2297,"title":{},"body":{"injectables/NotificationService.html":{}}}],["nunito",{"_index":1257,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["nur",{"_index":1164,"title":{},"body":{"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["nutzen",{"_index":1986,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["nutzers",{"_index":2488,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzerverhaltens",{"_index":2407,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzt",{"_index":2765,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["nutzung",{"_index":2496,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["o",{"_index":2563,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["oben",{"_index":2497,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["obj",{"_index":685,"title":{},"body":{"classes/Answer.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/User.html":{}}}],["obj.answer",{"_index":710,"title":{},"body":{"classes/Answer.html":{}}}],["obj.autorid",{"_index":2080,"title":{},"body":{"classes/Message.html":{}}}],["obj.avatar",{"_index":702,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["obj.avatarsrc",{"_index":2082,"title":{},"body":{"classes/Message.html":{}}}],["obj.channels",{"_index":705,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["obj.chats",{"_index":707,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["obj.content",{"_index":2077,"title":{},"body":{"classes/Message.html":{}}}],["obj.filename",{"_index":2088,"title":{},"body":{"classes/Message.html":{}}}],["obj.filesrc",{"_index":2086,"title":{},"body":{"classes/Message.html":{}}}],["obj.fullname",{"_index":698,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["obj.id",{"_index":696,"title":{},"body":{"classes/Answer.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/User.html":{}}}],["obj.mail",{"_index":700,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["obj.name",{"_index":2988,"title":{},"body":{"classes/Reaction.html":{}}}],["obj.path",{"_index":2084,"title":{},"body":{"classes/Message.html":{},"classes/Reaction.html":{}}}],["obj.reactions",{"_index":2090,"title":{},"body":{"classes/Message.html":{}}}],["obj.status",{"_index":3466,"title":{},"body":{"classes/User.html":{}}}],["obj.timestamp",{"_index":2078,"title":{},"body":{"classes/Message.html":{}}}],["obj.users",{"_index":2989,"title":{},"body":{"classes/Reaction.html":{}}}],["object",{"_index":231,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"injectables/FormatService.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"miscellaneous/variables.html":{}}}],["objekt",{"_index":3504,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["observable",{"_index":636,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/MainscreenComponent.html":{},"injectables/UserProfileService.html":{}}}],["observables",{"_index":2022,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["observersmodule",{"_index":1116,"title":{},"body":{"components/ChatComponent.html":{}}}],["oder",{"_index":1175,"title":{},"body":{"components/ChatComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["offline",{"_index":3467,"title":{},"body":{"classes/User.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["ohne",{"_index":2815,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["okzznali",{"_index":3864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["once",{"_index":1134,"title":{},"body":{"components/ChatComponent.html":{}}}],["onchanges",{"_index":1373,"title":{},"body":{"components/DateLineComponent.html":{}}}],["ondestroy",{"_index":3324,"title":{},"body":{"components/ThreadComponent.html":{}}}],["ondisconnect",{"_index":3692,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["ondisconnect(userstatusdatabaseref).set",{"_index":3698,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["one",{"_index":1509,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"injectables/FormatService.html":{},"components/UserProfilComponent.html":{}}}],["onedayinms",{"_index":1688,"title":{},"body":{"injectables/FormatService.html":{}}}],["onforgotpasswordlinkclick",{"_index":1928,"title":{},"body":{"components/LoginComponent.html":{},"components/StartscreenComponent.html":{}}}],["oninit",{"_index":14,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["online",{"_index":3690,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["onsnapshot",{"_index":2234,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["onsnapshot(collection(this.firestore",{"_index":2259,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["onsnapshot(q",{"_index":3541,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["onsnapshot(this.loadanswersquery(path",{"_index":3393,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["onsubmit",{"_index":3019,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onsubmitavatar",{"_index":875,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["onsubmitnewchannel",{"_index":252,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["onsubmitnewchannel(value",{"_index":275,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["oobcode",{"_index":64,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["opacity",{"_index":571,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["open",{"_index":3673,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["openaddmembermenu",{"_index":1393,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["openden",{"_index":3611,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["opendialog",{"_index":253,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/SidenavComponent.html":{}}}],["opened",{"_index":3601,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["opening",{"_index":3609,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["openmessage",{"_index":2104,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["openmessage(message",{"_index":2119,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["opennewchatorchannel",{"_index":3170,"title":{},"body":{"components/SidenavComponent.html":{}}}],["openprofil",{"_index":1076,"title":{},"body":{"components/ChatComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["openprofil(user",{"_index":3150,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["opens",{"_index":285,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["openthread",{"_index":3377,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["openthread(message",{"_index":3383,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["opentoolbar",{"_index":3336,"title":{},"body":{"components/ThreadComponent.html":{}}}],["openuserprofil",{"_index":1310,"title":{},"body":{"components/ChatViewComponent.html":{},"injectables/UserProfileService.html":{}}}],["openuserprofil(user",{"_index":1321,"title":{},"body":{"components/ChatViewComponent.html":{},"injectables/UserProfileService.html":{}}}],["openuserprofil(user:user",{"_index":3679,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["openuserprofilsubject",{"_index":3669,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["option",{"_index":515,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["options",{"_index":2162,"title":{},"body":{"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/ToolbarComponent.html":{}}}],["orderby",{"_index":3388,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["orderby(\"timestamp",{"_index":3392,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["origin",{"_index":670,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["orts",{"_index":2708,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["otheruserposition",{"_index":3665,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["otherwise",{"_index":1511,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["ouml;ffentlichen",{"_index":2757,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["out",{"_index":475,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":1637,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["output",{"_index":635,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["outputs",{"_index":595,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ToolbarComponent.html":{}}}],["overflow",{"_index":1197,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/IntroComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["overlay",{"_index":480,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["overlay.ng",{"_index":424,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["override",{"_index":1045,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["overview",{"_index":3840,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1241,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["package",{"_index":3787,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["pad",{"_index":3221,"title":{},"body":{"components/SidenavComponent.html":{}}}],["padding",{"_index":383,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["page",{"_index":3108,"title":{},"body":{"components/ResetPasswordComponent.html":{},"index.html":{}}}],["pane",{"_index":500,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["panel",{"_index":1213,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{}}}],["paoznv13hufqpgejhc2l",{"_index":3863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":87,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/MainscreenComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["parameter",{"_index":3110,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["params",{"_index":2286,"title":{},"body":{"injectables/NotificationService.html":{}}}],["passiert",{"_index":2332,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["password",{"_index":1570,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["password'},{'name",{"_index":155,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["password.component",{"_index":814,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["password.component.html",{"_index":1572,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1571,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1569,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:13",{"_index":3112,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:14",{"_index":3114,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":3113,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":3115,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1601,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1582,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1600,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":1602,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":1604,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":1603,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1599,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:41",{"_index":1586,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":3109,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:52",{"_index":1583,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:62",{"_index":1591,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:66",{"_index":3100,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":3105,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:97",{"_index":3106,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":813,"title":{},"body":{"modules/AppModule.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":821,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordcontrol",{"_index":3128,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordcontrol.valid",{"_index":3132,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordcontrol.value",{"_index":3133,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordinput",{"_index":1949,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordinputvalue",{"_index":3065,"title":{},"body":{"components/RegisterComponent.html":{}}}],["passwordrepeatcontrol",{"_index":3130,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordrepeatcontrol.value",{"_index":3134,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordrepeatinput",{"_index":3120,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwort",{"_index":1616,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["path",{"_index":662,"title":{},"body":{"components/AddreactionComponent.html":{},"modules/AppRoutingModule.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"classes/Reaction.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{}}}],["path}/${reaction.id",{"_index":2256,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["path}/${reactionid",{"_index":2253,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["per",{"_index":2535,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["perform",{"_index":892,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{}}}],["performs",{"_index":3420,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["pers&ouml;nlich",{"_index":2339,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pers&ouml;nlichen",{"_index":2515,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["person",{"_index":2555,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogene",{"_index":2336,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogenen",{"_index":2331,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["personenbezogener",{"_index":2595,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persönlich",{"_index":2885,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["persönlichen",{"_index":2907,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pflicht&shy;informationen",{"_index":2510,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pflicht­informationen",{"_index":2906,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["picker",{"_index":657,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["pickermodule",{"_index":815,"title":{},"body":{"modules/AppModule.html":{}}}],["platform",{"_index":3831,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":2829,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pointer",{"_index":398,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["policy",{"_index":2312,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["policy'},{'name",{"_index":175,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["policy.component",{"_index":788,"title":{},"body":{"modules/AppModule.html":{}}}],["policy.component.html",{"_index":2314,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.scss",{"_index":2313,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":2311,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy.component.ts:10",{"_index":2317,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts:20",{"_index":2318,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy/privacy",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["popup",{"_index":1513,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["position",{"_index":460,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["pr&uuml;fung",{"_index":2739,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["present",{"_index":3111,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["press",{"_index":3598,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["prevent",{"_index":625,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["prevents",{"_index":1746,"title":{},"body":{"components/HeaderComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["preview",{"_index":2161,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["previous",{"_index":1804,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["previousvalue",{"_index":1826,"title":{},"body":{"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{}}}],["primary.ng",{"_index":411,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["pristine.ng",{"_index":412,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["privacy",{"_index":174,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["privacypolicy",{"_index":3096,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["privacypolicycomponent",{"_index":173,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":76,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["process",{"_index":1593,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["prod",{"_index":861,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profil",{"_index":195,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["profil.component",{"_index":826,"title":{},"body":{"modules/AppModule.html":{}}}],["profil.component.html",{"_index":3578,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.scss",{"_index":3577,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts",{"_index":3576,"title":{},"body":{"components/UserProfilComponent.html":{},"coverage.html":{}}}],["profil.component.ts:121",{"_index":3594,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:134",{"_index":3593,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:142",{"_index":3604,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:155",{"_index":3610,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:172",{"_index":3600,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:189",{"_index":3613,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:197",{"_index":3596,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:20",{"_index":3592,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:21",{"_index":3620,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:22",{"_index":3619,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:24",{"_index":3615,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:25",{"_index":3616,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:27",{"_index":3618,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:37",{"_index":3591,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:63",{"_index":3608,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:80",{"_index":3605,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil.component.ts:91",{"_index":3602,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["profil/user",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["profile",{"_index":1099,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["profile.service",{"_index":1126,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["profile.service.ts",{"_index":3666,"title":{},"body":{"injectables/UserProfileService.html":{},"coverage.html":{}}}],["profile.service.ts:10",{"_index":3678,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["profile.service.ts:11",{"_index":3677,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["profile.service.ts:13",{"_index":3675,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["profile.service.ts:14",{"_index":3670,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["profile.service.ts:22",{"_index":3672,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["profile.service.ts:29",{"_index":3671,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["profiling",{"_index":2673,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["project",{"_index":3805,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":3856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":932,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["propagation",{"_index":3433,"title":{},"body":{"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["properties",{"_index":25,"title":{"properties.html":{}},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"injectables/IfChangedService.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"properties.html":{}}}],["property",{"_index":639,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"directives/IfChangedDirective.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{}}}],["provideauth",{"_index":731,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provided",{"_index":1506,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"directives/IfChangedDirective.html":{},"components/LoginComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["providedatabase",{"_index":733,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":225,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["providefirebaseapp",{"_index":735,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providefirestore",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providers",{"_index":723,"title":{},"body":{"modules/AppModule.html":{},"components/ChatComponent.html":{},"components/ThreadComponent.html":{},"overview.html":{}}}],["providestorage",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["prüfung",{"_index":2953,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["public",{"_index":243,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"injectables/IfChangedService.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ReactionComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["q",{"_index":3539,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["quelle",{"_index":2876,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["query",{"_index":2235,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["query(collection(this.firestore",{"_index":3391,"title":{},"body":{"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["queryparams",{"_index":46,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["queryparams.get('apikey",{"_index":83,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["queryparams.get('mode",{"_index":80,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["queryparams.get('oobcode",{"_index":81,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["querysnapshot",{"_index":2260,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["querysnapshot.foreach((doc",{"_index":2262,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["radiobuttoncontainer",{"_index":561,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["radius",{"_index":391,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["rahmen",{"_index":2619,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ratio",{"_index":1204,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["raum",{"_index":1168,"title":{},"body":{"components/ChatComponent.html":{}}}],["reaction",{"_index":655,"title":{"classes/Reaction.html":{}},"body":{"components/AddreactionComponent.html":{},"classes/Message.html":{},"injectables/MessageFirebaseService.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"coverage.html":{}}}],["reaction'},{'name",{"_index":177,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["reaction(doc.data",{"_index":2264,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["reaction(value",{"_index":3001,"title":{},"body":{"components/ReactionComponent.html":{}}}],["reaction.class",{"_index":2076,"title":{},"body":{"classes/Message.html":{}}}],["reaction.component.html",{"_index":2992,"title":{},"body":{"components/ReactionComponent.html":{}}}],["reaction.component.scss",{"_index":2991,"title":{},"body":{"components/ReactionComponent.html":{}}}],["reaction.id",{"_index":2265,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["reaction.path",{"_index":2244,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["reaction.tojson",{"_index":2250,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["reaction.users.length",{"_index":2247,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["reactioncomponent",{"_index":176,"title":{"components/ReactionComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reactionid",{"_index":2251,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["reactions",{"_index":2065,"title":{},"body":{"classes/Message.html":{},"injectables/MessageFirebaseService.html":{},"components/ToolbarComponent.html":{}}}],["reactiveformsmodule",{"_index":784,"title":{},"body":{"modules/AppModule.html":{}}}],["recht",{"_index":2414,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recht24.de",{"_index":2878,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechte",{"_index":2410,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtlich",{"_index":2578,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtliche",{"_index":2797,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtlichen",{"_index":2605,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtm&auml;&szlig;igkeit",{"_index":2653,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtmäßigkeit",{"_index":2933,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsanspr&uuml;chen",{"_index":2691,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsansprüchen",{"_index":2941,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsbehelfe",{"_index":2716,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsgrundlage",{"_index":2637,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["rechtsgrundlagen",{"_index":2586,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["recover",{"_index":58,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["recoveremail",{"_index":93,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["recoverpasswort",{"_index":49,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["red",{"_index":493,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatViewComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["redirects",{"_index":60,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/StartscreenComponent.html":{}}}],["ref",{"_index":3291,"title":{},"body":{"injectables/StorageFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["ref(this.database",{"_index":3696,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["ref(this.storage",{"_index":3299,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["refchannel",{"_index":1493,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["refchannel(value",{"_index":1530,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["refchannelid",{"_index":3317,"title":{},"body":{"classes/Thread.html":{}}}],["reference",{"_index":3281,"title":{},"body":{"injectables/StorageFirebaseService.html":{},"index.html":{}}}],["refreshes",{"_index":1318,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["refreshintervall",{"_index":1308,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["regel",{"_index":2735,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["register",{"_index":1995,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["register'},{'name",{"_index":179,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["register.component.html",{"_index":3011,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":3010,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":178,"title":{"components/RegisterComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registers",{"_index":3491,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["registersuccessful",{"_index":3067,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registration",{"_index":3024,"title":{},"body":{"components/RegisterComponent.html":{},"components/StartscreenComponent.html":{}}}],["registrationerror",{"_index":3092,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrationerrormessage",{"_index":3015,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registrationfailed",{"_index":3016,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registuser",{"_index":3470,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["regular.woff2",{"_index":1262,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["relative",{"_index":658,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["reload",{"_index":3818,"title":{},"body":{"index.html":{}}}],["remove",{"_index":622,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["removed",{"_index":1523,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["ren",{"_index":2899,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ren&eacute",{"_index":2453,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["renderer",{"_index":601,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["renderer2",{"_index":598,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["rendering",{"_index":3353,"title":{},"body":{"components/ThreadComponent.html":{}}}],["rendernotification",{"_index":2279,"title":{},"body":{"injectables/NotificationService.html":{}}}],["rendernotification(message",{"_index":2282,"title":{},"body":{"injectables/NotificationService.html":{}}}],["renders",{"_index":2285,"title":{},"body":{"injectables/NotificationService.html":{}}}],["representing",{"_index":619,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["reset",{"_index":181,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"overview.html":{}}}],["reset/:oobcode",{"_index":864,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["resetpassword",{"_index":85,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":180,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resets",{"_index":2124,"title":{},"body":{"components/MessageEditComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resolves",{"_index":2203,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{}}}],["respective",{"_index":3103,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["response",{"_index":3432,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["restore",{"_index":1994,"title":{},"body":{"components/LoginComponent.html":{}}}],["result",{"_index":1339,"title":{},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["results",{"_index":200,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["resultuserimages",{"_index":1217,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["retrieves",{"_index":3037,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageFirebaseService.html":{},"components/ThreadComponent.html":{}}}],["return",{"_index":235,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"injectables/IfChangedService.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["reverse",{"_index":1200,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["revert",{"_index":3369,"title":{},"body":{"components/ThreadComponent.html":{}}}],["rgb(236",{"_index":1998,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(255",{"_index":1300,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["rgba(0",{"_index":964,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(0,0,0,0.5",{"_index":1552,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["rgba(104",{"_index":1641,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["rgba(121",{"_index":468,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["rgba(155",{"_index":1353,"title":{},"body":{"components/ChatViewComponent.html":{},"components/SidenavComponent.html":{}}}],["rgba(166",{"_index":1242,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["rgba(173",{"_index":981,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["rgba(236",{"_index":1633,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["rgba(255",{"_index":1001,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["rgba(68",{"_index":969,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{}}}],["rgba(83",{"_index":1468,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["richtigkeit",{"_index":2732,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["right",{"_index":386,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/NotificationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["right17",{"_index":3222,"title":{},"body":{"components/SidenavComponent.html":{}}}],["ripple",{"_index":446,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["root",{"_index":226,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AppComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["root'},{'name",{"_index":132,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["rotate",{"_index":3209,"title":{},"body":{"components/SidenavComponent.html":{}}}],["rotate(90deg",{"_index":2058,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["route",{"_index":43,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/StartscreenComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":35,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate",{"_index":3855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1605,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["routermodule",{"_index":857,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":866,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":48,"title":{"routes.html":{}},"body":{"components/ActionHandlerComponent.html":{},"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":752,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":856,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1191,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["rtdb.europe",{"_index":3871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":3811,"title":{},"body":{"index.html":{}}}],["running",{"_index":3825,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":637,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"injectables/UserProfileService.html":{},"injectables/WindowSizeService.html":{},"dependencies.html":{}}}],["same",{"_index":3523,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["sans",{"_index":1273,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["saturate(9000",{"_index":3207,"title":{},"body":{"components/SidenavComponent.html":{}}}],["save",{"_index":3515,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["savechanneldescription",{"_index":1394,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["savechannelname",{"_index":1395,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["savemessage",{"_index":2105,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["saves",{"_index":1424,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["saveuserchanges",{"_index":1492,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["saving",{"_index":3595,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["savingchanges",{"_index":1489,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["scaffolding",{"_index":3819,"title":{},"body":{"index.html":{}}}],["scale",{"_index":1909,"title":{},"body":{"components/IntroComponent.html":{}}}],["scale(0",{"_index":1897,"title":{},"body":{"components/IntroComponent.html":{}}}],["scale(0.3",{"_index":1901,"title":{},"body":{"components/IntroComponent.html":{}}}],["scale(0.5",{"_index":1899,"title":{},"body":{"components/IntroComponent.html":{}}}],["scale(0.8",{"_index":669,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["scale(1",{"_index":674,"title":{},"body":{"components/AddreactionComponent.html":{},"components/IntroComponent.html":{}}}],["scale(1.01",{"_index":3220,"title":{},"body":{"components/SidenavComponent.html":{}}}],["scale(1.05",{"_index":3211,"title":{},"body":{"components/SidenavComponent.html":{}}}],["scale(1.1",{"_index":3214,"title":{},"body":{"components/SidenavComponent.html":{}}}],["scale(2",{"_index":1902,"title":{},"body":{"components/IntroComponent.html":{}}}],["schließen",{"_index":2049,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["schloss",{"_index":2780,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schriftarten",{"_index":2832,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schriftbildes",{"_index":2851,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schritte",{"_index":2798,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutz",{"_index":2514,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutzw&uuml;rdige",{"_index":2682,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["schutzwürdige",{"_index":2938,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["screen",{"_index":496,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["scroll",{"_index":1480,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{}}}],["scrollbar",{"_index":3201,"title":{},"body":{"components/SidenavComponent.html":{}}}],["seachstring",{"_index":3498,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["search",{"_index":1114,"title":{},"body":{"components/ChatComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["searchbar",{"_index":1563,"title":{},"body":{"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["searchbar'},{'name",{"_index":183,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["searchbarcomponent",{"_index":182,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchfield",{"_index":1239,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{}}}],["searchkeywords",{"_index":3563,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["searchresults",{"_index":1068,"title":{},"body":{"components/ChatComponent.html":{}}}],["searchstring",{"_index":3497,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["searchstring.split",{"_index":3564,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["searchtext",{"_index":1069,"title":{},"body":{"components/ChatComponent.html":{}}}],["seclectedchannel",{"_index":2008,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["seconds",{"_index":2289,"title":{},"body":{"injectables/NotificationService.html":{}}}],["sect",{"_index":2480,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sehr",{"_index":2516,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sei",{"_index":2679,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sein",{"_index":360,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["seiner",{"_index":2852,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seite",{"_index":2764,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seiten",{"_index":2512,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seitenaufrufs",{"_index":2395,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["seitenbetreiber",{"_index":2771,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["selbst",{"_index":1185,"title":{},"body":{"components/ChatComponent.html":{}}}],["selectavatar",{"_index":876,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["selectavatar(avatar",{"_index":904,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["selected",{"_index":514,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/SidenavComponent.html":{},"components/ToolbarComponent.html":{}}}],["selectedchannel",{"_index":1417,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["selectedchannelid",{"_index":3167,"title":{},"body":{"components/SidenavComponent.html":{}}}],["selectedchat",{"_index":1070,"title":{},"body":{"components/ChatComponent.html":{}}}],["selectedchatsubscription",{"_index":1071,"title":{},"body":{"components/ChatComponent.html":{}}}],["selectedemoji",{"_index":652,"title":{},"body":{"components/AddreactionComponent.html":{},"components/MessageEditComponent.html":{},"components/ToolbarComponent.html":{}}}],["selectedoption",{"_index":502,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["selectedusers",{"_index":503,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["selection",{"_index":221,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddreactionComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ReactionComponent.html":{},"components/ToolbarComponent.html":{}}}],["selection.service",{"_index":1120,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{}}}],["selection.service.ts",{"_index":206,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"coverage.html":{}}}],["selection.service.ts:10",{"_index":218,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["selection.service.ts:11",{"_index":217,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["selection.service.ts:13",{"_index":220,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["selection.service.ts:29",{"_index":214,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["selection.service.ts:33",{"_index":213,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["selects",{"_index":906,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["send",{"_index":2165,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["senden",{"_index":1623,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["sending",{"_index":2123,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["sendmessage",{"_index":3589,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["sends",{"_index":614,"title":{},"body":{"components/AddreactionComponent.html":{},"components/MessageEditComponent.html":{}}}],["seperation",{"_index":1996,"title":{},"body":{"components/LoginComponent.html":{}}}],["sepia(100",{"_index":3206,"title":{},"body":{"components/SidenavComponent.html":{}}}],["serif",{"_index":1277,"title":{},"body":{"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["serve",{"_index":3812,"title":{},"body":{"index.html":{}}}],["server",{"_index":3810,"title":{},"body":{"index.html":{}}}],["servern",{"_index":2843,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["service",{"_index":3177,"title":{},"body":{"components/SidenavComponent.html":{}}}],["service.service",{"_index":1125,"title":{},"body":{"components/ChatComponent.html":{},"directives/IfChangedDirective.html":{},"components/ThreadComponent.html":{}}}],["service.service.ts",{"_index":1833,"title":{},"body":{"injectables/IfChangedService.html":{},"coverage.html":{}}}],["service.service.ts:12",{"_index":1837,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["service.service.ts:5",{"_index":1841,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["service.service.ts:6",{"_index":1840,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["service.service.ts:8",{"_index":1839,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["services",{"_index":1402,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["session",{"_index":3249,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["set",{"_index":228,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelUsersComponent.html":{},"directives/IfChangedDirective.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["set(userstatusdatabaseref",{"_index":3697,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["setactiveselection(selection",{"_index":219,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["setappifchanged(value",{"_index":1820,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["setcurrentlocation(value",{"_index":296,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["setcurrentuser",{"_index":3479,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setcurrentuser(userdata",{"_index":3511,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setcurrentuserstatus",{"_index":3480,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setcurrentuserstatus(status",{"_index":3513,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setdoc",{"_index":2236,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["setdoc(doc(this.firestore",{"_index":3550,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setdoc(docinstance",{"_index":2254,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["setgetlasttime(value",{"_index":1822,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["setinterval",{"_index":1344,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["setisopened(value",{"_index":634,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["setmessage(value",{"_index":2137,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["setmessagetime(value",{"_index":1372,"title":{},"body":{"components/DateLineComponent.html":{}}}],["setpreviousvalue",{"_index":1836,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["setpreviousvalue(value",{"_index":1838,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["setreaction(value",{"_index":3000,"title":{},"body":{"components/ReactionComponent.html":{}}}],["setrefchannel(value",{"_index":1528,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["sets",{"_index":1419,"title":{},"body":{"components/EditChannelComponent.html":{},"components/MessageEditComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["setter",{"_index":640,"title":{},"body":{"components/AddreactionComponent.html":{},"directives/IfChangedDirective.html":{}}}],["settimeout",{"_index":101,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/IntroComponent.html":{},"injectables/NotificationService.html":{}}}],["setting",{"_index":3102,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["settings",{"_index":3370,"title":{},"body":{"components/ThreadComponent.html":{}}}],["setuid(value",{"_index":1327,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["setuidtocurrentuser",{"_index":3481,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setuidtocurrentuser(uid",{"_index":3517,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["setwindowsize",{"_index":3709,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["shadow",{"_index":962,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["shift",{"_index":1295,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["short",{"_index":1736,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["shorted",{"_index":1516,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["shorten",{"_index":1519,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["shortened",{"_index":1737,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["show",{"_index":185,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["showavatar",{"_index":3238,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["showchannel",{"_index":3158,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["showchannelbackground",{"_index":3161,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["showchannelheader",{"_index":3160,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["showchannels",{"_index":3171,"title":{},"body":{"components/SidenavComponent.html":{}}}],["showchanneluserscomponent",{"_index":184,"title":{"components/ShowChannelUsersComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["showeditmessageoutput",{"_index":2108,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["showemojibar",{"_index":2099,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["showemojilist",{"_index":3328,"title":{},"body":{"components/ThreadComponent.html":{}}}],["showforgotpassword",{"_index":3239,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["showheadermenu",{"_index":1714,"title":{},"body":{"components/HeaderComponent.html":{}}}],["showing",{"_index":3154,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["showlogin",{"_index":3240,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["showmessageoptions",{"_index":3401,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showmessagereactions",{"_index":3402,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["showmessages",{"_index":3172,"title":{},"body":{"components/SidenavComponent.html":{}}}],["showpasswordimage",{"_index":1925,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["showprofil",{"_index":1719,"title":{},"body":{"components/HeaderComponent.html":{}}}],["showregister",{"_index":3241,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["shows",{"_index":3152,"title":{},"body":{"components/ShowChannelUsersComponent.html":{},"components/StartscreenComponent.html":{},"components/ToolbarComponent.html":{}}}],["showsidenavmobile",{"_index":2009,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["showtoolbar",{"_index":3329,"title":{},"body":{"components/ThreadComponent.html":{}}}],["sich",{"_index":2374,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["sicherheitsgr&uuml;nden",{"_index":2766,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsgründen",{"_index":2962,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitsl&uuml;cken",{"_index":2536,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sicherheitslücken",{"_index":2910,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sidebar",{"_index":2055,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["sidenav",{"_index":2025,"title":{},"body":{"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["sidenav'},{'name",{"_index":187,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["sidenav.component.html",{"_index":3165,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss",{"_index":3192,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenav.component.scss,../../../styles.scss",{"_index":3164,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavcomponent",{"_index":186,"title":{"components/SidenavComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sidenavheader",{"_index":3202,"title":{},"body":{"components/SidenavComponent.html":{}}}],["sidenavopen",{"_index":2010,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["sie",{"_index":104,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["signal",{"_index":1584,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["simplechanges",{"_index":1374,"title":{},"body":{"components/DateLineComponent.html":{}}}],["sind",{"_index":2337,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sinne",{"_index":2490,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["situation",{"_index":2666,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["size",{"_index":453,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["size.service",{"_index":1433,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{}}}],["size.service.ts",{"_index":3707,"title":{},"body":{"injectables/WindowSizeService.html":{},"coverage.html":{}}}],["size.service.ts:10",{"_index":3710,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["size.service.ts:19",{"_index":3711,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["size.service.ts:23",{"_index":3712,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["size.service.ts:9",{"_index":3714,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["sizing",{"_index":980,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["slide",{"_index":996,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/IntroComponent.html":{}}}],["slidelogo",{"_index":1898,"title":{},"body":{"components/IntroComponent.html":{}}}],["snapshot.exists",{"_index":3701,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["snapshot.val().status",{"_index":3702,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["sobald",{"_index":2397,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sofern",{"_index":2476,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solange",{"_index":2746,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solcher",{"_index":2696,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["solid",{"_index":440,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["soll",{"_index":322,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["sollten",{"_index":358,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["sonderzeichen",{"_index":3089,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["sonstige",{"_index":2636,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sortbyusersbyname",{"_index":3482,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["sortbyusersbyname(users",{"_index":3519,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"index.html":{}}}],["soweit",{"_index":2482,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sowie",{"_index":2440,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["space",{"_index":394,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["spacebtwn",{"_index":1475,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["spam",{"_index":2803,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["span",{"_index":1907,"title":{},"body":{"components/IntroComponent.html":{}}}],["specific",{"_index":893,"title":{},"body":{"components/AvatarChooseComponent.html":{},"injectables/MessageFirebaseService.html":{}}}],["specified",{"_index":1323,"title":{},"body":{"components/ChatViewComponent.html":{},"components/EditChannelUsersComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"injectables/StorageFirebaseService.html":{}}}],["speicherdauer",{"_index":2566,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["speichern",{"_index":1455,"title":{},"body":{"components/EditChannelComponent.html":{},"components/MessageEditComponent.html":{},"components/UserProfilComponent.html":{}}}],["speicherung",{"_index":2483,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["speziellere",{"_index":2569,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["src",{"_index":1258,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["src/.../auth",{"_index":3848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":3849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/action",{"_index":10,"title":{},"body":{"components/ActionHandlerComponent.html":{},"coverage.html":{}}}],["src/app/app",{"_index":855,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":711,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":716,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/directives/if",{"_index":1793,"title":{},"body":{"directives/IfChangedDirective.html":{},"coverage.html":{}}}],["src/app/mainscreen/channel/add",{"_index":236,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/channel/channel.component.ts",{"_index":3727,"title":{},"body":{"coverage.html":{}}}],["src/app/mainscreen/channel/edit",{"_index":1381,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/channel/show",{"_index":3146,"title":{},"body":{"components/ShowChannelUsersComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/chat/chat.component.ts",{"_index":1058,"title":{},"body":{"components/ChatComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:111",{"_index":1095,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:22",{"_index":1106,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:23",{"_index":1105,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:24",{"_index":1104,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:26",{"_index":1101,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:27",{"_index":1109,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:29",{"_index":1111,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:31",{"_index":1108,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:32",{"_index":1107,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:33",{"_index":1080,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:36",{"_index":1102,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:37",{"_index":1115,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:40",{"_index":1103,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:46",{"_index":1089,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:68",{"_index":1091,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:85",{"_index":1098,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/chat/chat.component.ts:97",{"_index":1082,"title":{},"body":{"components/ChatComponent.html":{}}}],["src/app/mainscreen/empty",{"_index":1553,"title":{},"body":{"components/EmptyWindowComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/header/header.component.ts",{"_index":1711,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/header/header.component.ts:110",{"_index":1734,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:119",{"_index":1745,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:25",{"_index":1752,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:27",{"_index":1751,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:28",{"_index":1727,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:29",{"_index":1728,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:30",{"_index":1729,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:32",{"_index":1730,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:34",{"_index":1726,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:37",{"_index":1753,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:38",{"_index":1750,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:50",{"_index":1740,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:62",{"_index":1738,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:71",{"_index":1749,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:79",{"_index":1741,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:88",{"_index":1731,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/header/header.component.ts:99",{"_index":1732,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts",{"_index":2003,"title":{},"body":{"components/MainscreenComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:20",{"_index":2027,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:21",{"_index":2032,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:22",{"_index":2031,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:23",{"_index":2034,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:24",{"_index":2035,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:25",{"_index":2030,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:26",{"_index":2037,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:27",{"_index":2018,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:41",{"_index":2028,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:42",{"_index":2036,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:43",{"_index":2033,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:45",{"_index":2029,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:47",{"_index":2026,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:53",{"_index":2020,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:71",{"_index":2023,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/mainscreen.component.ts:79",{"_index":2019,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts",{"_index":583,"title":{},"body":{"components/AddreactionComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:10",{"_index":629,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:11",{"_index":603,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:12",{"_index":631,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:14",{"_index":607,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:15",{"_index":600,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:20",{"_index":605,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:28",{"_index":620,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:38",{"_index":633,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:52",{"_index":609,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/addreaction/addreaction.component.ts:62",{"_index":621,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["src/app/mainscreen/message/date",{"_index":1361,"title":{},"body":{"components/DateLineComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/message/message",{"_index":2091,"title":{},"body":{"components/MessageEditComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/message/message.component.ts",{"_index":3745,"title":{},"body":{"coverage.html":{}}}],["src/app/mainscreen/message/reaction/reaction.component.ts",{"_index":2990,"title":{},"body":{"components/ReactionComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/message/reaction/reaction.component.ts:10",{"_index":2999,"title":{},"body":{"components/ReactionComponent.html":{}}}],["src/app/mainscreen/message/reaction/reaction.component.ts:11",{"_index":2998,"title":{},"body":{"components/ReactionComponent.html":{}}}],["src/app/mainscreen/message/reaction/reaction.component.ts:14",{"_index":2994,"title":{},"body":{"components/ReactionComponent.html":{}}}],["src/app/mainscreen/message/reaction/reaction.component.ts:19",{"_index":2995,"title":{},"body":{"components/ReactionComponent.html":{}}}],["src/app/mainscreen/message/reaction/reaction.component.ts:29",{"_index":2996,"title":{},"body":{"components/ReactionComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts",{"_index":3323,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:18",{"_index":3356,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:19",{"_index":3357,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:20",{"_index":3338,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:23",{"_index":3354,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:24",{"_index":3358,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:25",{"_index":3359,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:26",{"_index":3355,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:34",{"_index":3343,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:42",{"_index":3352,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:50",{"_index":3339,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:59",{"_index":3346,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:69",{"_index":3351,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:80",{"_index":3341,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:90",{"_index":3340,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/thread/thread.component.ts:98",{"_index":3348,"title":{},"body":{"components/ThreadComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts",{"_index":3398,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:109",{"_index":3439,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:129",{"_index":3430,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:14",{"_index":3414,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:15",{"_index":3415,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:16",{"_index":3416,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:17",{"_index":3442,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:18",{"_index":3443,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:19",{"_index":3418,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:20",{"_index":3417,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:21",{"_index":3413,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:25",{"_index":3444,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:33",{"_index":3425,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:42",{"_index":3423,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:57",{"_index":3419,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:76",{"_index":3437,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/message/toolbar/toolbar.component.ts:93",{"_index":3428,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/mainscreen/searchbar/searchbar.component.ts",{"_index":3753,"title":{},"body":{"coverage.html":{}}}],["src/app/mainscreen/sidenav/chat",{"_index":1304,"title":{},"body":{"components/ChatViewComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts",{"_index":3163,"title":{},"body":{"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:100",{"_index":3180,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:110",{"_index":3175,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:19",{"_index":3189,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:20",{"_index":3190,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:21",{"_index":3186,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:23",{"_index":3188,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:24",{"_index":3174,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:37",{"_index":3187,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:38",{"_index":3184,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:39",{"_index":3185,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:40",{"_index":3191,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:50",{"_index":3176,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:67",{"_index":3181,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:79",{"_index":3183,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/sidenav/sidenav.component.ts:91",{"_index":3178,"title":{},"body":{"components/SidenavComponent.html":{}}}],["src/app/mainscreen/user",{"_index":3575,"title":{},"body":{"components/UserProfilComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/avatar",{"_index":867,"title":{},"body":{"components/AvatarChooseComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/forgot",{"_index":1568,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/imprint/imprint.component.ts",{"_index":1843,"title":{},"body":{"components/ImprintComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/imprint/imprint.component.ts:10",{"_index":1849,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/startscreen/imprint/imprint.component.ts:18",{"_index":1850,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/startscreen/intro/intro.component.ts",{"_index":1861,"title":{},"body":{"components/IntroComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/intro/intro.component.ts:17",{"_index":1875,"title":{},"body":{"components/IntroComponent.html":{}}}],["src/app/startscreen/intro/intro.component.ts:18",{"_index":1874,"title":{},"body":{"components/IntroComponent.html":{}}}],["src/app/startscreen/intro/intro.component.ts:19",{"_index":1876,"title":{},"body":{"components/IntroComponent.html":{}}}],["src/app/startscreen/intro/intro.component.ts:27",{"_index":1871,"title":{},"body":{"components/IntroComponent.html":{}}}],["src/app/startscreen/login/login.component.ts",{"_index":1914,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/login/login.component.ts:108",{"_index":1946,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:13",{"_index":1932,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:21",{"_index":1943,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:25",{"_index":1952,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:26",{"_index":1961,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:27",{"_index":1962,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:28",{"_index":1963,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:29",{"_index":1966,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:30",{"_index":1960,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:32",{"_index":1956,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:33",{"_index":1958,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:35",{"_index":1951,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:43",{"_index":1964,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:44",{"_index":1931,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:48",{"_index":1954,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:56",{"_index":1941,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:66",{"_index":1935,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:89",{"_index":1933,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/login/login.component.ts:99",{"_index":1938,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/startscreen/privacy",{"_index":2310,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/register/register.component.ts",{"_index":3009,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/register/register.component.ts:103",{"_index":3035,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:11",{"_index":3021,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:19",{"_index":3022,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:21",{"_index":3050,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:22",{"_index":3049,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:23",{"_index":3051,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:24",{"_index":3053,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:25",{"_index":3052,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:26",{"_index":3056,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:27",{"_index":3048,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:28",{"_index":3041,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:29",{"_index":3055,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:30",{"_index":3054,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:32",{"_index":3047,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:57",{"_index":3023,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:69",{"_index":3030,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:82",{"_index":3025,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/register/register.component.ts:92",{"_index":3040,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/startscreen/reset",{"_index":3095,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/startscreen.component.ts",{"_index":3235,"title":{},"body":{"components/StartscreenComponent.html":{},"coverage.html":{}}}],["src/app/startscreen/startscreen.component.ts:13",{"_index":3255,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:14",{"_index":3252,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:15",{"_index":3253,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:16",{"_index":3254,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:17",{"_index":3256,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:18",{"_index":3242,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:33",{"_index":3247,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:44",{"_index":3245,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:54",{"_index":3246,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:64",{"_index":3243,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:74",{"_index":3244,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/app/startscreen/startscreen.component.ts:84",{"_index":3251,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["src/environments/environment.ts",{"_index":3769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guard/auth",{"_index":859,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/answer.class.ts",{"_index":677,"title":{},"body":{"classes/Answer.html":{},"coverage.html":{}}}],["src/models/answer.class.ts:10",{"_index":684,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:24",{"_index":694,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:3",{"_index":692,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:4",{"_index":691,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:5",{"_index":693,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:6",{"_index":687,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:7",{"_index":688,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:8",{"_index":689,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/answer.class.ts:9",{"_index":690,"title":{},"body":{"classes/Answer.html":{}}}],["src/models/channel.class",{"_index":223,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["src/models/channel.class.ts",{"_index":1018,"title":{},"body":{"classes/Channel.html":{},"coverage.html":{}}}],["src/models/channel.class.ts:4",{"_index":1027,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:5",{"_index":1026,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:6",{"_index":1028,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/channel.class.ts:7",{"_index":1024,"title":{},"body":{"classes/Channel.html":{}}}],["src/models/chat.class",{"_index":224,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/ChatComponent.html":{},"components/UserProfilComponent.html":{}}}],["src/models/chat.class.ts",{"_index":1048,"title":{},"body":{"classes/Chat.html":{},"coverage.html":{}}}],["src/models/chat.class.ts:15",{"_index":1052,"title":{},"body":{"classes/Chat.html":{}}}],["src/models/chat.class.ts:5",{"_index":1050,"title":{},"body":{"classes/Chat.html":{}}}],["src/models/chat.class.ts:6",{"_index":1051,"title":{},"body":{"classes/Chat.html":{}}}],["src/models/chat.class.ts:7",{"_index":1049,"title":{},"body":{"classes/Chat.html":{}}}],["src/models/message.class",{"_index":1118,"title":{},"body":{"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{}}}],["src/models/message.class.ts",{"_index":2061,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/models/message.class.ts:10",{"_index":2070,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:11",{"_index":2073,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:12",{"_index":2066,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:26",{"_index":2075,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:4",{"_index":2072,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:5",{"_index":2069,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:6",{"_index":2074,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:7",{"_index":2067,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:8",{"_index":2068,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.class.ts:9",{"_index":2071,"title":{},"body":{"classes/Message.html":{}}}],["src/models/reaction.class",{"_index":2241,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"components/ReactionComponent.html":{}}}],["src/models/reaction.class.ts",{"_index":2981,"title":{},"body":{"classes/Reaction.html":{},"coverage.html":{}}}],["src/models/reaction.class.ts:14",{"_index":2986,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:2",{"_index":2983,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:3",{"_index":2984,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:4",{"_index":2985,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/reaction.class.ts:5",{"_index":2982,"title":{},"body":{"classes/Reaction.html":{}}}],["src/models/thread.class.ts",{"_index":3316,"title":{},"body":{"classes/Thread.html":{},"coverage.html":{}}}],["src/models/thread.class.ts:4",{"_index":3318,"title":{},"body":{"classes/Thread.html":{}}}],["src/models/user.class",{"_index":1119,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{}}}],["src/models/user.class.ts",{"_index":3455,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/models/user.class.ts:2",{"_index":3461,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:20",{"_index":3463,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:3",{"_index":3460,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:4",{"_index":3462,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:5",{"_index":3457,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:6",{"_index":3458,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:7",{"_index":3459,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.class.ts:8",{"_index":3456,"title":{},"body":{"classes/User.html":{}}}],["src/services/active",{"_index":205,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"coverage.html":{}}}],["src/services/auth",{"_index":72,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["src/services/channel",{"_index":299,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/services/chat",{"_index":1121,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["src/services/format.service",{"_index":1122,"title":{},"body":{"components/ChatComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/HeaderComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["src/services/format.service.ts",{"_index":1649,"title":{},"body":{"injectables/FormatService.html":{},"coverage.html":{}}}],["src/services/format.service.ts:14",{"_index":1657,"title":{},"body":{"injectables/FormatService.html":{}}}],["src/services/format.service.ts:22",{"_index":1666,"title":{},"body":{"injectables/FormatService.html":{}}}],["src/services/format.service.ts:29",{"_index":1664,"title":{},"body":{"injectables/FormatService.html":{}}}],["src/services/format.service.ts:47",{"_index":1655,"title":{},"body":{"injectables/FormatService.html":{}}}],["src/services/generate",{"_index":1701,"title":{},"body":{"injectables/GenerateIdService.html":{},"coverage.html":{}}}],["src/services/if",{"_index":1123,"title":{},"body":{"components/ChatComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/services/message",{"_index":2138,"title":{},"body":{"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/services/notification.service",{"_index":928,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["src/services/notification.service.ts",{"_index":2278,"title":{},"body":{"injectables/NotificationService.html":{},"coverage.html":{}}}],["src/services/notification.service.ts:10",{"_index":2281,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/services/notification.service.ts:26",{"_index":2284,"title":{},"body":{"injectables/NotificationService.html":{}}}],["src/services/storage",{"_index":927,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/MessageEditComponent.html":{},"injectables/StorageFirebaseService.html":{},"coverage.html":{}}}],["src/services/thread",{"_index":2038,"title":{},"body":{"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/services/user",{"_index":533,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"coverage.html":{}}}],["src/services/window",{"_index":1432,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{}}}],["ssl",{"_index":2761,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["standardschrift",{"_index":2854,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["star",{"_index":406,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["start",{"_index":382,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EmptyWindowComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["started",{"_index":3804,"title":{"index.html":{}},"body":{}}],["startscreen",{"_index":3141,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["startscreen'},{'name",{"_index":189,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["startscreen.component.html",{"_index":3237,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["startscreen.component.scss",{"_index":3236,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["startscreen/avatar",{"_index":790,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/forgot",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/imprint/imprint.component",{"_index":785,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/intro/intro.component",{"_index":831,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/login/login.component",{"_index":764,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/privacy",{"_index":786,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/register/register.component",{"_index":765,"title":{},"body":{"modules/AppModule.html":{}}}],["startscreen/reset",{"_index":820,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["startscreen/startscreen.component",{"_index":762,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["startscreencomponent",{"_index":188,"title":{"components/StartscreenComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["state",{"_index":3851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":3720,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":530,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{}}}],["statt",{"_index":1167,"title":{},"body":{"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["status",{"_index":1319,"title":{},"body":{"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{},"coverage.html":{}}}],["status:string",{"_index":3694,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["statusfont",{"_index":1787,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["statusicon",{"_index":1786,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["steht",{"_index":2435,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stelle",{"_index":2543,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stelle&ldquo",{"_index":2363,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["stellen",{"_index":2624,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuer",{"_index":2581,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuerbeh&ouml;rden",{"_index":2635,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["steuerbehörden",{"_index":2930,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["sticky",{"_index":1206,"title":{},"body":{"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["stimme",{"_index":3091,"title":{},"body":{"components/RegisterComponent.html":{}}}],["stoppropagation",{"_index":1720,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["stoppropagation(event",{"_index":1744,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["stoppropagation(event:event",{"_index":1766,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["storage",{"_index":3271,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["storagebucket",{"_index":3860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storagefirebaseservice",{"_index":881,"title":{"injectables/StorageFirebaseService.html":{}},"body":{"components/AvatarChooseComponent.html":{},"components/MessageEditComponent.html":{},"injectables/StorageFirebaseService.html":{},"coverage.html":{}}}],["storageref",{"_index":3280,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["storagereference",{"_index":3277,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["storageservice",{"_index":884,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/MessageEditComponent.html":{}}}],["store",{"_index":3603,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["stored",{"_index":1805,"title":{},"body":{"directives/IfChangedDirective.html":{},"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{},"index.html":{}}}],["stores/saves",{"_index":1521,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["str",{"_index":664,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["string",{"_index":54,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["string(date.gethours()).padstart(2",{"_index":1677,"title":{},"body":{"injectables/FormatService.html":{}}}],["string(date.getminutes()).padstart(2",{"_index":1684,"title":{},"body":{"injectables/FormatService.html":{}}}],["string=\"default",{"_index":2295,"title":{},"body":{"injectables/NotificationService.html":{}}}],["string=\"shift",{"_index":2296,"title":{},"body":{"injectables/NotificationService.html":{}}}],["string=string.slice(0,39",{"_index":1699,"title":{},"body":{"injectables/FormatService.html":{}}}],["stringtoformat",{"_index":1518,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["stringtoshort",{"_index":1735,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["style",{"_index":1264,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["style=\"default",{"_index":2292,"title":{},"body":{"injectables/NotificationService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["styles.scss",{"_index":1128,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["styleurls",{"_index":20,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["subject",{"_index":602,"title":{},"body":{"components/AddreactionComponent.html":{},"injectables/UserProfileService.html":{},"injectables/WindowSizeService.html":{}}}],["submission",{"_index":3036,"title":{},"body":{"components/RegisterComponent.html":{}}}],["submit",{"_index":2164,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["submits",{"_index":897,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["submitted",{"_index":901,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["subscribe",{"_index":2021,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["subscription",{"_index":1110,"title":{},"body":{"components/ChatComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["subsribe",{"_index":1403,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["substring",{"_index":3494,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["success",{"_index":999,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["successful",{"_index":1595,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["successfully",{"_index":2204,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{}}}],["super(data",{"_index":1036,"title":{},"body":{"classes/Channel.html":{},"classes/Thread.html":{}}}],["support",{"_index":3841,"title":{},"body":{"modules.html":{}}}],["surface.mdc",{"_index":420,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["svg",{"_index":661,"title":{},"body":{"components/AddreactionComponent.html":{},"modules.html":{}}}],["switch",{"_index":90,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["switching",{"_index":1405,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["symbol",{"_index":2781,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["syncmail",{"_index":3483,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["syncmail(email",{"_index":3521,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["systeme",{"_index":2386,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["table",{"_index":3786,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3785,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":2291,"title":{},"body":{"injectables/NotificationService.html":{},"injectables/UserFirebaseService.html":{}}}],["team",{"_index":354,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["technisch",{"_index":2726,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["technische",{"_index":2391,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["teil",{"_index":2400,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["teilnehmer",{"_index":1457,"title":{},"body":{"components/EditChannelComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["teilweise",{"_index":2627,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["telefax",{"_index":2806,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["telefon",{"_index":2548,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["templateref",{"_index":1797,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["templateurl",{"_index":22,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["test",{"_index":1113,"title":{},"body":{"components/ChatComponent.html":{},"index.html":{}}}],["testdata",{"_index":1072,"title":{},"body":{"components/ChatComponent.html":{}}}],["testing",{"_index":3836,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3827,"title":{},"body":{"index.html":{}}}],["text",{"_index":426,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{},"components/UserProfilComponent.html":{}}}],["textarea",{"_index":1280,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["texte",{"_index":2839,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["thema",{"_index":2344,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["themenbezogen",{"_index":359,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["then((loadeduser",{"_index":1332,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["then((result",{"_index":1337,"title":{},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["then((user",{"_index":1443,"title":{},"body":{"components/EditChannelComponent.html":{},"components/SidenavComponent.html":{}}}],["this._isopened",{"_index":642,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["this._message",{"_index":2140,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this._message.content",{"_index":2154,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this._message.filename",{"_index":2157,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this._message.filesrc",{"_index":2155,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this._message.id",{"_index":2148,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this._message.path",{"_index":2141,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.activeselectionobject",{"_index":234,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["this.activeselectionservice.activeselection",{"_index":1762,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["this.activeselectionservice.getactiveselectionobject",{"_index":1135,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.activeselectiontype",{"_index":233,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["this.addchannelform",{"_index":306,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["this.adduserevent.emit",{"_index":1451,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.animationlogo",{"_index":1879,"title":{},"body":{"components/IntroComponent.html":{}}}],["this.animationstart",{"_index":1878,"title":{},"body":{"components/IntroComponent.html":{}}}],["this.answer",{"_index":709,"title":{},"body":{"classes/Answer.html":{}}}],["this.authservice",{"_index":1979,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.applyactioncode(oobcode",{"_index":89,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.authservice.confirmpasswordreset(oobcode",{"_index":3137,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.authservice.geterrormessage(errorcode",{"_index":1977,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.googleauth",{"_index":1982,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.isloggedin",{"_index":1969,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.login(this.contactform.value.emailinput",{"_index":1972,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.loginexprired",{"_index":3258,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["this.authservice.logout",{"_index":1758,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{}}}],["this.authservice.register(emailinputvalue",{"_index":3070,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authservice.resetpassword(this.email",{"_index":1609,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.authservice.userdata.email",{"_index":3628,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.autorid",{"_index":2079,"title":{},"body":{"classes/Message.html":{}}}],["this.avatar",{"_index":701,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["this.avatarsrc",{"_index":2081,"title":{},"body":{"classes/Message.html":{}}}],["this.channel",{"_index":542,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{}}}],["this.channel.users",{"_index":547,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["this.channel.users.push(this.userservice.currentuser.id",{"_index":551,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["this.channelcopy",{"_index":1531,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.channelcreatorname",{"_index":1444,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.channeldescription",{"_index":1039,"title":{},"body":{"classes/Channel.html":{}}}],["this.channelname",{"_index":1037,"title":{},"body":{"classes/Channel.html":{}}}],["this.channels",{"_index":704,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["this.channelservice.leaveselectedchannel",{"_index":1446,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.channelservice.loadallchannelusers",{"_index":1537,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.channelservice.selectedchannel",{"_index":1437,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{}}}],["this.channelservice.selectedchannel.channeldescription",{"_index":1441,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.channelservice.selectedchannel.channelname",{"_index":1439,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.channelservice.selectedchannelid",{"_index":1760,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.channelservice.updatechannel(this.channelcopy",{"_index":1536,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.channelservice.updatechannel(this.channelservice.selectedchannel",{"_index":1448,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.channelservice.useroncurrentchannel",{"_index":1452,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.chatpartner",{"_index":1147,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chats",{"_index":706,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["this.chatservice.getchatwithuser(this.user.id",{"_index":3639,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.chatservice.loadchatmessages(newselectedchat.id",{"_index":1143,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chatservice.loadedchats.unshift(chat",{"_index":3644,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.chatservice.selectchat(chat.id",{"_index":3645,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.chatservice.selectchat(userschat.id",{"_index":3641,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.chatservice.selectedchat$.subscribe((chat",{"_index":1139,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.chatservice.selectedchatid",{"_index":1761,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.chatservice.update(chat).then((chat",{"_index":3643,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.checkifuserisselected(newchannel",{"_index":1533,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.checkstatus",{"_index":1340,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["this.clicklistener",{"_index":643,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["this.close",{"_index":1447,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{}}}],["this.closeavatarview.emit",{"_index":930,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["this.closedialog",{"_index":346,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["this.closeeditmode",{"_index":2145,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.closeemojibar",{"_index":2153,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.closeemptyviewevent.emit",{"_index":1763,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.closeevent.emit",{"_index":1445,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["this.closeevent.emit(\"editchanneluser",{"_index":3157,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["this.closeforgotpassword",{"_index":1613,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.closeforgotpasswordview.emit",{"_index":1608,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.closeimprintview.emit",{"_index":1851,"title":{},"body":{"components/ImprintComponent.html":{}}}],["this.closeprivacypolicyview.emit",{"_index":2319,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["this.closeregister",{"_index":3074,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.closeregisterview.emit",{"_index":3057,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.closethread",{"_index":3365,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.closeuserprofilsubject.asobservable",{"_index":3674,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.closeuserprofilsubject.next",{"_index":3681,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.contactform",{"_index":3116,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.contactform.get('emailinput')?.value",{"_index":3064,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.contactform.get('nameinput')?.value",{"_index":3062,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.contactform.get('passwordinput",{"_index":3129,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.contactform.get('passwordinput')!.value",{"_index":3136,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.contactform.get('passwordinput')?.value",{"_index":3066,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.contactform.get('passwordrepeatinput",{"_index":3131,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.contactform.invalid",{"_index":1607,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.contactform.valid",{"_index":3135,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.contactform.value.emailinput",{"_index":1970,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.contactform.value.passwordinput",{"_index":1971,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.content",{"_index":708,"title":{},"body":{"classes/Answer.html":{},"classes/Message.html":{}}}],["this.count",{"_index":3004,"title":{},"body":{"components/ReactionComponent.html":{}}}],["this.createchat",{"_index":3642,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.creatorofchannel",{"_index":1041,"title":{},"body":{"classes/Channel.html":{}}}],["this.currentauthmail",{"_index":3627,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.currentuser",{"_index":3193,"title":{},"body":{"components/SidenavComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["this.currentuser.mail",{"_index":3560,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.currentuser.status",{"_index":3568,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.currentuserinput",{"_index":3629,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.d_none",{"_index":1881,"title":{},"body":{"components/IntroComponent.html":{}}}],["this.deletemessageoutput.emit(true",{"_index":3446,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.dialog.open(addchanneldialogcomponent",{"_index":3196,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.dialog.open(adduserdialogcomponent",{"_index":314,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["this.dialogref.close",{"_index":349,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{}}}],["this.editchanneldescription",{"_index":1450,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.editchannelname",{"_index":1449,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.editmessageoutput.emit(true",{"_index":3445,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.edituser",{"_index":3649,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.edituserform.get(\"emailinput\")?.value",{"_index":3631,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.edituserform.patchvalue",{"_index":3624,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.edituserform.valid",{"_index":3648,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.editusermode",{"_index":3633,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.el.nativeelement.queryselector('.picker",{"_index":647,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["this.emailsubmitted",{"_index":1610,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.emoji",{"_index":3002,"title":{},"body":{"components/ReactionComponent.html":{}}}],["this.emojiinput$?.next(event.emoji.native",{"_index":651,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["this.emojiselectedoutput.emit(\"noselection",{"_index":650,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["this.emojiselectedoutput.emit(selectedemoji",{"_index":654,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.emojiselectedoutput.emit(this.emoji",{"_index":3007,"title":{},"body":{"components/ReactionComponent.html":{}}}],["this.fb.group",{"_index":307,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["this.filename",{"_index":2087,"title":{},"body":{"classes/Message.html":{}}}],["this.filesrc",{"_index":2085,"title":{},"body":{"classes/Message.html":{}}}],["this.finishedloading",{"_index":3543,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.firebasechannel.updatechannel(this.channel).then",{"_index":550,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["this.forgotpasswordlinkclick.emit",{"_index":1967,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formatdatetodmy(new",{"_index":1694,"title":{},"body":{"injectables/FormatService.html":{}}}],["this.formatservice.cutstrlen(stringtoformat",{"_index":1543,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.formatservice.cutstrlen(stringtoshort",{"_index":1765,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["this.formatservice.formatdatetodmy(new",{"_index":1152,"title":{},"body":{"components/ChatComponent.html":{},"components/DateLineComponent.html":{}}}],["this.formbuilder.group",{"_index":3117,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.fullname",{"_index":697,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["this.getdownloadurl(storageref",{"_index":3302,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["this.getinput",{"_index":303,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["this.getstatus",{"_index":3623,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.getuserbyuid(uid",{"_index":3558,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.guestloginpassword",{"_index":1981,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hideoptions(event",{"_index":3450,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.hidereactions(event",{"_index":3449,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.id",{"_index":695,"title":{},"body":{"classes/Answer.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["this.idservice.generaterandomid(20",{"_index":2252,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["this.ifchangedservice.getpreviousvalue",{"_index":1827,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["this.ifchangedservice.setpreviousvalue(value",{"_index":1830,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["this.imprint",{"_index":3126,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["this.initchat",{"_index":1129,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.iscurrentuser",{"_index":3621,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.ispasswordvisible",{"_index":1983,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isuserselected",{"_index":1532,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.load",{"_index":3573,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.loadanswers(message",{"_index":3390,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["this.loadchat(this.selectedchat",{"_index":1137,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.loadedanswers",{"_index":2269,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["this.loadedanswers.push(answer",{"_index":2273,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["this.loadedreactions",{"_index":2261,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["this.loadedreactions.push(reaction",{"_index":2267,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["this.loadedusers",{"_index":3542,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.loadedusers.find(user",{"_index":3552,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.loadedusers.push(user",{"_index":3545,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.loadedusers[0",{"_index":3574,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.location",{"_index":305,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["this.loginerrormessage",{"_index":1976,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginfailed",{"_index":1978,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mail",{"_index":699,"title":{},"body":{"classes/Answer.html":{},"classes/User.html":{}}}],["this.message",{"_index":2151,"title":{},"body":{"components/MessageEditComponent.html":{},"injectables/ThreadFirebaseService.html":{}}}],["this.messagepath",{"_index":1144,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.messages",{"_index":1046,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Thread.html":{}}}],["this.messageservice.createmessage(this._message.path",{"_index":2142,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.messagetimestring=value",{"_index":1376,"title":{},"body":{"components/DateLineComponent.html":{}}}],["this.name",{"_index":2987,"title":{},"body":{"classes/Reaction.html":{}}}],["this.namevalidator",{"_index":3617,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.newchanneldescription",{"_index":1440,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.newchannelname",{"_index":1438,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.notificationservice.rendernotification(\"benutzer",{"_index":1538,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["this.notificationservice.rendernotification(\"e",{"_index":1611,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.notificationservice.rendernotification(\"konto",{"_index":944,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["this.oobcode",{"_index":3122,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.openuserprofilsubject.asobservable",{"_index":3676,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.openuserprofilsubject.next(user",{"_index":3680,"title":{},"body":{"injectables/UserProfileService.html":{}}}],["this.path",{"_index":2083,"title":{},"body":{"classes/Message.html":{},"classes/Reaction.html":{},"injectables/ThreadFirebaseService.html":{}}}],["this.previousvalue",{"_index":1842,"title":{},"body":{"injectables/IfChangedService.html":{}}}],["this.privacypolicy",{"_index":3127,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["this.reactions",{"_index":2089,"title":{},"body":{"classes/Message.html":{}}}],["this.refchannelid",{"_index":3320,"title":{},"body":{"classes/Thread.html":{}}}],["this.refreshintervall",{"_index":1349,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["this.registrationerrormessage",{"_index":3076,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registrationfailed",{"_index":3077,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registuser.tojson",{"_index":3551,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.renderer.listen('document",{"_index":644,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["this.route.queryparammap.subscribe(queryparams",{"_index":77,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["this.router.navigate",{"_index":3138,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['index",{"_index":102,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{}}}],["this.router.navigate(['reset",{"_index":86,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["this.router.navigatebyurl('index",{"_index":3259,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["this.selectedchat",{"_index":1136,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.selectedchatsubscription",{"_index":1138,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.selectedchatsubscription.unsubscribe",{"_index":1156,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.selectedoption",{"_index":546,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["this.showavatar",{"_index":3261,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["this.showeditmessageoutput.emit(false",{"_index":2150,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.showemojibar",{"_index":2144,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.showemojilist",{"_index":3362,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.showforgotpassword",{"_index":3263,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["this.showheadermenu",{"_index":1757,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.showlogin",{"_index":3262,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["this.showmessageoptions",{"_index":3448,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.showmessagereactions",{"_index":3447,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.showregister",{"_index":3260,"title":{},"body":{"components/StartscreenComponent.html":{}}}],["this.showsidenavmobile",{"_index":2045,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["this.showtoolbar",{"_index":3363,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.sidenavopen",{"_index":2044,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["this.sortbyusersbyname(this.loadedusers",{"_index":3546,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.status",{"_index":3465,"title":{},"body":{"classes/User.html":{}}}],["this.storageservice.deleteimage(this._message.filesrc",{"_index":2156,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.storageservice.uploadimgfile(file",{"_index":938,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["this.threadservice.message",{"_index":3364,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.threadservice.message=this._message",{"_index":2149,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.threadservice.message?.path+\"/answers",{"_index":3361,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.timestamp",{"_index":1043,"title":{},"body":{"classes/Channel.html":{},"classes/Message.html":{}}}],["this.unpackchannels",{"_index":3194,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.unpackmessages",{"_index":3195,"title":{},"body":{"components/SidenavComponent.html":{}}}],["this.unsubanswers",{"_index":2268,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["this.unsubmessage",{"_index":2277,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["this.unsubmessages",{"_index":2276,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["this.unsubreactions",{"_index":2258,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["this.unsubusers",{"_index":3540,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.update(this.currentuser",{"_index":3561,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.updatecurrentusertofirebase",{"_index":3562,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["this.updatedthreadmsg",{"_index":2143,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["this.uploadandretrieveurl(storageref",{"_index":3308,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["this.uploadfiletostorage(storageref",{"_index":3301,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["this.user",{"_index":1333,"title":{},"body":{"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{}}}],["this.user!.status",{"_index":1338,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["this.user.avatar",{"_index":929,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["this.user.fullname",{"_index":3625,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.user.id",{"_index":1346,"title":{},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["this.user.mail",{"_index":3626,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.user.status",{"_index":3635,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.usermessage",{"_index":91,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["this.userprofileservice.close",{"_index":3634,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.userprofileservice.closeuserprofil$.subscribe",{"_index":2043,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["this.userprofileservice.openuserprofil$.subscribe((user",{"_index":2040,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["this.userprofileservice.openuserprofil(this.chatpartner",{"_index":1150,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.userprofileservice.openuserprofil(this.userservice.currentuser",{"_index":1759,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userprofileservice.openuserprofil(user",{"_index":1343,"title":{},"body":{"components/ChatViewComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["this.userprofilopen",{"_index":2041,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["this.userprofiluser",{"_index":2042,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["this.users",{"_index":1047,"title":{},"body":{"classes/Channel.html":{},"classes/Chat.html":{},"classes/Reaction.html":{},"classes/Thread.html":{}}}],["this.userservice.addregistuserwithuid(this.userservice.registuser.id",{"_index":3073,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.currentuser",{"_index":3637,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.userservice.currentuser.id",{"_index":3622,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.userservice.getuserbyuid(json.parse(localstorage.getitem('user')!).uid",{"_index":1756,"title":{},"body":{"components/HeaderComponent.html":{},"components/SidenavComponent.html":{}}}],["this.userservice.getuserbyuid(this.channelservice.selectedchannel.creatorofchannel",{"_index":1442,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["this.userservice.getuserbyuid(this.chatservice.getchatpartner(newselectedchat",{"_index":1146,"title":{},"body":{"components/ChatComponent.html":{}}}],["this.userservice.getuserbyuid(value",{"_index":1331,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["this.userservice.loadedusers.map(user",{"_index":548,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["this.userservice.registuser",{"_index":923,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["this.userservice.registuser.fullname",{"_index":3068,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.registuser.mail",{"_index":3069,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.userservice.setcurrentuser(this.user",{"_index":3630,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["this.userservice.update(this.user",{"_index":943,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["this.userstatusservice.getuserstatus(this.user.id",{"_index":1347,"title":{},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["this.userstatusservice.getuserstatus(value",{"_index":1336,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["this.verifyandchangeemail(oobcode",{"_index":84,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["this.viewcontainer.clear",{"_index":1828,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":1829,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["this.windowsizeservice.setwindowsize",{"_index":1436,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["this.windowsizeservice.windowwidth$.subscribe(windowwidth",{"_index":1434,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["this.windowwidth",{"_index":1435,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{}}}],["this.windowwidthsubject.asobservable",{"_index":3713,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["this.windowwidthsubject.next(window.innerwidth",{"_index":3715,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["thread",{"_index":2052,"title":{"classes/Thread.html":{}},"body":{"components/MainscreenComponent.html":{},"injectables/MessageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"coverage.html":{}}}],["thread's",{"_index":3344,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread'},{'name",{"_index":191,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["thread.component.html",{"_index":3326,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss",{"_index":3360,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss,../../../../styles.scss,../date",{"_index":3325,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.id",{"_index":3394,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["thread.tojson",{"_index":3397,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["threadcomponent",{"_index":190,"title":{"components/ThreadComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["threadfirebaseservice",{"_index":2017,"title":{"injectables/ThreadFirebaseService.html":{}},"body":{"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["threadopen",{"_index":2011,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["threads",{"_index":3396,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["threadservice",{"_index":2012,"title":{},"body":{"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["threadservice.loadedanswers.length",{"_index":3367,"title":{},"body":{"components/ThreadComponent.html":{}}}],["throw",{"_index":3297,"title":{},"body":{"injectables/StorageFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["throws",{"_index":3294,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["time",{"_index":1083,"title":{},"body":{"components/ChatComponent.html":{}}}],["timeout",{"_index":1606,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["timestamp",{"_index":1021,"title":{},"body":{"classes/Channel.html":{},"injectables/FormatService.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/StorageFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["timestampdmy",{"_index":1696,"title":{},"body":{"injectables/FormatService.html":{}}}],["title",{"_index":714,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{}}}],["titleheader",{"_index":1548,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["tls",{"_index":2762,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["tns",{"_index":403,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{}}}],["today",{"_index":1088,"title":{},"body":{"components/ChatComponent.html":{}}}],["toe",{"_index":1132,"title":{},"body":{"components/ChatComponent.html":{}}}],["toggleemojibar",{"_index":2106,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["toggleemojibar(event",{"_index":2126,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["toggleemojilist",{"_index":3337,"title":{},"body":{"components/ThreadComponent.html":{}}}],["toggleoptions",{"_index":3407,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toggleoptions(event",{"_index":3436,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["togglepasswordvisibility",{"_index":1929,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["togglereactions",{"_index":3408,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["togglereactions(event",{"_index":3438,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toggles",{"_index":1947,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["togglesidenav",{"_index":2016,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["tojson",{"_index":682,"title":{},"body":{"classes/Answer.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["toogleheadermenu",{"_index":1721,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toolbar",{"_index":2163,"title":{},"body":{"components/MessageEditComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar'},{'name",{"_index":193,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["toolbar.component.html",{"_index":3400,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":3399,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":192,"title":{"components/ToolbarComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":666,"title":{},"body":{"components/AddreactionComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["top",{"_index":459,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["touched",{"_index":415,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["transform",{"_index":668,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["transition",{"_index":472,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/UserProfilComponent.html":{}}}],["translatex",{"_index":1292,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["translatex(0",{"_index":998,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["translatex(10",{"_index":1908,"title":{},"body":{"components/IntroComponent.html":{}}}],["translatex(100",{"_index":997,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ForgotPasswordComponent.html":{}}}],["translatey",{"_index":1293,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["transparent",{"_index":660,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/LoginComponent.html":{},"components/StartscreenComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["triggered",{"_index":613,"title":{},"body":{"components/AddreactionComponent.html":{},"directives/IfChangedDirective.html":{},"components/ToolbarComponent.html":{}}}],["triggers",{"_index":1873,"title":{},"body":{"components/IntroComponent.html":{},"injectables/UserProfileService.html":{}}}],["true",{"_index":628,"title":{},"body":{"components/AddreactionComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/IfChangedService.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":936,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/MessageEditComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["tslib",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["ttdsg",{"_index":2481,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["two",{"_index":1679,"title":{},"body":{"injectables/FormatService.html":{},"components/UserProfilComponent.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"classes/Answer.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/FormatService.html":{},"injectables/GenerateIdService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"classes/Message.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"classes/Reaction.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"injectables/StorageFirebaseService.html":{},"classes/Thread.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":230,"title":{},"body":{"injectables/ActiveSelectionService.html":{}}}],["types",{"_index":1294,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["typically",{"_index":3431,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["uhrzeit",{"_index":2394,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ui",{"_index":1142,"title":{},"body":{"components/ChatComponent.html":{},"components/RegisterComponent.html":{}}}],["uid",{"_index":1311,"title":{},"body":{"components/ChatViewComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["uid(value",{"_index":1328,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["um",{"_index":343,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["umfasst",{"_index":2491,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umst&auml;nden",{"_index":2431,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["umständen",{"_index":2894,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unber&uuml;hrt",{"_index":2657,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unberührt",{"_index":2934,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unbeschadet",{"_index":2712,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["und",{"_index":340,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["undefined",{"_index":216,"title":{},"body":{"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"injectables/FormatService.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["unentgeltlich",{"_index":2415,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unentgeltliche",{"_index":2729,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["ungültig",{"_index":1620,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["union",{"_index":2759,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unique",{"_index":3503,"title":{},"body":{"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["unit",{"_index":3826,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":3499,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["unpackchannels",{"_index":3168,"title":{},"body":{"components/SidenavComponent.html":{}}}],["unpackmessages",{"_index":3169,"title":{},"body":{"components/SidenavComponent.html":{}}}],["unrechtm&auml;&szlig;ig",{"_index":2740,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unrechtmäßig",{"_index":2954,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uns",{"_index":2369,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unser",{"_index":328,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["unsere",{"_index":2385,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserem",{"_index":2819,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unseren",{"_index":2506,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unserer",{"_index":2346,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unseres",{"_index":2609,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unset",{"_index":416,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["unsubanswers",{"_index":2181,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{}}}],["unsubmessage",{"_index":2182,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["unsubmessages",{"_index":2183,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["unsubreactions",{"_index":2184,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["unsubscribe",{"_index":1096,"title":{},"body":{"components/ChatComponent.html":{}}}],["unsubscribes",{"_index":2218,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["unsubuser",{"_index":3471,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["unsubusers",{"_index":3472,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["unsupported",{"_index":3295,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["unter",{"_index":2347,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unterhaltung",{"_index":1162,"title":{},"body":{"components/ChatComponent.html":{}}}],["unternehmen",{"_index":2862,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unterst&uuml;tzt",{"_index":2853,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unterstützt",{"_index":2975,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["unverlangten",{"_index":2799,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["up",{"_index":1298,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["update",{"_index":899,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["update(user",{"_index":3525,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["updatecurrentusertofirebase",{"_index":3484,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["updated",{"_index":544,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelUsersComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["updatedoc",{"_index":2231,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["updatedoc(docinstance",{"_index":2249,"title":{},"body":{"injectables/MessageFirebaseService.html":{},"injectables/ThreadFirebaseService.html":{},"injectables/UserFirebaseService.html":{}}}],["updatedthreadmsg",{"_index":2107,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["updateemail",{"_index":3485,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["updateemail(newemail",{"_index":3529,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["updatereaction",{"_index":2190,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["updatereaction(reaction",{"_index":2219,"title":{},"body":{"injectables/MessageFirebaseService.html":{}}}],["updates",{"_index":523,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"directives/IfChangedDirective.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"injectables/UserFirebaseService.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["updatethread",{"_index":3378,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["updatethread(thread",{"_index":3384,"title":{},"body":{"injectables/ThreadFirebaseService.html":{}}}],["uper",{"_index":972,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["upload",{"_index":989,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["uploadandretrieveurl",{"_index":3267,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadandretrieveurl(storageref",{"_index":3282,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadbytes",{"_index":3292,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadbytes(storageref",{"_index":3309,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploaded",{"_index":914,"title":{},"body":{"components/AvatarChooseComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["uploadfile",{"_index":878,"title":{},"body":{"components/AvatarChooseComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["uploadfile(file",{"_index":3284,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadfile(input",{"_index":909,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["uploadfiletostorage",{"_index":3268,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadfiletostorage(storageref",{"_index":3287,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadimgfile",{"_index":3269,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploadimgfile(file",{"_index":3289,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["uploading",{"_index":942,"title":{},"body":{"components/AvatarChooseComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["uploads",{"_index":912,"title":{},"body":{"components/AvatarChooseComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["upon",{"_index":1594,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["url",{"_index":47,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/StorageFirebaseService.html":{}}}],["url(\"https://fonts.googleapis.com/icon?family=material+icons",{"_index":1774,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url('assets/fonts/nunito",{"_index":1259,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["urlsearchparams(window.location.search",{"_index":3121,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["usa",{"_index":2869,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["usage",{"_index":1819,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["use",{"_index":1252,"title":{},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"index.html":{}}}],["user",{"_index":130,"title":{"classes/User.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"classes/Chat.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"classes/User.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"coverage.html":{}}}],["user's",{"_index":898,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["user(doc.data",{"_index":3544,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["user(docsnap.data",{"_index":3556,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["user(user",{"_index":3559,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["user(userdata",{"_index":3538,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["user.class",{"_index":1054,"title":{},"body":{"classes/Chat.html":{}}}],["user.fullname",{"_index":1350,"title":{},"body":{"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/UserProfilComponent.html":{}}}],["user.id",{"_index":549,"title":{},"body":{"components/AddUserDialogComponent.html":{},"injectables/UserFirebaseService.html":{}}}],["user.mail",{"_index":3651,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["user.status",{"_index":3650,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["user.tojson",{"_index":3549,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["userdata",{"_index":3512,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["useres",{"_index":1413,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["userfirebase",{"_index":3330,"title":{},"body":{"components/ThreadComponent.html":{}}}],["userfirebaseservice",{"_index":509,"title":{"injectables/UserFirebaseService.html":{}},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"coverage.html":{}}}],["userid",{"_index":3687,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["usermessage",{"_index":26,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["usermgmt",{"_index":863,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["username",{"_index":873,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["userpics",{"_index":3300,"title":{},"body":{"injectables/StorageFirebaseService.html":{}}}],["userprofil",{"_index":1743,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{}}}],["userprofilcard",{"_index":3661,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["userprofilcomponent",{"_index":194,"title":{"components/UserProfilComponent.html":{}},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userprofile",{"_index":3153,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["userprofilemenubackground",{"_index":1783,"title":{},"body":{"components/HeaderComponent.html":{}}}],["userprofileservice",{"_index":1079,"title":{"injectables/UserProfileService.html":{}},"body":{"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"coverage.html":{}}}],["userprofilopen",{"_index":2013,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["userprofiluser",{"_index":2014,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["users",{"_index":519,"title":{},"body":{"components/AddUserDialogComponent.html":{},"classes/Channel.html":{},"classes/Chat.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"classes/Reaction.html":{},"components/ShowChannelUsersComponent.html":{},"classes/Thread.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{}}}],["users'},{'name",{"_index":149,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["users.component",{"_index":850,"title":{},"body":{"modules/AppModule.html":{}}}],["users.component.html",{"_index":1486,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["users.component.scss",{"_index":1485,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts",{"_index":1484,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{},"coverage.html":{}}}],["users.component.ts:14",{"_index":1525,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts:15",{"_index":1527,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:16",{"_index":1526,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:17",{"_index":1499,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:19",{"_index":1498,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:21",{"_index":1494,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:23",{"_index":3156,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts:24",{"_index":3155,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts:31",{"_index":3148,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts:39",{"_index":3147,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts:42",{"_index":1520,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:48",{"_index":3151,"title":{},"body":{"components/ShowChannelUsersComponent.html":{}}}],["users.component.ts:56",{"_index":1501,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:64",{"_index":1522,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:78",{"_index":1512,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.component.ts:88",{"_index":1515,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["users.slice().sort((a",{"_index":3547,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["users/edit",{"_index":849,"title":{},"body":{"modules/AppModule.html":{},"components/EditChannelUsersComponent.html":{},"coverage.html":{}}}],["users/show",{"_index":852,"title":{},"body":{"modules/AppModule.html":{},"components/ShowChannelUsersComponent.html":{},"coverage.html":{}}}],["userschat",{"_index":3638,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["userservice",{"_index":508,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{},"components/UserProfilComponent.html":{}}}],["userservice.currentuser.fullname",{"_index":949,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["userstatus",{"_index":1335,"title":{},"body":{"components/ChatViewComponent.html":{},"injectables/UserStatusFirebaseService.html":{}}}],["userstatusdatabaseref",{"_index":3695,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["userstatusfirebaseservice",{"_index":1314,"title":{"injectables/UserStatusFirebaseService.html":{}},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{},"injectables/UserStatusFirebaseService.html":{},"coverage.html":{}}}],["userstatusservice",{"_index":1313,"title":{},"body":{"components/ChatViewComponent.html":{},"components/UserProfilComponent.html":{}}}],["using",{"_index":617,"title":{},"body":{"components/AddreactionComponent.html":{},"components/ChatViewComponent.html":{},"components/ForgotPasswordComponent.html":{},"directives/IfChangedDirective.html":{},"components/LoginComponent.html":{},"components/ReactionComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ToolbarComponent.html":{}}}],["uuml;ber",{"_index":2417,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berblick",{"_index":2328,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bereinkommen",{"_index":2868,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bermitteln",{"_index":2784,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bermittlung",{"_index":2628,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berpr&uuml;fen",{"_index":2737,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bersandten",{"_index":2823,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bersendung",{"_index":2790,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;bertragung",{"_index":2594,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;berwiegen",{"_index":2686,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["uuml;brigen",{"_index":2818,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["v15",{"_index":1274,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["v26",{"_index":1260,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["valid",{"_index":3422,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["validates",{"_index":3031,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["validation",{"_index":274,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["validators",{"_index":297,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["validators.email",{"_index":1598,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["validators.maxlength(100",{"_index":311,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["validators.maxlength(50",{"_index":310,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["validators.minlength(3",{"_index":309,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["validators.minlength(5",{"_index":3043,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(6",{"_index":1950,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":3044,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":308,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserProfilComponent.html":{}}}],["validity",{"_index":3027,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":68,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":3003,"title":{},"body":{"components/ReactionComponent.html":{}}}],["value.trim().split",{"_index":3060,"title":{},"body":{"components/RegisterComponent.html":{},"components/UserProfilComponent.html":{}}}],["value.users.length",{"_index":3005,"title":{},"body":{"components/ReactionComponent.html":{}}}],["values",{"_index":1806,"title":{},"body":{"directives/IfChangedDirective.html":{},"components/RegisterComponent.html":{}}}],["var",{"_index":120,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["variable",{"_index":270,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3847,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver&ouml;ffentlichten",{"_index":2789,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortlich",{"_index":2352,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortliche",{"_index":2544,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verantwortlichen",{"_index":2362,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeiten",{"_index":2588,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitet",{"_index":2509,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verarbeitung",{"_index":2433,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verbindung",{"_index":2697,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verbleiben",{"_index":2571,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verf&uuml;gt",{"_index":2863,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verfiyemail",{"_index":50,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["verfy",{"_index":65,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["verfügt",{"_index":2976,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vergessen",{"_index":1991,"title":{},"body":{"components/LoginComponent.html":{}}}],["verifizieren",{"_index":3655,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["verify",{"_index":56,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["verifyandchangeemail",{"_index":29,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["verifyandchangeemail(oobcode",{"_index":53,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["verifyandchangeemail(oobcode:string",{"_index":88,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["verlangen",{"_index":2426,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verlassen",{"_index":1458,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["verpflichtet",{"_index":2633,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verpflichtung",{"_index":2606,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschiedene",{"_index":2524,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschiedenen",{"_index":2622,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschl&uuml;sselte",{"_index":2772,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschl&uuml;sselung",{"_index":2763,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschlüsselte",{"_index":2963,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verschlüsselung",{"_index":2961,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["version",{"_index":3807,"title":{},"body":{"index.html":{},"properties.html":{}}}],["verst&ouml;&szlig;en",{"_index":2702,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["versto&szlig;es",{"_index":2710,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verstoßes",{"_index":2947,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verstößen",{"_index":2944,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vert",{"_index":3452,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["verteidigung",{"_index":2690,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertrag",{"_index":2494,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertrags",{"_index":2645,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertragserf&uuml;llung",{"_index":2599,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertragserfüllung",{"_index":2922,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertraulich",{"_index":2519,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vertraulicher",{"_index":2767,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwaltungsrechtlicher",{"_index":2714,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwenden",{"_index":955,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["verwendest",{"_index":1989,"title":{},"body":{"components/LoginComponent.html":{}}}],["verwendet",{"_index":2408,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendete",{"_index":2842,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["verwendung",{"_index":2462,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["veröffentlichten",{"_index":2967,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["via",{"_index":2597,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"index.html":{}}}],["viele",{"_index":2649,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["view",{"_index":887,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/ChatViewComponent.html":{},"components/EditChannelComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"components/ImprintComponent.html":{},"components/MainscreenComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{}}}],["view'},{'name",{"_index":142,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["view.component",{"_index":836,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.html",{"_index":1307,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.scss",{"_index":1306,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.ts",{"_index":1305,"title":{},"body":{"components/ChatViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:15",{"_index":1325,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.ts:16",{"_index":1315,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.ts:19",{"_index":1326,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.ts:26",{"_index":1316,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.ts:51",{"_index":1322,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view.component.ts:59",{"_index":1317,"title":{},"body":{"components/ChatViewComponent.html":{}}}],["view/chat",{"_index":835,"title":{},"body":{"modules/AppModule.html":{},"components/ChatViewComponent.html":{},"coverage.html":{}}}],["viewchild",{"_index":532,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/UserProfilComponent.html":{}}}],["viewchild('container",{"_index":630,"title":{},"body":{"components/AddreactionComponent.html":{}}}],["viewchild('selectedusers",{"_index":529,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["viewcontainer",{"_index":1798,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["viewcontainerref",{"_index":1799,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["viewmode",{"_index":1464,"title":{},"body":{"components/EditChannelComponent.html":{}}}],["views",{"_index":3101,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/StartscreenComponent.html":{}}}],["visibility",{"_index":1948,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageEditComponent.html":{},"components/RegisterComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["visible",{"_index":3182,"title":{},"body":{"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/ActionHandlerComponent.html":{},"injectables/ActiveSelectionService.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"directives/IfChangedDirective.html":{},"injectables/IfChangedService.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"injectables/MessageFirebaseService.html":{},"injectables/NotificationService.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadFirebaseService.html":{},"components/ToolbarComponent.html":{},"injectables/UserFirebaseService.html":{},"components/UserProfilComponent.html":{},"injectables/UserProfileService.html":{},"injectables/UserStatusFirebaseService.html":{},"injectables/WindowSizeService.html":{}}}],["vollständiger",{"_index":3652,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["vom",{"_index":2656,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["von",{"_index":556,"title":{},"body":{"components/AddUserDialogComponent.html":{},"components/EditChannelComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["vor",{"_index":2389,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorgenommen",{"_index":2745,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorgeschriebenen",{"_index":2503,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorliegende",{"_index":2525,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["vorname",{"_index":3083,"title":{},"body":{"components/RegisterComponent.html":{}}}],["vorvertraglicher",{"_index":2601,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["warning",{"_index":1638,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["webkit",{"_index":3200,"title":{},"body":{"components/SidenavComponent.html":{}}}],["website",{"_index":2334,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["websitebesucher",{"_index":2505,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["websitebetreiber",{"_index":2357,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wechselt",{"_index":2779,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weight",{"_index":456,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["weil",{"_index":326,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["weisen",{"_index":2530,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weisungen",{"_index":2507,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weiter",{"_index":958,"title":{},"body":{"components/AvatarChooseComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["weitere",{"_index":2858,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weiteren",{"_index":2434,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weitergabe",{"_index":2634,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["weitergeleitet",{"_index":107,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["welche",{"_index":2409,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["welchem",{"_index":2528,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenden",{"_index":2442,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wenn",{"_index":2333,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["wer",{"_index":2351,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werbe",{"_index":2786,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werbeinformationen",{"_index":2801,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werbung",{"_index":2695,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["werden",{"_index":105,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UserProfilComponent.html":{}}}],["wert",{"_index":540,"title":{},"body":{"components/AddUserDialogComponent.html":{}}}],["wessen",{"_index":2749,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["west1.firebasedatabase.app",{"_index":3872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whenever",{"_index":1816,"title":{},"body":{"directives/IfChangedDirective.html":{}}}],["where(\"channelname",{"_index":3569,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["where(\"fullname",{"_index":3565,"title":{},"body":{"injectables/UserFirebaseService.html":{}}}],["whether",{"_index":1505,"title":{},"body":{"components/EditChannelUsersComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ThreadComponent.html":{}}}],["white",{"_index":389,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["wichtigen",{"_index":2756,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerruf",{"_index":2648,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerrufbar",{"_index":2492,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerrufen",{"_index":2429,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widersprechen",{"_index":2698,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widersprochen",{"_index":2795,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerspruch",{"_index":2668,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["widerspruchsrecht",{"_index":2658,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["width",{"_index":347,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["width:470px",{"_index":2880,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wie",{"_index":2364,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["window",{"_index":1404,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EmptyWindowComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{}}}],["window'},{'name",{"_index":152,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/AddChannelDialogComponent.html":{},"components/AddUserDialogComponent.html":{},"components/AddreactionComponent.html":{},"components/AppComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/IntroComponent.html":{},"components/LoginComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ReactionComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/StartscreenComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["window.addeventlistener('resize",{"_index":3716,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["window.component",{"_index":848,"title":{},"body":{"modules/AppModule.html":{}}}],["window.component.html",{"_index":1556,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["window.component.scss",{"_index":1555,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["window.component.ts",{"_index":1554,"title":{},"body":{"components/EmptyWindowComponent.html":{},"coverage.html":{}}}],["window.component.ts:10",{"_index":1557,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["window.component.ts:12",{"_index":1558,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["window.component.ts:13",{"_index":1559,"title":{},"body":{"components/EmptyWindowComponent.html":{}}}],["window/empty",{"_index":847,"title":{},"body":{"modules/AppModule.html":{},"components/EmptyWindowComponent.html":{},"coverage.html":{}}}],["windowsizeservice",{"_index":1399,"title":{"injectables/WindowSizeService.html":{}},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"injectables/NotificationService.html":{},"components/SidenavComponent.html":{},"injectables/WindowSizeService.html":{},"coverage.html":{}}}],["windowwidth",{"_index":1390,"title":{},"body":{"components/EditChannelComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"injectables/WindowSizeService.html":{}}}],["windowwidthsubject",{"_index":3708,"title":{},"body":{"injectables/WindowSizeService.html":{}}}],["wir",{"_index":317,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["wird",{"_index":2401,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["without",{"_index":3434,"title":{},"body":{"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["wof&uuml;r",{"_index":2399,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["wofür",{"_index":2889,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["word",{"_index":1462,"title":{},"body":{"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{}}}],["words",{"_index":3607,"title":{},"body":{"components/UserProfilComponent.html":{}}}],["work",{"_index":1497,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["workspace",{"_index":2047,"title":{},"body":{"components/MainscreenComponent.html":{}}}],["workspaces",{"_index":3218,"title":{},"body":{"components/SidenavComponent.html":{}}}],["wort",{"_index":3085,"title":{},"body":{"components/RegisterComponent.html":{}}}],["wrap",{"_index":976,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["wrapper.mdc",{"_index":427,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["write",{"_index":2168,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["writeuserstatus",{"_index":3683,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["writeuserstatus(userid",{"_index":3688,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["writeuserstatus(userid:string",{"_index":3693,"title":{},"body":{"injectables/UserStatusFirebaseService.html":{}}}],["wurde",{"_index":96,"title":{},"body":{"components/ActionHandlerComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["wurden",{"_index":1539,"title":{},"body":{"components/EditChannelUsersComponent.html":{}}}],["wähle",{"_index":947,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["wählen",{"_index":952,"title":{},"body":{"components/AvatarChooseComponent.html":{}}}],["x",{"_index":1905,"title":{},"body":{"components/IntroComponent.html":{},"components/ShowChannelUsersComponent.html":{}}}],["y",{"_index":1198,"title":{},"body":{"components/ChatComponent.html":{},"components/EmptyWindowComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["year",{"_index":1672,"title":{},"body":{"injectables/FormatService.html":{}}}],["yellow",{"_index":1285,"title":{},"body":{"components/ChatComponent.html":{},"components/HeaderComponent.html":{},"components/MainscreenComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{}}}],["yes",{"_index":686,"title":{},"body":{"classes/Answer.html":{},"classes/Chat.html":{},"classes/Message.html":{},"classes/Reaction.html":{},"classes/Thread.html":{},"classes/User.html":{}}}],["yesterdaydmy",{"_index":1693,"title":{},"body":{"injectables/FormatService.html":{}}}],["z",{"_index":667,"title":{},"body":{"components/AddreactionComponent.html":{},"components/AvatarChooseComponent.html":{},"components/ChatComponent.html":{},"components/ChatViewComponent.html":{},"components/DateLineComponent.html":{},"components/EditChannelComponent.html":{},"components/EditChannelUsersComponent.html":{},"components/EmptyWindowComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HeaderComponent.html":{},"components/IntroComponent.html":{},"components/MainscreenComponent.html":{},"components/MessageEditComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ShowChannelUsersComponent.html":{},"components/SidenavComponent.html":{},"components/ThreadComponent.html":{},"components/ToolbarComponent.html":{},"components/UserProfilComponent.html":{}}}],["z.&nbsp;b",{"_index":2375,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["z])(?=.*[!@#$%^&*()_",{"_index":3046,"title":{},"body":{"components/RegisterComponent.html":{}}}],["z])(?=.*[0",{"_index":3118,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["z])(?=.*[a",{"_index":3045,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zeichen",{"_index":368,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zeile",{"_index":335,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["zeit",{"_index":2736,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zero",{"_index":1682,"title":{},"body":{"injectables/FormatService.html":{}}}],["zertifizierte",{"_index":2874,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zertifizierung",{"_index":2864,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zone.js",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":339,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/RegisterComponent.html":{}}}],["zugriff",{"_index":2485,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zukunft",{"_index":2428,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zul&auml;ssigen",{"_index":2579,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zulässigen",{"_index":2917,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zum",{"_index":362,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["zur",{"_index":355,"title":{},"body":{"components/AddChannelDialogComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["zurück",{"_index":2159,"title":{},"body":{"components/MessageEditComponent.html":{}}}],["zurückgesetzt",{"_index":98,"title":{},"body":{"components/ActionHandlerComponent.html":{}}}],["zurücksetzen",{"_index":1617,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zus&auml;tzlich",{"_index":2598,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammen",{"_index":2625,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammenh&auml;ngt",{"_index":2816,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusammenhängt",{"_index":2970,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusendung",{"_index":2800,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zust&auml;ndigen",{"_index":2437,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuständigen",{"_index":2896,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zusätzlich",{"_index":2921,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuverl&auml;ssigen",{"_index":2474,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuverlässigen",{"_index":2902,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zuzugreifen",{"_index":345,"title":{},"body":{"components/AddChannelDialogComponent.html":{}}}],["zweck",{"_index":2420,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwecke",{"_index":2559,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwingende",{"_index":2681,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["zwischen",{"_index":1165,"title":{},"body":{"components/ChatComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/ActionHandlerComponent.html":{"url":"components/ActionHandlerComponent.html","title":"component - ActionHandlerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ActionHandlerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/action-handler/action-handler.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-action-handler\n            \n\n\n\n            \n                styleUrls\n                ./action-handler.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./action-handler.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                verifyAndChangeEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, authService: AuthFirebaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/action-handler/action-handler.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/action-handler/action-handler.component.ts:22\n                        \n                    \n\n\n            \n                \n                        Gets QueryParams from URL and routes to the components for recoverPasswort or verfiyEmail.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyAndChangeEmail\n                        \n                    \n                \n            \n            \n                \nverifyAndChangeEmail(oobCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/action-handler/action-handler.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Verify change or recover email an redirects to main after confirm.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \noobCode from Url to verfy firebase change action.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/action-handler/action-handler.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\n\n@Component({\n  selector: 'app-action-handler',\n  templateUrl: './action-handler.component.html',\n  styleUrls: ['./action-handler.component.scss']\n})\nexport class ActionHandlerComponent implements OnInit {\n\n  userMessage = \"\";\n\n  constructor(\n    private route: ActivatedRoute, \n    private authService: AuthFirebaseService, \n    private router: Router) { }\n\n  /**\n   * Gets QueryParams from URL and routes to the components for recoverPasswort or verfiyEmail. \n   */\n  ngOnInit() {\n    this.route.queryParamMap.subscribe(queryParams => {\n      const mode = queryParams.get('mode');\n      const oobCode = queryParams.get('oobCode');\n      const apiKey = queryParams.get('apiKey');\n\n      if (mode == \"verifyAndChangeEmail\") {\n        this.verifyAndChangeEmail(oobCode!); \n      }\n      else if (mode == \"resetPassword\") {\n        this.router.navigate(['reset', oobCode], { queryParams: { oobCode: oobCode } });\n      }\n    });\n  }\n\n  /**\n   * Verify change or recover email an redirects to main after confirm. \n   * @param oobCode - oobCode from Url to verfy firebase change action. \n   */\n  verifyAndChangeEmail(oobCode:string){\n    if (oobCode) {\n      this.authService.applyActionCode(oobCode);\n    }\n    switch (this.userMessage) {\n      case \"recoverEmail\":\n        this.userMessage = \"Ihre Email-Adresse wurde erfolgreich zurückgesetzt\"\n        break;\n      case \"verifyAndChangeEmail\":\n        this.userMessage = \"Ihre Email-Adresse wurde erfolgreich geändert\"\n    }\n    setTimeout(() => {\n      this.router.navigate(['index']);\n    }, 3000);\n  }\n\n}\n\n    \n\n    \n        \n    {{userMessage}}\n    Sie werden in kürze weitergeleitet\n\n\n    \n\n    \n                \n                    ./action-handler.component.scss\n                \n                #actionHandler{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{userMessage}}    Sie werden in kürze weitergeleitet'\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ActionHandlerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActiveSelectionService.html":{"url":"injectables/ActiveSelectionService.html","title":"injectable - ActiveSelectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveSelectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/active-selection.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeSelectionObject\n                            \n                            \n                                    Private\n                                activeSelectionType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveSelectionObject\n                            \n                            \n                                getActiveSelectionType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    activeSelection\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveSelectionObject\n                        \n                    \n                \n            \n            \n                \ngetActiveSelectionObject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/active-selection.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveSelectionType\n                        \n                    \n                \n            \n            \n                \ngetActiveSelectionType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/active-selection.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeSelectionObject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chat | Channel | null | undefined\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/services/active-selection.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeSelectionType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/services/active-selection.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        activeSelection\n                    \n                \n\n\n                \n                    \n                        setactiveSelection(selection: Chat | Channel | null | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/services/active-selection.service.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            selection\n                                                    \n                                                            \n                                                                        Chat | Channel | null | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Channel } from 'src/models/channel.class';\nimport { Chat } from 'src/models/chat.class';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ActiveSelectionService {\n\n    private activeSelectionType: string = \"\"; //Channel,Chat\n    private activeSelectionObject: Chat | Channel | null | undefined = null;\n\n    set activeSelection(selection: Chat | Channel | null | undefined ) {\n        \n        if (typeof selection == 'object') {\n            if (selection instanceof Channel) {\n                this.activeSelectionType = 'Channel';\n                this.activeSelectionObject = selection;\n            } else {\n                this.activeSelectionType = 'Chat';\n                this.activeSelectionObject = selection;\n            }\n        } else {\n            this.activeSelectionType = \"\";\n            this.activeSelectionObject = null;\n        }\n    }\n\n    getActiveSelectionType(){\n        return this.activeSelectionType;\n    }\n\n    getActiveSelectionObject(){\n        return this.activeSelectionObject;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddChannelDialogComponent.html":{"url":"components/AddChannelDialogComponent.html","title":"component - AddChannelDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddChannelDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-channel-dialog\n            \n\n\n\n            \n                styleUrls\n                ./add-channel-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-channel-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addChannelForm\n                            \n                            \n                                    Public\n                                channel\n                            \n                            \n                                channelDescription\n                            \n                            \n                                channelName\n                            \n                            \n                                creatorChannel\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                firebaseChannel\n                            \n                            \n                                location\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                getInput\n                            \n                            \n                                onSubmitNewChannel\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentLocation\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentLocation\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, firebaseChannel: ChannelFirebaseService, dialog: MatDialog, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firebaseChannel\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentLocation\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Closes addChanenelDialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInput\n                        \n                    \n                \n            \n            \n                \ngetInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Connects form variable with hmtl input form and adds a validation.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitNewChannel\n                        \n                    \n                \n            \n            \n                \nonSubmitNewChannel(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Gets value of input field and give it to the next componente, to create the new channel.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \niput form value\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Opens addChannel dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addChannelForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Channel()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatorChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentLocation\n                    \n                \n\n\n                \n                    \n                        setcurrentLocation(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts:36\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Channel } from 'src/models/channel.class';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\n\nimport {\n  MatDialog,\n  MatDialogRef\n} from '@angular/material/dialog';\nimport { AddUserDialogComponent } from '../add-user-dialog/add-user-dialog.component';\n\n@Component({\n  selector: 'app-add-channel-dialog',\n  templateUrl: './add-channel-dialog.component.html',\n  styleUrls: ['./add-channel-dialog.component.scss']\n})\nexport class AddChannelDialogComponent {\n  channelName: any;\n  channelDescription: any;\n  creatorChannel: any;\n\n  public channel = new Channel();\n\n  location: string | undefined;\n\n  addChannelForm: FormGroup = new FormGroup({});\n\n  constructor(private fb: FormBuilder,\n    public firebaseChannel: ChannelFirebaseService,\n    public dialog: MatDialog,\n    public dialogRef: MatDialogRef) {\n    this.getInput();\n  }\n\n  @Input()\n  public set currentLocation(value: string) {\n    this.location = value;\n  }\n\n  /**\n   * Connects form variable with hmtl input form and adds a validation. \n   */\n  getInput() {\n    this.addChannelForm = this.fb.group({\n      channelName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      channelDescription: ['', [Validators.required, Validators.maxLength(100)]]\n    });\n  }\n\n\n  /**\n   * Gets value of input field and give it to the next componente, to create the new channel. \n   * @param value - iput form value\n   */\n  onSubmitNewChannel(value: any) {\n    const newChannel = new Channel(value);\n    const dialogRef = this.dialog.open(AddUserDialogComponent) //hier fügen wir die Komponente ein die geöffnet werden soll. In diesem Fall, \"DialogAddUserComponent\", weil da unser Dialog enthalten ist.\n    dialogRef.componentInstance.channel = new Channel(newChannel);  // Mit dieser Zeile greifen wir auf die DialogEditAdressComponent zu und lagern die user in dieser component dort ein um auf daten zuzugreifen.\n    this.closeDialog();\n  }\n\n\n  /**\n   * Opens addChannel dialog\n   */\n  openDialog(): void {\n    this.dialog.open(AddUserDialogComponent, {\n      width: '250px',\n    });\n  }\n\n  \n  /**\n   * Closes addChanenelDialog\n   */\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n    \n        Channel erstellen\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    Channels dienen deinem Team zur Kommunikation. Am besten sollten sie themenbezogen sein #marketing zum\n        Beispiel.\n    \n\n    \n        Channel-Name\n        \n        \n            Channelname muss mindesten 3 - 50 Zeichen lang sein!\n        \n    \n\n    \n        Beschreibung\n        \n        \n            Bitte geben Sie eine Beschreibung ein max. 100 Zeichen!\n        \n    \n\n    \n        Erstellen\n    \n\n\n    \n\n    \n                \n                    ./add-channel-dialog.component.scss\n                \n                .addChannelDialogContainer {\n    height: 556px;\n    max-width: 800px;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding-left: 30px;\n    padding-right: 30px;\n    background-color: white;\n    border-radius: 35px;\n\n    #addChannelDialogHeader{\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n    }\n\n    img{\n        cursor: pointer;\n    }\n}\n\n.mat-form-field.mat-mdc-form-field.formFieldChannelName.removeBackground.ng-tns-c1205077789-0.ng-star-inserted.mat-mdc-form-field-type-mat-input.mat-form-field-appearance-fill.mat-primary.ng-pristine.ng-invalid.mat-form-field-invalid.ng-touched > * {\n    background-color: unset;\n}\n\n.mat-form-field.mat-mdc-form-field.formFieldChannelName.ng-tns-c1205077789-0.ng-star-inserted.mat-mdc-form-field-type-mat-input.mat-form-field-appearance-fill.mat-primary.ng-pristine.ng-invalid.mat-form-field-invalid.ng-touched > * {\n    background-color: unset;\n\n}\n\n::ng-deep .mat-mdc-dialog-surface.mdc-dialog__surface {\n    border-radius: 30px;\n}\n\n::ng-deep .mat-mdc-form-field-infix {\n    width: 100%;\n}\n\n::ng-deep .mat-mdc-form-field-focus-overlay.ng-tns-c1205077789-0.ng-star-inserted {\n    background-color: unset;\n}\n\n::ng-deep .mat-mdc-text-field-wrapper.mdc-text-field.ng-tns-c1205077789-0.mdc-text-field--filled.mdc-text-field--no-label.mdc-text-field--invalid {\n    background-color: unset;\n}\n\n::ng-deep .mat-mdc-form-field-flex.ng-tns-c1205077789-0 {\n    background-color: unset;\n}\n\n.materror1 > * {\n    display: unset;\n}\n\n.formFieldChannelName {\n    width: 100%;\n}\n\n.formFieldChannelDescription {\n    width: 100%;\n}\n\nmat-form-field {\n    &:hover {\n        background-color: unset;\n    }\n}\n\n::ng-deep input#mat-input-0{\n    border: solid 1px #444DF2;\n    height: 57px;\n    border-radius: 30px;\n}\n\n::ng-deep input#mat-input-1 {\n    border: solid 1px #444DF2;\n    height: 57px;\n    border-radius: 30px;\n}\n\n::ng-deep .mdc-line-ripple  {\n    display: none;\n}\n\n.createChannelButton {\n    border: 0px;\n    width: 126px;\n    height: 58px;\n    font-size: 18px;\n    border-radius: 29px;\n    background-color: #444DF2;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    font-weight: bold;\n    margin-top: 18px;\n    cursor: pointer;\n    position: absolute;\n    right: 32px;\n    bottom: 28px;\n\n    &:disabled {\n        background-color: gray;\n    }\n\n    &:not(:disabled):hover {\n        background-color: rgba(121, 126, 243, 1) !important;\n        transition: background-color 0.15s ease-in-out;\n    }\n}\n\n.mat-mdc-dialog-container {\n    border-radius: 10px !important;\n }\n\n body .cdk-overlay-container .mat-mdc-dialog-container {\n    border-radius: 35px !important;\n}\n\n::ng-deep .mdc-text-field--filled:not(.mdc-text-field--disabled){\n    background-color: none;\n}\n\n.newChannelInputField{\n    border: 1px solid #ADB0D9; \n    border-radius: 20px;\n    padding: 12px;\n    //padding-left: 50px;\n    width: calc(100% - 24px - 30px);\n    font-size: 1.5em;\n}\n.channelNameContainer, .channelDescriptionContainer{\n    width: 100%;\n}\n\n.errorValidation{\n    color: red;\n    margin: 0px;\n    margin-top: 4px;\n}\n\n@media only screen and (max-width: 768px) {\n\n\n    .addChannelDialogContainer{\n        height: 100vh;\n        width: calc(100% - 60px);\n        display: flex;\n        border-radius: 0px;\n    }\n    ::ng-deep .mat-mdc-dialog-surface.mdc-dialog__surface{\n        border-radius: 0px;\n    }\n    ::ng-deep .cdk-overlay-pane{\n        max-width: calc(100vw)  !important; \n    }\n\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Channel erstellen                                                                                                                                                        Channels dienen deinem Team zur Kommunikation. Am besten sollten sie themenbezogen sein #marketing zum        Beispiel.                Channel-Name                            Channelname muss mindesten 3 - 50 Zeichen lang sein!                        Beschreibung                            Bitte geben Sie eine Beschreibung ein max. 100 Zeichen!                        Erstellen    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddChannelDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddUserDialogComponent.html":{"url":"components/AddUserDialogComponent.html","title":"component - AddUserDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddUserDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-user-dialog\n            \n\n\n\n            \n                styleUrls\n                ./add-user-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./add-user-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channel\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                firebaseChannel\n                            \n                            \n                                selectedOption\n                            \n                            \n                                    \n                                selectedUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chooseSelection\n                            \n                            \n                                closeDialog\n                            \n                            \n                                createChannel\n                            \n                            \n                                handleChannelUserUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseChannel: ChannelFirebaseService, userService: UserFirebaseService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseChannel\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chooseSelection\n                        \n                    \n                \n            \n            \n                \nchooseSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:28\n                        \n                    \n\n\n            \n                \n                        Logs the current selected option.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Closes add user dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createChannel\n                        \n                    \n                \n            \n            \n                \ncreateChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Creates a new channel with users based on selected option. (all or selected users)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleChannelUserUpdate\n                        \n                    \n                \n            \n            \n                \nhandleChannelUserUpdate(newChannel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        updates channel object when adding new users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newChannel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nchannel to create\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Channel()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('selectedUsers', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Channel } from 'src/models/channel.class';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n@Component({\n  selector: 'app-add-user-dialog',\n  templateUrl: './add-user-dialog.component.html',\n  styleUrls: ['./add-user-dialog.component.scss']\n})\nexport class AddUserDialogComponent {\n\n  selectedOption: string = '';\n  public channel = new Channel();\n  @ViewChild('selectedUsers', { static: false }) selectedUsers!: ElementRef;\n\n  constructor(public firebaseChannel: ChannelFirebaseService,\n    private userService: UserFirebaseService,\n    public dialogRef: MatDialogRef\n    ) {\n  }\n\n\n  /**\n   * Logs the current selected option. \n   */\n  chooseSelection() {\n    console.log(this.selectedOption); // Gibt den aktuell ausgewählten Wert aus\n  }\n\n  \n  /**\n   * updates channel object when adding new users. \n   * @param newChannel - channel to create\n   */\n  handleChannelUserUpdate(newChannel: Channel) {\n    this.channel = newChannel;\n    console.log(\"channel updated\");\n    console.log(this.channel)\n  }\n\n\n  /**\n   * Creates a new channel with users based on selected option. (all or selected users)\n   */\n  createChannel() {\n    if (this.selectedOption == '1') {\n      this.channel.users = this.userService.loadedUsers.map(user => user.id);\n      this.firebaseChannel.updateChannel(this.channel).then(()=>{\n        this.closeDialog(); \n      });\n    } else {\n      this.channel.users.push(this.userService.currentUser.id);\n      this.firebaseChannel.updateChannel(this.channel).then(()=>{\n        this.closeDialog(); \n      });\n    }\n  }\n\n\n  /**\n   * Closes add user dialog. \n   */\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n\n\n    \n\n    \n        \n\n    \n        Leute hinzufügen\n        \n    \n\n    \n        Alle Mitglieder von ... hinzufügen\n        Bestimmte Leute hinzufügen\n         -->\n        \n        \n    \n\n    \n        Erstellen\n    \n\n\n    \n\n    \n                \n                    ./add-user-dialog.component.scss\n                \n                .addUserToChannelContainer {\n    width: 642px;\n    padding-bottom: 12px;\n}\n\n::ng-deep .mat-mdc-dialog-container {\n    display: unset;\n}\n\n::ng-deep .mat-mdc-dialog-container .mdc-dialog__surface {\n   width: unset;\n   height: unset;\n}\n\nadd-user-dialog-container {\n    width: 642px;\n    height: 285px;\n}\n\n.mat-mdc-dialog-surface.mdc-dialog__surface {\n    width: 642px;\n    height: 285px;\n}\n\n.radioButtonContainer {\n    display: flex;\n    flex-direction: column;\n    padding-left: 45px;\n\n}\n\n.headerContainer {\n    display: flex;\n    justify-content: space-between;\n}\n\n.close {\n    padding-right: 45px;\n    cursor: pointer;\n}\n\n.headerText {\n    padding-left: 45px;\n    color: black;\n}\n\n.addUserToSelection {\n    background-color: #444DF2;\n    height: 54px;\n    width: 125px;\n    border-radius: 30px;\n    color: white;\n    border: unset;\n    margin-right: 44px;\n\n    &:hover {\n        opacity: 0.85;\n        cursor: pointer;\n    }\n\n}\n\n.addUserToChannelDialogInput {\n    width: 94%;\n    height: 30px;\n    border-radius: 30px;\n    border: 1px solid #797EF3;\n    margin-top: 7px;\n}\n\n.addUserToSelectionContainer {\n    display: flex;\n    justify-content: flex-end;\n    padding-top: 20px;\n}\n\n@media only screen and (max-width: 768px) {\n\n    .addUserToChannelContainer{\n        width: 100vw;\n        height: fit-content;\n        position: fixed;\n        bottom: 0px;\n        left: 0px;\n        background-color: white;\n        border-radius: 30px 30px 0px 0px;       \n        padding-bottom: 48px;\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Leute hinzufügen                        Alle Mitglieder von ... hinzufügen        Bestimmte Leute hinzufügen         -->                                Erstellen    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddUserDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddreactionComponent.html":{"url":"components/AddreactionComponent.html","title":"component - AddreactionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddreactionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/message/addreaction/addreaction.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-addreaction\n            \n\n\n\n            \n                styleUrls\n                ./addreaction.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./addreaction.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _isOpened\n                            \n                            \n                                clickListener\n                            \n                            \n                                    \n                                emojiMartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emojiSelected\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                emojiInput$\n                            \n                            \n                                isOpened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emojiSelectedOutput\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isOpened\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        emojiInput$\n                    \n                \n                \n                    \n                        Type :     Subject | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isOpened\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emojiSelectedOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emojiSelected\n                        \n                    \n                \n            \n            \n                \nemojiSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an emoji.\nThis method is triggered when an emoji is selected. It:\n\nSends the selected emoji to the emojiInput$ Subject (if available).\nEmits the selected emoji using the emojiSelectedOutput EventEmitter.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object representing the selected emoji.\n\nThis method is triggered when an emoji is selected. It:\n\nSends the selected emoji to the emojiInput$ Subject (if available).\nEmits the selected emoji using the emojiSelectedOutput EventEmitter.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Remove the event listener in the ngOnDestroy hook to prevent memory leaks\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _isOpened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emojiMartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('container', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isOpened\n                    \n                \n\n                \n                    \n                        getisOpened()\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:38\n                                \n                            \n\n                \n                    \n                        setisOpened(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/message/addreaction/addreaction.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-addreaction',\n  templateUrl: './addreaction.component.html',\n  styleUrls: ['./addreaction.component.scss']\n})\nexport class AddreactionComponent {\n  public _isOpened = true;\n  @Input() emojiInput$: Subject | undefined;\n  @ViewChild('container', { static: true }) emojiMartElement: ElementRef | undefined;\n\n  @Output() emojiSelectedOutput: EventEmitter = new EventEmitter();\n  clickListener: any;\n\n  constructor(private renderer: Renderer2, private el: ElementRef) { }\n\n  // Define the isOpened property with a setter\n  @Input() set isOpened(value: boolean) {\n    if (this._isOpened !== value) {\n      this._isOpened = value;\n    }\n  }\n\n\n\n  ngAfterViewInit() {\n    this.clickListener = this.renderer.listen('document', 'click', (event: MouseEvent) => {\n      const emojiMartElement = this.el.nativeElement.querySelector('.picker');\n      if (emojiMartElement.contains(event.target as Node)) {\n      } else {\n        this.emojiSelectedOutput.emit(\"noSelection\");\n      }\n    });\n  }\n\n  get isOpened(): boolean {\n    return this._isOpened;\n  }\n\n\n  /**\n  * Handles the selection of an emoji.\n  *\n  * @param {any} event - The event object representing the selected emoji.\n  * \n  * This method is triggered when an emoji is selected. It:\n  * - Sends the selected emoji to the emojiInput$ Subject (if available).\n  * - Emits the selected emoji using the emojiSelectedOutput EventEmitter.\n  */\n  emojiSelected(event: any) {\n    this.emojiInput$?.next(event.emoji.native);\n    const selectedEmoji = event.emoji.native;\n    this.emojiSelectedOutput.emit(selectedEmoji);\n  }\n\n\n  /**\n   * Remove the event listener in the ngOnDestroy hook to prevent memory leaks\n   */\n  ngOnDestroy() {\n   \n    if (this.clickListener) {\n      this.clickListener();\n    }\n  }\n\n}\n\n    \n\n    \n          \n    \n\n    \n                \n                    ./addreaction.component.scss\n                \n                .reaction-container {\n    background-color: white;\n    border: solid 1px black;\n    border-radius: 30px;\n    margin: 10px;\n    padding: 16px;\n}\n\n.emoji-picker-container {\n    position: relative;\n    width: 24px;\n    height: 24px;\n\n    button {\n        background-color: transparent;\n        border: none;\n        cursor: pointer;\n        padding: 0;\n        margin: 0;\n\n        svg {\n            width: 24px;\n            height: 24px;\n\n            path {\n                fill: var(--str-chat__message-input-tools-color);\n            }\n        }\n    }\n\n    .picker {\n        z-index: 3;\n        position: absolute;\n        bottom: 100%;\n        transform: scale(0.8);\n        right: 0;\n        transform-origin: bottom right;\n    }\n\n    @media only screen and (min-device-width: 1024px) {\n        .picker {\n            transform: scale(1);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddreactionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/answer.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                avatar\n                            \n                            \n                                channels\n                            \n                            \n                                chats\n                            \n                            \n                                content\n                            \n                            \n                                fullName\n                            \n                            \n                                id\n                            \n                            \n                                mail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/answer.class.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/answer.class.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/answer.class.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; fullName: string; mail: string; avatar: string; channels: {}; chats: {}; content: string; answer: string; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Answer {\n\n    id: string;\n    fullName: string;\n    mail: string;\n    avatar: string;\n    channels: string[];\n    chats: string[];\n    content: string;\n    answer: string;\n\n    constructor(obj?: any) {\n        this.id = obj ? obj.id : \"\";\n        this.fullName = obj ? obj.fullName : \"\";\n        this.mail = obj ? obj.mail : \"\";\n        this.avatar = obj ? obj.avatar : \"assets/img/avatar/avatar0.svg\";\n        this.channels = obj ? obj.channels : [];\n        this.chats = obj ? obj.chats : [];\n        this.content = obj ? obj.mail : \"\";\n\n        this.answer = obj ? obj.answer : \"\";\n    }\n\n    toJSON() {\n        return {\n            id: this.id,\n            fullName: this.fullName,\n            mail: this.mail,\n            avatar: this.avatar,\n            channels: this.channels,\n            chats: this.chats,\n            content: this.content,\n            answer: this.answer\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'da-bubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'da-bubble';\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nActionHandlerComponent\n\nActionHandlerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionHandlerComponent->AppModule\n\n\n\n\n\nAddChannelDialogComponent\n\nAddChannelDialogComponent\n\nAppModule -->\n\nAddChannelDialogComponent->AppModule\n\n\n\n\n\nAddUserDialogComponent\n\nAddUserDialogComponent\n\nAppModule -->\n\nAddUserDialogComponent->AppModule\n\n\n\n\n\nAddreactionComponent\n\nAddreactionComponent\n\nAppModule -->\n\nAddreactionComponent->AppModule\n\n\n\nAppModule -->\n\nAddreactionComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAvatarChooseComponent\n\nAvatarChooseComponent\n\nAppModule -->\n\nAvatarChooseComponent->AppModule\n\n\n\n\n\nChannelComponent\n\nChannelComponent\n\nAppModule -->\n\nChannelComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nChatViewComponent\n\nChatViewComponent\n\nAppModule -->\n\nChatViewComponent->AppModule\n\n\n\n\n\nDateLineComponent\n\nDateLineComponent\n\nAppModule -->\n\nDateLineComponent->AppModule\n\n\n\n\n\nEditChannelComponent\n\nEditChannelComponent\n\nAppModule -->\n\nEditChannelComponent->AppModule\n\n\n\n\n\nEditChannelUsersComponent\n\nEditChannelUsersComponent\n\nAppModule -->\n\nEditChannelUsersComponent->AppModule\n\n\n\n\n\nEmptyWindowComponent\n\nEmptyWindowComponent\n\nAppModule -->\n\nEmptyWindowComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIfChangedDirective\n\nIfChangedDirective\n\nAppModule -->\n\nIfChangedDirective->AppModule\n\n\n\n\n\nImprintComponent\n\nImprintComponent\n\nAppModule -->\n\nImprintComponent->AppModule\n\n\n\n\n\nIntroComponent\n\nIntroComponent\n\nAppModule -->\n\nIntroComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainscreenComponent\n\nMainscreenComponent\n\nAppModule -->\n\nMainscreenComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nMessageCreateComponent\n\nMessageCreateComponent\n\nAppModule -->\n\nMessageCreateComponent->AppModule\n\n\n\n\n\nMessageEditComponent\n\nMessageEditComponent\n\nAppModule -->\n\nMessageEditComponent->AppModule\n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nAppModule -->\n\nPrivacyPolicyComponent->AppModule\n\n\n\n\n\nReactionComponent\n\nReactionComponent\n\nAppModule -->\n\nReactionComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nAppModule -->\n\nSearchbarComponent->AppModule\n\n\n\n\n\nShowChannelUsersComponent\n\nShowChannelUsersComponent\n\nAppModule -->\n\nShowChannelUsersComponent->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nStartscreenComponent\n\nStartscreenComponent\n\nAppModule -->\n\nStartscreenComponent->AppModule\n\n\n\n\n\nThreadComponent\n\nThreadComponent\n\nAppModule -->\n\nThreadComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nUserProfilComponent\n\nUserProfilComponent\n\nAppModule -->\n\nUserProfilComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n getDatabase()) -->\n\nprovideDatabase(() => getDatabase())\n\nprovideDatabase(() => getDatabase())\n\n getDatabase())->AppModule -->\n\nprovideDatabase(() => getDatabase())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionHandlerComponent\n                        \n                        \n                            AddChannelDialogComponent\n                        \n                        \n                            AddUserDialogComponent\n                        \n                        \n                            AddreactionComponent\n                        \n                        \n                            AddreactionComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AvatarChooseComponent\n                        \n                        \n                            ChannelComponent\n                        \n                        \n                            ChatComponent\n                        \n                        \n                            ChatViewComponent\n                        \n                        \n                            DateLineComponent\n                        \n                        \n                            EditChannelComponent\n                        \n                        \n                            EditChannelUsersComponent\n                        \n                        \n                            EmptyWindowComponent\n                        \n                        \n                            ForgotPasswordComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            IfChangedDirective\n                        \n                        \n                            ImprintComponent\n                        \n                        \n                            IntroComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MainscreenComponent\n                        \n                        \n                            MessageComponent\n                        \n                        \n                            MessageCreateComponent\n                        \n                        \n                            MessageEditComponent\n                        \n                        \n                            PrivacyPolicyComponent\n                        \n                        \n                            ReactionComponent\n                        \n                        \n                            RegisterComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                        \n                            ShowChannelUsersComponent\n                        \n                        \n                            SidenavComponent\n                        \n                        \n                            StartscreenComponent\n                        \n                        \n                            ThreadComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                        \n                            UserProfilComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                             getAuth()).html\">provideAuth(() => getAuth())\n                        \n                        \n                             getDatabase()).html\">provideDatabase(() => getDatabase())\n                        \n                        \n                             initializeApp(environment.html\">provideFirebaseApp(() => initializeApp(environment\n                        \n                        \n                             getFirestore()).html\">provideFirestore(() => getFirestore())\n                        \n                        \n                             getStorage()).html\">provideStorage(() => getStorage())\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { environment } from '../environments/environment';\nimport { provideAuth, getAuth } from '@angular/fire/auth';\nimport { provideFirestore, getFirestore } from '@angular/fire/firestore';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StartscreenComponent } from './startscreen/startscreen.component';\nimport { MainscreenComponent } from './mainscreen/mainscreen.component';\nimport { LoginComponent } from './startscreen/login/login.component';\nimport { RegisterComponent } from './startscreen/register/register.component';\nimport { SidenavComponent } from './mainscreen/sidenav/sidenav.component';\nimport { HeaderComponent } from './mainscreen/header/header.component';\nimport { ChannelComponent } from './mainscreen/channel/channel.component';\nimport { ThreadComponent } from './mainscreen/message/thread/thread.component';\nimport { ChatComponent } from './mainscreen/chat/chat.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ImprintComponent } from './startscreen/imprint/imprint.component';\nimport { PrivacyPolicyComponent } from './startscreen/privacy-policy/privacy-policy.component';\nimport { MessageComponent } from './mainscreen/message/message.component';\nimport { AvatarChooseComponent } from './startscreen/avatar-choose/avatar-choose.component';\nimport { getStorage, provideStorage } from '@angular/fire/storage';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { MessageCreateComponent } from './mainscreen/message/message-create/message-create.component';\nimport { DateLineComponent } from './mainscreen/message/date-line/date-line.component';\nimport { IfChangedDirective } from './directives/if-changed.directive';\nimport { ReactionComponent } from './mainscreen/message/reaction/reaction.component';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { ToolbarComponent } from './mainscreen/message/toolbar/toolbar.component';\nimport { AddreactionComponent } from './mainscreen/message/addreaction/addreaction.component';\nimport { ForgotPasswordComponent } from './startscreen/forgot-password/forgot-password.component';\nimport { PickerModule } from \"@ctrl/ngx-emoji-mart\";\nimport { ActionHandlerComponent } from './action-handler/action-handler.component';\nimport { SearchbarComponent } from './mainscreen/searchbar/searchbar.component';\nimport { ResetPasswordComponent } from './startscreen/reset-password/reset-password.component';\nimport { MessageEditComponent } from './mainscreen/message/message-edit/message-edit.component';\nimport { UserProfilComponent } from './mainscreen/user-profil/user-profil.component';\nimport { MentionModule } from 'angular-mentions';\nimport { getDatabase, provideDatabase } from '@angular/fire/database';\nimport { IntroComponent } from './startscreen/intro/intro.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { ChatViewComponent } from './mainscreen/sidenav/chat-view/chat-view.component';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport { EditChannelComponent } from './mainscreen/channel/edit-channel/edit-channel.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatChipsModule} from '@angular/material/chips';\nimport { EmptyWindowComponent } from './mainscreen/empty-window/empty-window.component';\nimport { EditChannelUsersComponent } from './mainscreen/channel/edit-channel-users/edit-channel-users.component';\nimport { ShowChannelUsersComponent } from './mainscreen/channel/show-channel-users/show-channel-users.component';\nimport { AddUserDialogComponent } from './mainscreen/channel/add-user-dialog/add-user-dialog.component';\nimport { AddChannelDialogComponent } from './mainscreen/channel/add-channel-dialog/add-channel-dialog.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartscreenComponent,\n    MainscreenComponent,\n    LoginComponent,\n    RegisterComponent,\n    SidenavComponent,\n    HeaderComponent,\n    ChannelComponent,\n    ThreadComponent,\n    ChatComponent,\n    ImprintComponent,\n    PrivacyPolicyComponent,\n    MessageComponent,\n    AvatarChooseComponent,\n    AddChannelDialogComponent,\n    DateLineComponent,\n    IfChangedDirective,\n    ReactionComponent,\n    ToolbarComponent,\n    AddreactionComponent,\n    ForgotPasswordComponent,\n    AddreactionComponent,\n    ActionHandlerComponent,\n    SearchbarComponent,\n    ResetPasswordComponent,\n    MessageCreateComponent,\n    MessageEditComponent,\n    UserProfilComponent,\n    IntroComponent,\n    ChatViewComponent,\n    EditChannelComponent,\n    EmptyWindowComponent,\n    EditChannelUsersComponent,\n    ShowChannelUsersComponent,\n    AddUserDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule,\n    ReactiveFormsModule,\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\n    provideAuth(() => getAuth()),\n    provideStorage(() => getStorage()),\n    provideFirestore(() => getFirestore()),\n    provideDatabase(() => getDatabase()),\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatBadgeModule,\n    MatToolbarModule,\n    PickerModule,\n    MentionModule,\n    MatAutocompleteModule, \n    MatTooltipModule,\n    MatRadioModule,\n    MatChipsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MainscreenComponent } from './mainscreen/mainscreen.component';\nimport { StartscreenComponent } from './startscreen/startscreen.component';\nimport { authGuard } from 'src/guard/auth-guard.guard';\nimport { ActionHandlerComponent } from './action-handler/action-handler.component';\nimport { ResetPasswordComponent } from './startscreen/reset-password/reset-password.component';\nimport { EditChannelComponent } from './mainscreen/channel/edit-channel/edit-channel.component';\n\nconst routes: Routes = [\n  //{ path: '', component: MainscreenComponent },\n   /** FOR PROD */ \n  { path: '', component: StartscreenComponent },\n  { path: 'index', component: MainscreenComponent, canActivate: [authGuard] },\n  { path: 'userMgmt', component: ActionHandlerComponent },\n  { path: 'reset/:oobCode', component: ResetPasswordComponent },\n  { path: 'editChannel', component: EditChannelComponent }\n]\n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarChooseComponent.html":{"url":"components/AvatarChooseComponent.html","title":"component - AvatarChooseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarChooseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/avatar-choose/avatar-choose.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-avatar-choose\n            \n\n\n\n            \n                styleUrls\n                ./avatar-choose.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./avatar-choose.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatars\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                user\n                            \n                            \n                                userName\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeAvatar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmitAvatar\n                            \n                            \n                                selectAvatar\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeAvatarView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageFirebaseService, userService: UserFirebaseService, notificationService: NotificationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeAvatarView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:33\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeAvatar\n                        \n                    \n                \n            \n            \n                \ncloseAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the avatar view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nDoes not perform any specific actions in this implementation.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmitAvatar\n                        \n                    \n                \n            \n            \n                \nonSubmitAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Submits the user's avatar update, marks the avatar as submitted, and navigates to the 'main' route after a delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAvatar\n                        \n                    \n                \n            \n            \n                \nselectAvatar(avatar: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Selects an avatar and updates the user's avatar property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                avatar\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected avatar's filename.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Uploads an image file and updates the user's avatar with the uploaded URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'avatar1.svg',\n    'avatar2.svg',\n    'avatar3.svg',\n    'avatar4.svg',\n    'avatar5.svg',\n    'avatar6.svg',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.registUser\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/avatar-choose/avatar-choose.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { StorageFirebaseService } from 'src/services/storage-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/services/notification.service';\n\n\n@Component({\n  selector: 'app-avatar-choose',\n  templateUrl: './avatar-choose.component.html',\n  styleUrls: ['./avatar-choose.component.scss'],\n})\nexport class AvatarChooseComponent implements OnInit {\n  user = this.userService.registUser;\n  userName: string = '';\n\n  avatars: string[] = [\n    'avatar1.svg',\n    'avatar2.svg',\n    'avatar3.svg',\n    'avatar4.svg',\n    'avatar5.svg',\n    'avatar6.svg',\n  ];\n  constructor(\n    private storageService: StorageFirebaseService, \n    public userService: UserFirebaseService,\n    private notificationService: NotificationService,\n    public router: Router) {\n    this.user.avatar = 'assets/img/avatar/avatar0.svg';\n  }\n\n  @Output() closeAvatarView = new EventEmitter();\n\n  /**\n * Emits an event to close the avatar view.\n * \n * @emits closeAvatarView\n * @returns {void}\n */\n  closeAvatar() {\n    this.closeAvatarView.emit();\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Does not perform any specific actions in this implementation.\n   * \n   * @returns {void}\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Selects an avatar and updates the user's avatar property.\n   * \n   * @param {string} avatar - The selected avatar's filename.\n   * @returns {void}\n   */\n  selectAvatar(avatar: string) {\n    this.user.avatar = 'assets/img/avatar/' + avatar;\n  }\n\n  /**\n   * Uploads an image file and updates the user's avatar with the uploaded URL.\n   * \n   * @param {HTMLInputElement} input\n   * @returns {Promise}\n   */\n  async uploadFile(input: HTMLInputElement) {\n    if (!input.files || input.files.length === 0) return;\n\n    const file = input.files[0];\n\n    try {\n      const url = await this.storageService.uploadIMGFile(file);\n      this.user.avatar = url;\n    } catch (error) {\n      console.error('Error uploading image: ', error);\n    }\n  }\n  /**\n   * Submits the user's avatar update, marks the avatar as submitted, and navigates to the 'main' route after a delay.\n   * \n   * @returns {void}\n   */\n  onSubmitAvatar() {\n    this.userService.update(this.user);\n    this.notificationService.renderNotification(\"Konto erfolgreich erstellt!\");\n\n    setTimeout(() => {\n      this.router.navigate(['index']);\n    }, 1500);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Wähle deinen Avatar\n    \n    \n      \n    \n    {{ userService.currentUser.fullName }}\n\n    \n      Aus der Liste wählen\n      \n        \n      \n    \n  \n\n  \n    eigenes Bild verwenden\n     Datei hochladen \n    \n  \n\n  \n    \n      Weiter\n    \n  \n\n\n    \n\n    \n                \n                    ./avatar-choose.component.scss\n                \n                .user-avatar-container {\n  max-width: 606px;\n  padding: 50px 53px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n}\n\n.user-avatar-title {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 20px;\n  gap: 32px;\n  align-items: center;\n\n  h1 {\n    font-size: 46px;\n    color: rgba(68, 77, 242, 1);\n    margin: 0px;\n  }\n}\n\n.user-uper-avatar-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  img {\n    position: relative;\n    left: -20px;\n  }\n}\n\n.avatar-box {\n  padding: 16px;\n  display: flex;\n  justify-content: center;\n\n  img {\n    border-radius: 100px;\n    width: 168px;\n    height: 168px;\n  }\n}\n\n.username-box{\n  font-size: 32px;\n  font-weight: 700;\n}\n\n.choose-avatar-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  justify-content: center;\n}\n\n.choose-avatar-text-box {\n  display: flex;\n  justify-content: flex-start;\n  width: 100%;\n  padding-left: 20px;\n  font-size: 20px;\n}\n\n.choose-avatar-box {\n  img {\n    border-radius: 100px;\n    max-height: 72px;\n    max-width: 72px;\n    cursor: pointer;\n    border: 5px solid transparent;\n    box-sizing: border-box;\n    margin: 0;\n    &:hover {\n      border: 4px solid rgba(173, 176, 217, 0.4);\n    }\n  }\n}\n\n.user-avatar-button-container {\n  display: flex;\n  justify-content: flex-end;\n  gap: 30px;\n}\n\n.blue-button {\n  border-radius: 25px;\n  padding: 12px 25px;\n  height: 49px;\n  font-size: 18px;\n  margin-top: 35px;\n  background-color: rgba(68, 77, 242, 1) !important;\n\n  &:hover {\n    background-color: rgba(121, 126, 243, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n  }\n\n  &.disabled-button {\n    background-color: gray !important;\n    cursor: not-allowed;\n  }\n}\n\n.choose-avatar-upload-container {\n  display: flex;\n  align-items: center;\n  gap: 24px;\n  padding-left: 20px;\n  margin-top: 30px;\n  font-size: 20px;\n  font-weight: 400px;\n}\n\n.white-button {\n  display: flex;\n  border-radius: 25px;\n  align-items: center;\n  padding: 12px 25px;\n  font-weight: 700;\n  max-height: 49px;\n  max-width: 137px;\n  font-size: 18px;\n  border: 1px solid rgba(68, 77, 242, 1) !important ;\n  background-color: white;\n  color: rgba(68, 77, 242, 1);\n  cursor: pointer;\n  white-space: nowrap;\n\n  &:hover {\n    background-color: rgba(68, 77, 242, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n    color: white;\n  }\n}\n\n.br-30 {\n  border-radius: 30px;\n}\n\n@keyframes slide-in {\n  0% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slide-out {\n  0% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n}\n\n.success-message {\n  display: flex;\n  position: absolute;\n  right: 0px;\n  justify-content: center;\n  z-index: 100;\n  padding: 50px;\n  border-radius: 30px 30px 0px 30px;\n  max-width: 530px;\n  background: rgba(68, 77, 242, 1);\n  color: rgba(255, 255, 255, 1);\n  font-size: 36px;\n  box-shadow: 0px 6px 10px 0px rgba(0, 0, 0, 0.2);\n  animation: slide-in 0.4s ease-in-out, slide-out 0.4s ease-in-out 1.5s;\n  font-weight: 700;\n}\n\n\n@media screen and (max-width: 640px) {\n\n  .user-avatar-container{\n    margin: 0px 16px;\n    padding: 26px 21px;\n    margin-bottom: 100px;\n  }\n\n  .user-avatar-title {\n    gap: 24px;\n    \n    h1 {\n      font-size: 32px;\n      font-weight: bold;\n      max-width: 218px;\n    }\n  }\n\n  .user-uper-avatar-title{\n\n    img{\n      position: absolute;\n      left: 20px;\n      top: 35px;}\n    \n  }\n\n  .avatar-box{\n    padding: 0px;\n    img{\n      max-width: 120px;\n      max-height: 120px;\n    }\n  }\n\n  .choose-avatar-container{\n    gap: 0px;\n    justify-content: space-between;\n  }\n\n  .choose-avatar-text-box{\n    padding-left: 0px;\n    margin-bottom: 16px;\n  }\n\n  .choose-avatar-box{\n    \n    img{\n      max-height: 56px;\n      max-width: 56px;\n    }\n}\n\n.choose-avatar-upload-container{\n  gap: 5px;\n  padding-left: 0px;\n  margin-top: 24px;\n  justify-content: space-between;\n}\n\n\n.success-message {\n  padding: 20px 30px;\n  max-width: 323px;\n  font-size: 22px;\n  top: 880px;\n}\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Wähle deinen Avatar                      {{ userService.currentUser.fullName }}          Aus der Liste wählen                                eigenes Bild verwenden     Datei hochladen                   Weiter      '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'AvatarChooseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Channel.html":{"url":"classes/Channel.html","title":"class - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/channel.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Chat\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelDescription\n                            \n                            \n                                channelName\n                            \n                            \n                                creatorOfChannel\n                            \n                            \n                                timestamp\n                            \n                            \n                                id\n                            \n                            \n                                messages\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/channel.class.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatorOfChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/channel.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Chat\n\n                            \n                        \n                    \n                        \n                                Defined in         Chat:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Chat\n\n                            \n                        \n                    \n                        \n                                Defined in         Chat:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Chat\n\n                            \n                        \n                    \n                        \n                                Defined in         Chat:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    toJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Chat\n\n                        \n                    \n                    \n                        \n                                Defined in         Chat:17\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         { id: any; channelName: string; channelDescription: string; creatorOfChannel: string; messages: any; users: any; timestamp: number; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Chat } from \"./chat.class\";\n\nexport class Channel extends Chat {\n    channelName: string;\n    channelDescription: string;\n    creatorOfChannel: string;\n    timestamp: number;\n\n    constructor(data: any = {}) {\n        super(data);\n        this.channelName = data ? data.channelName : \"\";\n        this.channelDescription = data ? data.channelDescription : \"\";\n        this.creatorOfChannel =  data ? data.creatorOfChannel : \"\";\n        this.timestamp = data ? data.timestamp : \"\";\n    }\n\n    override toJSON() {\n        return {\n            id: this.id,\n            channelName: this.channelName,\n            channelDescription: this.channelDescription,\n            creatorOfChannel: this.creatorOfChannel,\n            messages: this.messages,\n            users: this.users,\n            timestamp: this.timestamp\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Chat.html":{"url":"classes/Chat.html","title":"class - Chat","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Chat\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/chat.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                messages\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/chat.class.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/chat.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/chat.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/chat.class.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/chat.class.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; messages: {}; users: {}; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Message } from \"./message.class\";\nimport { User } from \"./user.class\";\n\nexport class Chat {\n    id: string;\n    messages: string[];\n    users: string[];\n\n    constructor(data?: any) {\n        this.id = data.id || \"\";\n        this.messages = data.messages || [];\n        this.users = data.users || [];\n    }\n\n    toJSON() {\n        return {\n            id: this.id,\n            messages: this.messages,\n            users: this.users\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatComponent.html":{"url":"components/ChatComponent.html","title":"component - ChatComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/chat/chat.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                IfChangedService\n                \n            \n\n\n            \n                selector\n                app-chat\n            \n\n\n\n            \n                styleUrls\n                ./chat.component.scss,../../../styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chatPartner\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                    Public\n                                formatService\n                            \n                            \n                                memberName\n                            \n                            \n                                messagePath\n                            \n                            \n                                messageTime\n                            \n                            \n                                searchResults\n                            \n                            \n                                searchText\n                            \n                            \n                                selectedChat\n                            \n                            \n                                    Private\n                                selectedChatSubscription\n                            \n                            \n                                testData\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessageTime\n                            \n                            \n                                initChat\n                            \n                            \n                                    Private\n                                    Async\n                                loadChat\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openProfil\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chatService: ChatFirebaseService, userService: UserFirebaseService, userProfileService: UserProfileService, activeSelectionService: ActiveSelectionService, formatService: FormatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/chat/chat.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeSelectionService\n                                                  \n                                                        \n                                                                        ActiveSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formatService\n                                                  \n                                                        \n                                                                        FormatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageTime\n                        \n                    \n                \n            \n            \n                \ngetMessageTime(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/chat/chat.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Returns the time (in a formated form) of a given Message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nmessage for that a Time is needed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nTime or string \"heute\" when it is today.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initChat\n                        \n                    \n                \n            \n            \n                \ninitChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/chat/chat.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadChat\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadChat(newSelectedChat: Chat)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/chat/chat.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Loads a given chat and opens ist.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newSelectedChat\n                                            \n                                                            Chat\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nChat that should be loaded\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/chat/chat.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Unsubscribe from chat update on destroy\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfil\n                        \n                    \n                \n            \n            \n                \nopenProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/chat/chat.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Opens profile of chatparter.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chatPartner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormatService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        memberName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messagePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedChat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Chat | undefined | null\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedChatSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"hallo\", \"Test\", \"Search\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/chat/chat.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ObserversModule } from '@angular/cdk/observers';\nimport { Component } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Chat } from 'src/models/chat.class';\nimport { Message } from 'src/models/message.class';\nimport { User } from 'src/models/user.class';\nimport { ActiveSelectionService } from 'src/services/active-selection.service';\nimport { ChatFirebaseService } from 'src/services/chat-firebase.service';\nimport { FormatService } from 'src/services/format.service';\nimport { IfChangedService } from 'src/services/if-changed-service.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { UserProfileService } from 'src/services/user-profile.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss', '../../../styles.scss'],\n  providers: [IfChangedService]\n})\nexport class ChatComponent {\n\n  messageTime: string = \"\";\n  messagePath: string = \"\";\n  memberName: string = \"\";\n\n  chatPartner: User | undefined;\n  selectedChat: Chat | undefined | null = undefined;\n\n  private selectedChatSubscription: Subscription | undefined;\n\n  searchText: string = \"\";\n  searchResults: string[] = [];\n  testData: string[] = [\"hallo\", \"Test\", \"Search\"];\n\n  constructor(\n    public chatService: ChatFirebaseService,\n    public userService: UserFirebaseService,\n    private userProfileService: UserProfileService,\n    private activeSelectionService: ActiveSelectionService,\n    public formatService: FormatService\n  ) {\n    this.initChat();\n  }\n\n\n  initChat() {\n    //On init the Observable Value doesnt change but gets set so it has toe be done once\n    if (this.activeSelectionService.getActiveSelectionObject() instanceof Chat) {\n      this.selectedChat = this.activeSelectionService.getActiveSelectionObject();\n      if (this.selectedChat) {\n        this.loadChat(this.selectedChat);\n      }\n    }\n\n    this.selectedChatSubscription = this.chatService.selectedChat$.subscribe((chat) => {\n      this.selectedChat = chat;\n      // Perform actions when the selected chat changes in the chat component\n      // For example, update the chat messages in the UI\n      this.loadChat(this.selectedChat);\n    });\n  }\n\n  \n  /**\n   * Loads a given chat and opens ist. \n   * @param newSelectedChat - Chat that should be loaded\n   */\n  private async loadChat(newSelectedChat: Chat) {\n    if (newSelectedChat != null) {\n      this.chatService.loadChatMessages(newSelectedChat.id);\n      this.messagePath = `chats/${newSelectedChat.id}/messages/`;\n      try {\n        const chatPartner = await this.userService.getUserByUID(this.chatService.getChatPartner(newSelectedChat));\n        this.chatPartner = chatPartner;\n      } catch (error) {\n        console.error(\"Error loading chat:\", error);\n      }\n    }\n  }\n\n\n  /**\n   * Opens profile of chatparter. \n   */\n  openProfil() {\n    if (this.chatPartner) {\n      this.userProfileService.openUserProfil(this.chatPartner);\n    }\n  }\n\n\n   /**\n   * Returns the time (in a formated form) of a given Message. \n   * @param message - message for that a Time is needed.\n   * @returns - Time or string \"heute\" when it is today. \n   */\n  getMessageTime(message: Message) {\n    const currentDay = this.formatService.formatDateToDMY(new Date());\n    const messageDmy = this.formatService.formatDateToDMY(new Date(message.timestamp));\n    if (currentDay == messageDmy) {\n      return \"heute\";\n    } else {\n      return messageDmy;\n    }\n  }\n\n\n  /**\n   * Unsubscribe from chat update on destroy \n   */\n  ngOnDestroy() {\n    if(this.selectedChatSubscription){\n      this.selectedChatSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                #{{formatService.cutStrLen(chatPartner.fullName)}}\n                &nbsp;(Du)\n            \n        \n    \n\n    \n        \n\n        0; else emptyChat\">\n\n            \n                \n                \n                    \n                \n            \n\n            \n            \n        \n\n        \n            \n            \n                \n                    \n                    \n                    {{ chatPartner.fullName }}\n                    &nbsp;(Du)\n                \n                \n                    \n                        Diese Unterhaltung findet nur zwischen @ {{formatService.cutStrLen(chatPartner.fullName)}} und dir statt.\n                    \n                    \n                        Dieser Raum ist nur für dich da. Mache dir Notizen, liste deine To-dos auf oder bewahre Links und Dateien griffbereit auf. Du kannst hier auch gerne Dinge mit dir selbst besprechen.\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./chat.component.scss\n                \n                #chat {\n    height: 100%;\n    flex-grow: 1;\n    display: flex;\n    justify-content: flex-end;\n    flex-direction: column;\n    border-radius: 30px;\n\n    .header {\n        box-shadow: rgba(0, 0, 0, 0.8) 0 2px 23px -10px;\n        padding: 0px 35px 0px 35px;\n        border-radius: 30px 30px 0 0;\n        display: flex;\n        justify-content: space-between;\n\n        .header-title {\n            display: flex;\n            align-items: center;\n\n            #header-title-chatpartner-name{\n                margin: 24px 0px;\n                padding: 0px 12px;\n                border-radius: 32px;\n                display: flex;\n                flex-direction: row;\n                &:hover{\n                    cursor: pointer;\n                    background-color: #ECEEFE;\n                }\n                h2{\n                    margin: 0px;\n                }\n            }\n        }\n\n        .user-avatar-list {\n            display: flex;\n            align-items: center;\n\n            padding: 11px;\n            border-radius: 30px;\n            margin-right: 22px;\n\n            &:hover {\n                background-color: #ECEEFE;\n                cursor: pointer;\n            }\n        }\n    }\n\n    .amoundOfUsersInChannel {\n        font-size: 20px;\n        padding-left: 10px;\n    }\n\n    .chat-container {\n        overflow-y: auto;\n        height: 100%;\n        display: flex;\n        flex-direction: column-reverse;\n        width: 100%;\n\n        app-date-line {\n            margin: 12px 35px 12px 35px;\n        }\n\n        .user-display {\n            margin: 12px 35px 12px 35px;\n            display: flex;\n            flex-direction: column;\n            gap:12px; \n\n            .user-header {\n                display: flex;\n                flex-direction: row;\n                gap: 8px;\n\n                img {\n                    height: 70px;\n                    aspect-ratio: 1;\n                    object-fit: cover;\n                    border-radius: 50%;\n                }\n            }\n        }\n\n\n    }\n\n    app-message-create {\n        padding: 35px 35px 35px 35px;\n    }\n}\n\n\n.align-bottom {\n    position: sticky;\n    bottom: 0;\n}\n\n.chat-container {\n    overflow-y: auto;\n    height: 100%;\n    display: flex;\n    flex-direction: column-reverse;\n    width: 100%;\n}\n\n.avatar-img {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    object-fit: cover;\n    position: relative;\n}\n\n.addmembers {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    object-fit: cover;\n}\n\n.header {\n    padding: 0px 35px 0px 35px;\n    display: flex;\n    justify-content: space-between;\n\n    .header-title {\n        display: flex;\n        align-items: center;\n    }\n\n    .user-avatar-list {\n        display: flex;\n        align-items: center;\n    }\n}\n\n\napp-message-create {\n    padding: 0px 35px 0px 35px;\n}\n\n::ng-deep .mat-mdc-menu-content.ng-tns-c2786309385-0 {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 8px;\n    border-bottom-left-radius: 8px;\n}\n\n::ng-deep div#mat-menu-panel-0 {\n    border-top-left-radius: 35px;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 35px;\n    border-bottom-left-radius: 35px;\n}\n\n::ng-deep .menuHeader.ng-tns-c2786309385-0 {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n}\n\n.menuHeaderText {\n    padding-left: 45px;\n}\n\n.close {\n    padding-right: 45px;\n    cursor: pointer;\n}\n\n::ng-deep .menuHeader.ng-tns-c2786309385-1 {\n    display: flex;\n    justify-content: space-between;\n}\n\n.headerText {\n    padding-left: 45px;\n}\n\n.closeMenu {\n    padding-right: 45px;\n    cursor: pointer;\n}\n\n.resultUserImages {\n    width: 20px;\n    border-radius: 15px;\n}\n\n.menuUsersContainer {\n    display: flex;\n    flex-direction: column;\n}\n\n.menuUsers {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: 100%;\n}\n\n.menuUsersImage {\n    padding-left: 20px;\n    width: 60px;\n}\n\n.menuUsersName {\n    padding-left: 20px;\n}\n\n.addMemberContainer {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    width: 100%;\n    padding-top: 30px;\n}\n\n.addMemberImage {\n    padding-left: 20px;\n    width: 30px;\n}\n\n.addMemberInMenu {\n    display: flex;\n    align-items: center;\n    padding-top: 21px;\n    cursor: pointer;\n}\n\n\n.addMemberText {\n    padding-left: 20px;\n}\n\n.containerOfInput {\n    position: relative;\n    width: 100%;\n    height: 48px;\n    padding-top: 30px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.inputContainer {\n    width: 75%;\n    height: 42px;\n}\n\n.memberNameInput {\n    width: 100%;\n    height: 100%;\n    border-radius: 30px;\n    border: 1px solid #797EF3;\n}\n\n.inputAvatar {\n    width: 28px;\n    height: 25px;\n    border-radius: 15px;\n}\n\n.inputContent {\n    display: flex;\n    align-items: center;\n    padding-left: 15px;\n    background-color: #ECEEFE;\n    border-radius: 25px;\n    height: 35%;\n    width: 39%;\n    top: 39px;\n    left: 77px;\n\n    position: absolute;\n}\n\n::ng-deep .mat-mdc-menu-content.ng-tns-c2786309385-1 {\n    width: 280px;\n}\n\n#header-searchfield-results {\n    position: relative;\n    border-radius: 42px;\n    padding-left: 24px;\n    padding-right: 24px;\n    width: calc(100% - 48px);\n    background-color: white;\n    z-index: 10;\n    padding-bottom: 12px;\n    padding-top: 12px;\n    margin-top: 12px;\n\n    p {\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-top: 12px;\n        padding-bottom: 12px;\n        display: flex;\n        align-items: center;\n        margin: 0px;\n\n        &:hover {\n            background: rgba(166, 166, 166, 0.456);\n            border-radius: 42px;\n        }\n    }\n}\n\n#header-searchfield-results-Menu {\n    position: relative;\n    border-radius: 42px;\n    padding-left: 24px;\n    padding-right: 24px;\n    width: calc(100% - 48px);\n    background-color: white;\n    z-index: 10;\n    padding-bottom: 12px;\n    padding-top: 12px;\n    margin-top: 68px;\n\n    p {\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-top: 12px;\n        padding-bottom: 12px;\n        display: flex;\n        align-items: center;\n        margin: 0px;\n\n        &:hover {\n            background: rgba(166, 166, 166, 0.456);\n            border-radius: 42px;\n        }\n    }\n}\n\n::ng-deep .mat-mdc-menu-panel {\n    width: 496px !important;\n    height: 310px !important;\n    min-width: unset !important;\n    max-width: unset !important;\n\n    border-top-left-radius: 35px !important;\n    border-top-right-radius: 0 !important;\n    border-bottom-right-radius: 35px !important;\n    border-bottom-left-radius: 35px !important;\n\n}\n\n::ng-deep .mat-mdc-menu-content.ng-tns-c2786309385-1 {\n    width: 100%;\n}\n\n.channelName {\n    color: #797EF3;\n    padding-left: 45px;\n}\n\n.addSelection {\n    background-color: #444DF2;\n    height: 54px;\n    width: 125px;\n    border-radius: 30px;\n    color: white;\n    border: unset;\n    position: absolute;\n    right: 57px;\n    bottom: 78px;\n\n    &:hover {\n        opacity: 0.85;\n        cursor: pointer;\n    }\n\n}\n\n.inputContainerMaster {\n    width: 100%;\n}\n\n.cancelSelection {}\n                \n                    ../../../styles.scss\n                \n                @use '@angular/material' as mat;\n\n@import \"@ctrl/ngx-emoji-mart/picker\";\n\n@font-face {\n    font-family: 'Nunito';\n    src: url('assets/fonts/nunito-v26-latin-regular.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 200;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-200.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 300;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-300.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 500;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-500.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 600;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-600.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito Sans';\n    src: url('assets/fonts/nunito-sans-v15-latin-regular.woff2');\n}\n\n/* You can add global styles to this file, and also import other style files */\n\nhtml,\nbody {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    background-color: #edeefe;\n}\n\n.dsp-none{\n    display: none;\n}\n\ninput {\n    font-family: 'Nunito', sans-serif;\n}\n\ntextarea {\n    font-family: 'Nunito', sans-serif;\n}\n\nbutton{\n    font-family: 'Nunito', sans-serif;\n}\n\n.br-30 {\n    border-radius: 30px;\n}\n\n.btn-blue{\n    background-color: #444DF2; \n    color: white;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid white;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(121, 126, 243, 1) !important;\n        transition: background-color 0.15s ease-in-out\n    }\n}\n.btn-white{\n    background-color: white; \n    color: #444DF2;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid #444DF2;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(68, 77, 242, 1) !important;\n        transition: background-color 0.15s ease-in-out;\n        color: white !important;\n    }\n}\n\n.closeIcon-container{\n    padding: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    cursor: pointer;\n    min-width: 30px;\n    min-height: 30px;\n\n    &:hover{\n        background-color: #ECEEFE; \n        #closeIcon path {\n            fill: #535AF1; \n            }\n    }\n\n    #closeIcon{\n        width: 24px;\n        height: 24px;\n    }\n}\n\n\n.highlighted {\n    background-color: yellow;\n  }\n  .highlight-container {\n    margin-top: 10px;\n  }\n\n\n\n.notification-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    pointer-events: none;\n\n    .notification-card {\n        z-index: 99;\n        position: relative;\n        top: 70%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: fit-content;\n        opacity: 0;\n\n        .notification-card-content {\n            font-weight: 500;\n            font-size: 24px;\n        }\n    }\n\n\n\n    //Available animation types\n    @keyframes shift-left-in {\n        0% {\n            opacity: 0;\n            left: -10%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: -10%;\n        }\n    }\n\n    @keyframes shift-up {\n        0% {\n            opacity: 0;\n            top: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n        }\n\n        70% {\n            top: 70%;\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            top: 110%;\n        }\n    }\n\n    @keyframes shift-right-in {\n        0% {\n            opacity: 0;\n            left: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: 110%;\n        }\n    }\n    \n\n    //Types of Messages\n    .error {\n        background-color: rgb(255, 66, 66);\n        color: white;\n    }\n\n    .success {\n        background-color: #4f9d00;\n        border: solid 1px #00d84f;\n        color: white;\n    }\n\n    .default {\n        background-color: #444DF2;\n        border-radius: 30px 30px 0px 30px;\n        padding: 25px;\n        border: none;\n        color: white;\n        margin-left: 8px;\n        margin-right: 8px;\n    }\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        #{{formatService.cutStrLen(chatPartner.fullName)}}                 (Du)                                            0; else emptyChat\">                                                                                                                                                                                                                                        {{ chatPartner.fullName }}                     (Du)                                                                            Diese Unterhaltung findet nur zwischen @ {{formatService.cutStrLen(chatPartner.fullName)}} und dir statt.                                                                Dieser Raum ist nur für dich da. Mache dir Notizen, liste deine To-dos auf oder bewahre Links und Dateien griffbereit auf. Du kannst hier auch gerne Dinge mit dir selbst besprechen.                                                            '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChatViewComponent.html":{"url":"components/ChatViewComponent.html","title":"component - ChatViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChatViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/sidenav/chat-view/chat-view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-view\n            \n\n\n\n            \n                styleUrls\n                ./chat-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshIntervall\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkStatus\n                            \n                            \n                                    Async\n                                openUserProfil\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                uId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    uId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserFirebaseService, userProfileService: UserProfileService, userStatusService: UserStatusFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userStatusService\n                                                  \n                                                        \n                                                                        UserStatusFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        uId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkStatus\n                        \n                    \n                \n            \n            \n                \ncheckStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Refreshes the user status in a defined intervall.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openUserProfil\n                        \n                    \n                \n            \n            \n                \n                        \n                    openUserProfil(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Opens the user profile for the specified user using the UserProfileService.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshIntervall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5000\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        uId\n                    \n                \n\n\n                \n                    \n                        setuId(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/sidenav/chat-view/chat-view.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { User } from 'src/models/user.class';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { UserProfileService } from 'src/services/user-profile.service';\nimport { UserStatusFirebaseService } from 'src/services/user-status-firebase.service';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@Component({\n  selector: 'app-chat-view',\n  templateUrl: './chat-view.component.html',\n  styleUrls: ['./chat-view.component.scss']\n})\nexport class ChatViewComponent{\n\n  user: User = new User(); \n  refreshIntervall = 5000;  \n\n  constructor(\n    public userService: UserFirebaseService,\n    private userProfileService: UserProfileService, \n    private userStatusService: UserStatusFirebaseService\n  ) {\n\n  }\n\n  @Input() set uId(value: string) {\n\n    // Use Promise directly, as getUserByUID returns a Promise\n    this.userService.getUserByUID(value)\n      .then((loadedUser: User) => {\n        this.user = loadedUser;\n        //Get Userstatus\n        this.userStatusService.getUserStatus(value)\n        .then((result) => {\n          this.user!.status = result;\n          this.checkStatus(); \n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      })\n      .catch((error) => {\n        console.error('Error loading user:', error);\n      });\n  }\n\n\n  /**\n  * Opens the user profile for the specified user using the UserProfileService.\n  */\n  async openUserProfil(user: User) {\n    this.userProfileService.openUserProfil(user);\n  }\n\n\n  /**\n   * Refreshes the user status in a defined intervall. \n   */\n  checkStatus(){\n    setInterval(() => {\n      if(this.user.id != null || this.user.id != undefined ){\n        this.userStatusService.getUserStatus(this.user.id)\n        .then((result) => {\n          this.user!.status = result;\n          //console.log(this.user.id +  \" \" + result);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      }\n    }, this.refreshIntervall);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n    \n        {{user.fullName}}\n        &nbsp;(Du)\n    \n\n    \n\n    \n                \n                    ./chat-view.component.scss\n                \n                .message {\n    \n    width: 240px;\n    height: 60px;\n    border-radius: 37px;\n    margin-top: 8px;\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    gap:12px; \n    \n    padding-left: 12px;\n    padding-right: 12px;\n    padding-top: 4px;\n\n    &:hover {\n        background-color: rgba(155, 150, 250, 0.37);\n        cursor: pointer;\n    }\n\n    .avatar0 {\n        height: 50px;\n        width: 50px;\n        border-radius: 50%;\n        object-fit: cover;\n    }\n    #header-user-icon {\n        position: relative;\n\n        img {\n            width: 50px;\n            border-radius: 50%;\n        }\n\n        #header-status {\n            position: absolute;\n            bottom: 4px;\n            right: 4px;\n            min-width: 10px;\n            min-height: 10px;\n            border-radius: 50%;\n            z-index: 10;\n            border: 1px solid white;\n        }\n    }\n    #header-user-name{\n        display: flex;\n    }\n}\n\n.col-red{\n    color: red;\n    background-color: red\n   \n}\n.col-green{\n    color: green;\n    background-color: green;\n}\n.col-gray{\n    color: gray;\n    background-color: gray;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            {{user.fullName}}         (Du)    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChatViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateLineComponent.html":{"url":"components/DateLineComponent.html","title":"component - DateLineComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DateLineComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/message/date-line/date-line.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-date-line\n            \n\n\n\n            \n                styleUrls\n                ./date-line.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./date-line.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDayTimeString\n                            \n                            \n                                messageTimeString\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                messageTime\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    messageTime\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formatService: FormatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/message/date-line/date-line.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formatService\n                                                  \n                                                        \n                                                                        FormatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        messageTime\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/date-line/date-line.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDayTimeString\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.formatService.formatDateToDMY(new Date())\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/date-line/date-line.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageTimeString\n                        \n                    \n                \n            \n                \n                    \n                        Type :     String | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/date-line/date-line.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        messageTime\n                    \n                \n\n\n                \n                    \n                        setmessageTime(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/message/date-line/date-line.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Message } from 'src/models/message.class';\nimport { FormatService } from 'src/services/format.service';\n\n@Component({\n  selector: 'app-date-line',\n  templateUrl: './date-line.component.html',\n  styleUrls: ['./date-line.component.scss']\n})\nexport class DateLineComponent{\n\n  constructor(\n    private formatService: FormatService\n    ){}\n\n  messageTimeString: String | undefined;\n  currentDayTimeString: string = this.formatService.formatDateToDMY(new Date());\n\n  @Input()\n  public set messageTime(value: string) {\n    this.messageTimeString=value;\n  }\n}\n\n    \n\n    \n        \n\n    \n    {{ messageTimeString }}\n\n    \n\n    \n\n    \n                \n                    ./date-line.component.scss\n                \n                .line-container {\n    display: flex;\n    justify-content: center;\n    position: relative;\n\n    .date {\n        border: 1px solid #ADB0D9;\n        border-radius: 30px;\n        padding: 5px 15px 5px 15px;\n        background-color: white;\n        z-index: 2;\n    }\n\n    .line {\n        top: calc(50% - 0.5px);\n        position: absolute;\n        width: calc( 100% - 1px);\n        padding: 0.5px;\n        background-color: #ADB0D9;\n        z-index: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ messageTimeString }}    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'DateLineComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditChannelComponent.html":{"url":"components/EditChannelComponent.html","title":"component - EditChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/channel/edit-channel/edit-channel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-channel\n            \n\n\n\n            \n                styleUrls\n                ./edit-channel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-channel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                channelCreatorName\n                            \n                            \n                                editChannelDescription\n                            \n                            \n                                editChannelName\n                            \n                            \n                                NewChannelDescription\n                            \n                            \n                                NewChannelName\n                            \n                            \n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                getCurrentUserChannel\n                            \n                            \n                                leaveChannel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddMemberMenu\n                            \n                            \n                                    Async\n                                saveChannelDescription\n                            \n                            \n                                    Async\n                                saveChannelName\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addUserEvent\n                            \n                            \n                                closeEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, userService: UserFirebaseService, windowSizeService: WindowSizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:26\n                            \n                        \n\n                \n                    \n                            Declares services and subsribe for user window size, for switching between desktop and mobile view.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowSizeService\n                                                  \n                                                        \n                                                                        WindowSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addUserEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Closes edit channel-dialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUserChannel\n                        \n                    \n                \n            \n            \n                \ngetCurrentUserChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:116\n                        \n                    \n\n\n            \n                \n                        returns the useres array of the current selected channel.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leaveChannel\n                        \n                    \n                \n            \n            \n                \nleaveChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Leave selectedChannel\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Sets information of the selected channel in this component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMemberMenu\n                        \n                    \n                \n            \n            \n                \nopenAddMemberMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Move to edit channel users component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveChannelDescription\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveChannelDescription()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Saves the description of the description input field.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveChannelName\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveChannelName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Saves the channel name from input field.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Channel()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelCreatorName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editChannelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editChannelName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NewChannelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NewChannelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel/edit-channel.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Channel } from 'src/models/channel.class';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { WindowSizeService } from 'src/services/window-size.service';\n\n@Component({\n  selector: 'app-edit-channel',\n  templateUrl: './edit-channel.component.html',\n  styleUrls: ['./edit-channel.component.scss']\n})\nexport class EditChannelComponent implements OnInit {\n\n  @Output() closeEvent = new EventEmitter();\n  @Output() addUserEvent = new EventEmitter();\n\n  channel = new Channel();\n  editChannelDescription = false;\n  editChannelName = false;\n  \n\n  NewChannelName: string = \"\";\n  NewChannelDescription: string = \"\";\n  channelCreatorName = \"\";\n\n  windowWidth: any;\n\n  /**\n   * Declares services and subsribe for user window size, for switching between desktop and mobile view. \n   * @param channelService \n   * @param userService \n   * @param windowSizeService \n   */\n  constructor(\n    private channelService: ChannelFirebaseService,\n    private userService: UserFirebaseService,\n    private windowSizeService: WindowSizeService\n  ) {\n    this.windowSizeService.windowWidth$.subscribe(windowWidth => {\n      this.windowWidth = windowWidth;\n    });\n    this.windowSizeService.setWindowSize();\n  }\n\n  /**\n   * Sets information of the selected channel in this component. \n   */\n  ngOnInit(): void {\n    if (this.channelService.selectedChannel) {\n      this.channel = this.channelService.selectedChannel;\n      this.NewChannelName = this.channelService.selectedChannel.channelName;\n      this.NewChannelDescription = this.channelService.selectedChannel.channelDescription;\n      this.userService.getUserByUID(this.channelService.selectedChannel.creatorOfChannel)\n        .then((user) => {\n          this.channelCreatorName = user.fullName;\n        })\n    }\n  }\n\n\n  /**\n   * Closes edit channel-dialog\n   */\n  close() {\n    this.closeEvent.emit();\n  }\n\n\n  /**\n   * Leave selectedChannel\n   */\n  leaveChannel() {\n    this.channelService.leaveSelectedChannel();\n    this.close();\n  }\n\n\n  /**\n   * Saves the channel name from input field. \n   */\n  async saveChannelName() {\n    if (this.channelService.selectedChannel) {\n      this.channelService.selectedChannel.channelName = this.NewChannelName;\n      await this.channelService.updateChannel(this.channelService.selectedChannel);\n      this.channel = this.channelService.selectedChannel;\n    }\n    this.editChannelName = false;\n  }\n\n\n  /**\n   * Saves the description of the description input field. \n   */\n  async saveChannelDescription() {\n    if (this.channelService.selectedChannel) {\n      this.channelService.selectedChannel.channelDescription = this.NewChannelDescription;\n      await this.channelService.updateChannel(this.channelService.selectedChannel);\n      this.channel = this.channelService.selectedChannel;\n    }\n    this.editChannelDescription = false;\n  }\n\n\n  /**\n   * Move to edit channel users component\n   */\n  openAddMemberMenu() {\n    this.addUserEvent.emit();\n    this.close();\n  }\n\n\n  /**\n   * returns the useres array of the current selected channel. \n   */\n  getCurrentUserChannel() {\n    return this.channelService.userOnCurrentChannel\n  }\n}\n\n    \n\n    \n        \n    \n        \n        #{{ channel.channelName }}\n        \n        \n            \n                \n            \n            \n                \n            \n        \n        \n    \n\n    \n        \n            Channel-Name\n            Bearbeiten\n        \n        # {{ channel.channelName }}\n    \n    \n        \n            Channel-Name\n            Speichern\n        \n        \n            \n           \n                #\n           \n        \n    \n    \n        \n            Beschreibung\n            Bearbeiten\n        \n        {{channel.channelDescription}}\n        \n            \n        \n        \n            Erstellt von\n            {{channelCreatorName}}\n        \n    \n    \n        \n            Beschreibung\n            Speichern\n        \n        \n            \n        \n        \n            \n        \n        \n            Erstellt von\n            {{channelCreatorName}}\n        \n    \n    \n        Mitglieder\n        \n            \n            \n            \n                \n                    \n                    Teilnehmer hinzufügen\n                \n            \n        \n    \n    \n        Channel verlassen\n    \n\n\n\n    \n\n    \n                \n                    ./edit-channel.component.scss\n                \n                #edit-channel {\n    max-width: 800px;\n    min-width: 400px;\n    min-height: 300px;\n    background-color: white;\n    border-radius: 0px 30px 30px 30px;\n    position: absolute;\n    top: 50px;\n    left: 30px;\n    z-index: 15;\n    box-shadow: 0px 6px 10px 0px #00000033;\n    padding: 30px;\n    gap: 18px;\n    display: flex;\n    flex-direction: column;\n    word-break: break-all;\n\n    #edit-channel-header {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        gap: 20px;\n\n        h2 {\n            margin: 0px;\n            display: flex;\n            align-items: center;\n            gap: 15px;\n        }\n\n        b {\n            font-size: 30px;\n        }\n    }\n\n    #edit-channel-name-container-viewMode {\n        border: 1px solid #ADB0D9;\n        border-radius: 20px;\n        padding: 12px;\n\n        a {\n            color: #535AF1;\n            text-decoration: unset;\n            cursor: pointer;\n\n            &:hover {\n                font-weight: bold;\n            }\n        }\n\n        b {\n            font-size: 24px;\n        }\n\n        p {\n            font-size: 18px;\n            display: flex;\n            align-items: center;\n            gap: 10px;\n        }\n\n        h3 {\n            margin: 0px;\n        }\n    }\n\n    #edit-channel-name-container-editMode {\n        padding: 12px;\n\n        a {\n            color: #535AF1;\n            text-decoration: unset;\n            cursor: pointer;\n        }\n\n        #edit-channel-name-container-editMode-input {\n            position: relative;\n\n            input {\n                border: 1px solid #ADB0D9;\n                border-radius: 20px;\n                padding: 12px;\n                padding-left: 50px;\n                width: calc(100% - 24px - 30px);\n                font-size: 1.5em;\n            }\n\n            #edit-channel-name-container-editMode-input-icon {\n                position: absolute;\n                top: 10px;\n                left: 25px;\n                font-size: 28px;\n            }\n        }\n    }\n\n    #edit-channel-description-container-viewMode {\n        border: 1px solid #ADB0D9;\n        border-radius: 20px;\n        padding: 12px;\n\n        a {\n            color: #535AF1;\n            text-decoration: unset;\n            cursor: pointer;\n\n            &:hover {\n                font-weight: bold;\n            }\n        }\n\n        h3 {\n            margin: 0px;\n        }\n\n        p {\n            font-size: 18px;\n        }\n    }\n\n    #edit-channel-description-container-editMode {\n        padding: 12px;\n\n        a {\n            color: #535AF1;\n            text-decoration: unset;\n            cursor: pointer;\n        }\n\n        h2 {\n            color: rgba(83, 90, 241, 1);\n        }\n\n        #edit-channel-description-container-editMode-input {\n            position: relative;\n\n            input {\n                border: 1px solid #ADB0D9;\n                border-radius: 20px;\n                padding: 12px;\n                //padding-left: 50px;\n                width: calc(100% - 24px - 30px);\n                font-size: 1.5em;\n            }\n\n\n        }\n    }\n\n\n\n\n    #edit-channel-leaveChannel {\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-end;\n\n        button {\n            color: white;\n            background: #444DF2;\n            padding: 12px 25px 12px 25px;\n            border-radius: 20px;\n            border: 0px;\n            font-size: 1em;\n            cursor: pointer;\n\n            &:hover {\n                background-color: rgba(121, 126, 243, 1) !important;\n                transition: background-color 0.15s ease-in-out;\n            }\n        }\n    }\n}\n\n#edit-channel-creator-description {\n    h2 {\n        color: rgba(83, 90, 241, 1);\n    }\n}\n\n#edit-channel-background {\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n    z-index: 14;\n    background-color: rgba(0, 0, 0, 0.5);\n    top: 0px;\n    left: 0px;\n}\n\n.dsp-flex-row-spaceBtwn {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.divider-container {\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    padding: 12px 0px 12px 0px;\n\n    .divider {\n        height: 1px;\n        width: 100%;\n        background-color: #ADB0D9;\n    }\n}\n\n#edit-channel-users-mobile {\n    display: none;\n}\n\n.add-user-container {\n    display: flex;\n    justify-content: left;\n    align-items: center;\n    gap: 8px;\n    width: fit-content;\n    cursor: pointer;\n    margin-left: 12px;\n    margin-top: 12px;\n}\n\n@media only screen and (max-width: 1000px) {\n\n    #edit-channel {\n        position: fixed;\n        top: 100px;\n        left: 10vw;\n        min-width: 80vw;\n    }\n}\n\n@media only screen and (max-width: 768px) {\n\n    #edit-channel {\n        position: fixed;\n        top: 0px;\n        left: 0px;\n        width: 100vw;\n        height: 100vh;\n        padding: 0px;\n        border-radius: 0px;\n        overflow: scroll;\n\n        #edit-channel-header {\n            position: sticky;\n            box-shadow: 0px 2px 10px 0px #00000014;\n            padding: 0px 12px 0px 12px;\n            min-height: 100px;\n        }\n\n        #edit-channel-name-container-viewMode {\n            margin: 0px 12px 0px 12px;\n        }\n\n        #edit-channel-name-container-editMode {\n            margin: 0px 12px 0px 12px;\n        }\n\n        #edit-channel-description-container-viewMode {\n            margin: 0px 12px 0px 12px;\n        }\n\n        #edit-channel-description-container-editMode {\n            margin: 0px 12px 0px 12px;\n        }\n\n        #edit-channel-users-mobile {\n            display: block;\n            margin: 0px 12px 0px 12px;\n            border: 1px solid #ADB0D9;\n            border-radius: 20px;\n            padding: 12px;\n\n            h2 {\n                margin: 0.5rem;\n            }\n        }\n\n        #edit-channel-leaveChannel {\n            margin: 0px 12px 12px 12px;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    #{{ channel.channelName }}                                                                                                                                            Channel-Name            Bearbeiten                # {{ channel.channelName }}                            Channel-Name            Speichern                                                       #                                               Beschreibung            Bearbeiten                {{channel.channelDescription}}                                                Erstellt von            {{channelCreatorName}}                                    Beschreibung            Speichern                                                                                    Erstellt von            {{channelCreatorName}}                        Mitglieder                                                                                                    Teilnehmer hinzufügen                                                    Channel verlassen    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditChannelUsersComponent.html":{"url":"components/EditChannelUsersComponent.html","title":"component - EditChannelUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditChannelUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-channel-users\n            \n\n\n\n            \n                styleUrls\n                ./edit-channel-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-channel-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channelCopy\n                            \n                            \n                                isUserSelected\n                            \n                            \n                                savingChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfUserIsSelected\n                            \n                            \n                                close\n                            \n                            \n                                getFormatedString\n                            \n                            \n                                handleChannelUserUpdate\n                            \n                            \n                                saveUserChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                refChannel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeEvent\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    refChannel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, notificationService: NotificationService, formatService: FormatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:21\n                            \n                        \n\n                \n                    \n                            Defines Services and declase a new channel to work with in this component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formatService\n                                                  \n                                                        \n                                                                        FormatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        refChannel\n                    \n                \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfUserIsSelected\n                        \n                    \n                \n            \n            \n                \ncheckIfUserIsSelected(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Checks if a user is selected in the specified channel.\nThis function evaluates whether the provided channel exists and contains at least one user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe channel to check for user selection.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the channel exists and has at least one user; otherwise, false.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Closes edit channel user popup component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormatedString\n                        \n                    \n                \n            \n            \n                \ngetFormatedString(stringToFormat: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Returns a shorted string if it is to long.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                stringToFormat\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring that should be shorten\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                shorted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleChannelUserUpdate\n                        \n                    \n                \n            \n            \n                \nhandleChannelUserUpdate(newChannel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Stores/Saves the updated channel after adding new users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newChannel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nupdated channel\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserChanges\n                        \n                    \n                \n            \n            \n                \nsaveUserChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Saves changes when users where removed or added.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channelCopy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUserSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        savingChanges\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        refChannel\n                    \n                \n\n\n                \n                    \n                        setrefChannel(value: Channel)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Channel\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Channel } from 'src/models/channel.class';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { FormatService } from 'src/services/format.service';\nimport { NotificationService } from 'src/services/notification.service';\n\n@Component({\n  selector: 'app-edit-channel-users',\n  templateUrl: './edit-channel-users.component.html',\n  styleUrls: ['./edit-channel-users.component.scss']\n})\nexport class EditChannelUsersComponent {\n\n  channelCopy: Channel;\n  savingChanges: boolean=false;\n  isUserSelected: boolean = false;\n  @Output() closeEvent = new EventEmitter();\n\n  @Input() set refChannel(value: Channel) {\n    this.channelCopy = value;\n  }\n\n  /**\n  * Defines Services and declase a new channel to work with in this component. \n  * @param channelService \n  * @param notificationService \n  * @param formatService \n  */\n  constructor(\n    private channelService: ChannelFirebaseService,\n    private notificationService: NotificationService,\n    private formatService: FormatService\n  ) {\n    this.channelCopy = new Channel();\n  }\n\n\n  /**\n  * Stores/Saves the updated channel after adding new users. \n  * @param newChannel - updated channel\n  */\n  handleChannelUserUpdate(newChannel: Channel) {\n    this.channelCopy = newChannel;\n    this.isUserSelected= this.checkIfUserIsSelected(newChannel);\n  }\n  \n\n  /**\n  * Checks if a user is selected in the specified channel.\n  *\n  * This function evaluates whether the provided channel exists and contains at least one user.\n  *\n  * @param {Channel} channel - The channel to check for user selection.\n  * @returns {boolean} - True if the channel exists and has at least one user; otherwise, false.\n  */\n  checkIfUserIsSelected(channel: Channel): boolean {\n    return channel && channel.users && channel.users.length > 0;\n  }\n\n\n  /**\n  * Saves changes when users where removed or added. \n  */\n  saveUserChanges() {\n    if (this.channelCopy) {\n        this.channelService.selectedChannel = this.channelCopy;\n        this.channelService.updateChannel(this.channelCopy);\n        this.channelService.loadallChannelusers();\n        this.notificationService.renderNotification(\"Benutzer wurden dem Channel hinzugefügt\");\n        this.close();\n    }\n  }\n\n\n  /**\n   * Closes edit channel user popup component \n   */\n  close() {\n    this.closeEvent.emit();\n  }\n\n\n  /**\n   * Returns a shorted string if it is to long. \n   * @param stringToFormat - string that should be shorten\n   * @returns shorted string\n   */\n  getFormatedString(stringToFormat:string){\n    return this.formatService.cutStrLen(stringToFormat); \n  }\n}\n\n    \n\n    \n        \n    \n        \n            Leute hinzufügen\n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n            \n        \n        \n    \n    #{{getFormatedString(channelCopy.channelName)}}\n    \n    \n        Hinzufügen\n    \n    \n\n\n\n    \n\n    \n                \n                    ./edit-channel-users.component.scss\n                \n                #editChannel{\n    max-width: 800px;\n    min-width: 400px;\n    background-color: white;\n    border-radius: 30px 0px 30px 30px; \n    position: absolute;\n    top: 50px;\n    right: 30px;\n    z-index: 15;\n    box-shadow: 0px 6px 10px 0px #00000033;\n    padding: 40px;\n    gap:18px; \n    display: flex;\n    flex-direction: column;\n    word-break: break-all;\n\n    h4{\n        margin: 0px;\n        color: #444DF2;\n    }\n\n    \n\n    #editChannelHeader{\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n        width: 100%;\n        img{\n            cursor: pointer;\n        }\n\n        \n    }\n\n\n    #titleHeader{\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    h2{\n        margin: 0px;\n    }\n    }\n\n    .add-selection {\n        background-color: #444DF2;\n        height: 54px;\n        width: 125px;\n        border-radius: 30px;\n        color: white;\n        border: unset;\n        float: inline-end;\n        font-size: 18px;\n    \n        &:hover {\n            opacity: 0.85;\n            cursor: pointer;\n        }\n\n        .button-container{\n            display: flex;\n            justify-content: flex-end;\n        }\n    }\n\n    .disabled-button {\n        background-color: gray; \n        color: white; \n      }\n}\n\n#editChannelBackground{\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n    z-index: 14;\n    background-color: rgba(0,0,0,0.5);\n    top: 0px;\n    left: 0px;\n}\n\n@media only screen and (max-width: 768px) {\n    #editChannel{\n        max-width: unset;\n        min-width: unset;\n        width: calc(100vw - 120px);\n        right: 24px;\n        left: 24px;\n        padding: 30px 16px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Leute hinzufügen                                                                                                                                                                                                                            #{{getFormatedString(channelCopy.channelName)}}                Hinzufügen        '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditChannelUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyWindowComponent.html":{"url":"components/EmptyWindowComponent.html","title":"component - EmptyWindowComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmptyWindowComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/empty-window/empty-window.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-empty-window\n            \n\n\n\n            \n                styleUrls\n                ./empty-window.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./empty-window.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, userService: UserFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/empty-window/empty-window.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/empty-window/empty-window.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/empty-window/empty-window.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n@Component({\n  selector: 'app-empty-window',\n  templateUrl: './empty-window.component.html',\n  styleUrls: ['./empty-window.component.scss']\n})\nexport class EmptyWindowComponent {\n    constructor(\n      public channelService: ChannelFirebaseService,\n      public userService: UserFirebaseService\n    ){\n\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            Neue Nachricht\n        \n        \n       \n    \n\n    \n\n    \n                \n                    ./empty-window.component.scss\n                \n                #emptyWindow {\n    height: 100%;\n    flex-grow: 1;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    border-radius: 30px;\n\n\n    .header {\n        box-shadow: rgba(0, 0, 0, 0.8) 0 2px 23px -10px;\n        padding: 25px 45px;\n        border-radius: 30px 30px 0 0;\n\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n\n        .header-title {\n            display: flex;\n            align-items: center;\n            word-break: break-all;\n        }\n\n        app-searchbar {\n            width: 100%;\n        }\n    }\n\n    .amoundOfUsersInChannel {\n        font-size: 20px;\n        padding-left: 10px;\n        font-weight: 600;\n    }\n\n    .chat-container {\n        overflow-y: auto;\n        height: 100%;\n        display: flex;\n        flex-direction: column-reverse;\n        width: 100%;\n\n        app-date-line {\n            margin: 12px 35px 12px 35px;\n        }\n\n        .channel-display {\n            margin: 12px 35px 12px 35px;\n\n            .channel-header {\n                display: flex;\n                flex-direction: row;\n                gap: 8px;\n\n                img {\n                    height: 70px;\n                    aspect-ratio: 1;\n                    object-fit: cover;\n                    border-radius: 50%;\n                }\n            }\n        }\n    }\n\n    app-message-create {\n        padding: 35px 35px 35px 35px;\n    }\n}\n\n\n.align-bottom {\n    position: sticky;\n    bottom: 0;\n}\n\n.chat-container {\n    overflow-y: auto;\n    height: 100%;\n    display: flex;\n    flex-direction: column-reverse;\n    width: 100%;\n}\n\n.avatar-img {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    object-fit: cover;\n    position: relative;\n}\n\n.addmembers {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    object-fit: cover;\n    cursor: pointer;\n}\n\n.header {\n    padding: 0px 35px 0px 35px;\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n\n    .header-title {\n        display: flex;\n        align-items: center;\n\n        .header-title-container {\n            display: flex;\n            padding: 4px 12px 4px 12px;\n            align-items: center;\n\n            h2 {\n                margin: 0px;\n                font-size: 24px;\n            }\n\n            .header-title-container-icons {\n                height: 30px;\n            }\n\n            &:hover {\n                color: #535AF1;\n                background-color: #ECEEFE;\n                border-radius: 37px;\n                cursor: pointer;\n            }\n        }\n    }\n\n    .user-avatar-list {\n        display: flex;\n        align-items: center;\n    }\n}\n\n\napp-message-create {\n    padding: 0px 35px 0px 35px;\n}\n\n::ng-deep .mat-mdc-menu-content.ng-tns-c2786309385-0 {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border-top-left-radius: 8px;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 8px;\n    border-bottom-left-radius: 8px;\n}\n\n::ng-deep div#mat-menu-panel-0 {\n    border-top-left-radius: 35px;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 35px;\n    border-bottom-left-radius: 35px;\n}\n\n::ng-deep .menuHeader.ng-tns-c2786309385-0 {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n}\n\n.menuHeaderText {\n    padding-left: 45px;\n}\n\n.close {\n    padding-right: 45px;\n    cursor: pointer;\n}\n\n::ng-deep .menuHeader.ng-tns-c2786309385-1 {\n    display: flex;\n    justify-content: space-between;\n}\n\n.headerText {\n    padding-left: 45px;\n}\n\n.closeMenu {\n    padding-right: 45px;\n    cursor: pointer;\n}\n\n.resultUserImages {\n    width: 20px;\n    border-radius: 15px;\n}\n\n.menuUsersContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.menuUsers {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    width: 59%;\n    margin-top: 19px;\n}\n\n.menuUsersImage {\n    //padding-left: 20px;\n    width: 60px;\n    border-radius: 50%;\n}\n\n.menuUsersName {\n    padding-left: 20px;\n}\n\n.addMemberContainer {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n}\n\n.addMemberImage {\n    padding-left: 20px;\n    width: 30px;\n}\n\n.addMemberInMenu {\n    display: flex;\n    align-items: center;\n    margin-top: 21px;\n    cursor: pointer;\n    justify-content: center;\n    margin-right: 25px;\n}\n\n\n.addMemberText {\n    padding-left: 20px;\n}\n\n.containerOfInput {\n    position: relative;\n    width: 100%;\n    height: 48px;\n    padding-top: 30px;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    app-searchbar {}\n}\n\n.inputContainer {\n    width: 75%;\n    height: 42px;\n}\n\n.memberNameInput {\n    width: 100%;\n    height: 100%;\n    border-radius: 30px;\n    border: 1px solid #797EF3;\n}\n\n.inputAvatar {\n    width: 28px;\n    height: 25px;\n    border-radius: 15px;\n}\n\n.inputContent {\n    display: flex;\n    align-items: center;\n    padding-left: 15px;\n    background-color: #ECEEFE;\n    border-radius: 25px;\n    height: 35%;\n    width: 39%;\n    top: 39px;\n    left: 77px;\n\n    position: absolute;\n}\n\n::ng-deep .mat-mdc-menu-content.ng-tns-c2786309385-1 {\n    width: 280px;\n}\n\n#header-searchfield-results {\n    position: relative;\n    border-radius: 42px;\n    padding-left: 24px;\n    padding-right: 24px;\n    width: calc(100% - 48px);\n    background-color: white;\n    z-index: 10;\n    padding-bottom: 12px;\n    padding-top: 12px;\n    margin-top: 12px;\n\n    p {\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-top: 12px;\n        padding-bottom: 12px;\n        display: flex;\n        align-items: center;\n        margin: 0px;\n\n        &:hover {\n            background: rgba(166, 166, 166, 0.456);\n            border-radius: 42px;\n        }\n    }\n}\n\n#header-searchfield-results-Menu {\n    position: relative;\n    border-radius: 42px;\n    padding-left: 24px;\n    padding-right: 24px;\n    width: calc(100% - 48px);\n    background-color: white;\n    z-index: 10;\n    padding-bottom: 12px;\n    padding-top: 12px;\n    margin-top: 68px;\n\n    p {\n        padding-left: 24px;\n        padding-right: 24px;\n        padding-top: 12px;\n        padding-bottom: 12px;\n        display: flex;\n        align-items: center;\n        margin: 0px;\n\n        &:hover {\n            background: rgba(166, 166, 166, 0.456);\n            border-radius: 42px;\n        }\n    }\n}\n\n::ng-deep .mat-mdc-menu-panel {\n    width: 496px !important;\n    height: 310px !important;\n    min-width: unset !important;\n    max-width: unset !important;\n\n    border-top-left-radius: 35px !important;\n    border-top-right-radius: 0 !important;\n    border-bottom-right-radius: 35px !important;\n    border-bottom-left-radius: 35px !important;\n\n}\n\n::ng-deep .mat-mdc-menu-content.ng-tns-c2786309385-1 {\n    width: 100%;\n}\n\n.channelName {\n    color: #797EF3;\n    padding-left: 45px;\n}\n\n.addSelection {\n    background-color: #444DF2;\n    height: 54px;\n    width: 125px;\n    border-radius: 30px;\n    color: white;\n    border: unset;\n    position: absolute;\n    right: 57px;\n    bottom: 78px;\n\n    &:hover {\n        opacity: 0.85;\n        cursor: pointer;\n    }\n\n}\n\n.inputContainerMaster {\n    width: 100%;\n}\n\n.cancelSelection {}\n\n.menuHeader {\n    display: flex;\n    justify-content: space-between;\n}\n\n\n@media only screen and (max-width: 1000px) {\n\n    .header {\n        h2 {\n            font-size: 20px !important;\n        }\n    }\n}\n\n@media only screen and (max-width: 768px) {\n\n    #channel {\n        border-radius: 0px;\n\n        .header {\n            box-shadow: 0px 2px 10px 0px #00000014;\n            border-radius: 0px;\n\n            .user-avatar-list {\n                display: none;\n            }\n        }\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Neue Nachricht                           '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyWindowComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n\n\n            \n                styleUrls\n                ./forgot-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                email\n                            \n                            \n                                emailSubmitted\n                            \n                            \n                                errorInfo\n                            \n                            \n                                isEmailInputActive\n                            \n                            \n                                isInputActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeForgotPassword\n                            \n                            \n                                isButtonDisabled\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeForgotPasswordView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthFirebaseService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeForgotPasswordView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeForgotPassword\n                        \n                    \n                \n            \n            \n                \ncloseForgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Emits an event to signal the closing of the forgot password view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \nisButtonDisabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Checks if the contact form is invalid, determining whether the associated button should be disabled.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nTrue if the contact form is invalid, indicating that the button should be disabled; false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Initiates the password reset process using the provided email.\nMarks the email as submitted, and closes the forgot password view after a delay upon successful reset.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    emailInput: new FormControl('', [Validators.required, Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailSubmitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/forgot-password/forgot-password.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router, RouterLink } from '@angular/router';\nimport { timeout } from 'rxjs';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\nimport { NotificationService } from 'src/services/notification.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent {\n\n  emailSubmitted: boolean = false;\n\n  @Output() closeForgotPasswordView = new EventEmitter();\n\n  constructor(\n    private authService: AuthFirebaseService,\n    private notificationService: NotificationService\n    ) { }\n  email: string = '';\n  errorInfo: any = false;\n  isInputActive = false;\n  isEmailInputActive = false;\n\n\n  contactForm = new FormGroup({\n    emailInput: new FormControl('', [Validators.required, Validators.email]),\n  });\n\n\n  /**\n * Checks if the contact form is invalid, determining whether the associated button should be disabled.\n * \n * @returns {boolean} - True if the contact form is invalid, indicating that the button should be disabled; false otherwise.\n */\n  isButtonDisabled() {\n    return this.contactForm.invalid;\n  }\n\n  \n  /**\n * Emits an event to signal the closing of the forgot password view.\n * \n * @emits closeForgotPasswordView\n * @returns {void}\n */\n  closeForgotPassword() {\n    this.closeForgotPasswordView.emit();\n  }\n\n  /**\n  * Initiates the password reset process using the provided email.\n  * Marks the email as submitted, and closes the forgot password view after a delay upon successful reset.\n  * \n  * @returns {void}\n  */\n  resetPassword() {\n    this.authService.resetPassword(this.email)\n      .then(() => {\n        this.emailSubmitted = true;\n        this.notificationService.renderNotification(\"E-Mail gesendet\");\n\n        setTimeout(() => {\n          this.closeForgotPassword();\n        }, 1400);\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Passwort zurücksetzen\n    \n    Bitte geben Sie Ihre E-Mail-Adresse ein.\n  \n\n  \n    \n      \n        \n          \n        \n        \n      \n\n      \n        \n          {{ \"*Diese E-Mail-Adresse ist leider ungültig.\" }}\n        \n        \n          {{ \"*Gültige E-Mail-Adresse eingeben.\" }}\n        \n      \n    \n    \n      \n        Wir senden Ihnen eine E-Mail, über die Sie Ihr Passwort ändern können.\n      \n    \n  \n\n  \n    \n      E-Mail senden\n    \n  \n\n\n    \n\n    \n                \n                    ./forgot-password.component.scss\n                \n                .forgot-password-container {\n  max-width: 698px;\n  padding: 40px 103px;\n  border-radius: 30px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n}\n\n.forgot-password-title {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 20px;\n  gap: 40px;\n  align-items: center;\n\n  h1 {\n    font-size: 46px;\n    color: rgba(68, 77, 242, 1);\n    margin: 0px;\n  }\n}\n\n.forgot-password-icon {\n  position: absolute;\n  top: 60px;\n  left: 32px;\n  cursor: pointer;\n}\n\n.user-login-input-container {\n  margin-top: 40px;\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n}\n\n.user-login-box {\n  display: flex;\n  flex-direction: column;\n  max-height: 60px;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.user-login-email {\n  display: flex;\n  height: 100%;\n  border-radius: 100px;\n  background-color: rgba(236, 238, 254, 1);\n  font-size: 18px;\n  border: none;\n  padding: 18px 32px 18px 86px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid black;\n  }\n\n  &:focus {\n    border: 1px solid rgba(83, 90, 241, 1);\n  }\n}\n\n.warning-text,\n.warning-password {\n  display: flex;\n  width: 100%;\n  position: relative;\n  color: red;\n  top: -20px;\n  left: 0px;\n}\n\n.user-login-icon {\n  display: flex;\n  position: relative;\n  left: 30px;\n  top: 41px;\n  width: 50px;\n}\n.forgot-password-info-container {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  gap: 40px;\n}\n\n.forgot-password-info-box {\n  max-width: 350px;\n  text-align: center;\n  color: rgba(104, 104, 104, 1);\n  margin-top: 15px;\n}\n\n.forgot-password-button-container {\n  display: flex;\n  justify-content: flex-end;\n  gap: 30px;\n}\n\n.blue-button {\n  border-radius: 25px;\n  padding: 12px 25px;\n  height: 49px;\n  font-size: 18px;\n  margin-top: 35px;\n  background-color: rgba(68, 77, 242, 1) !important;\n  color: white !important;\n  font-family: 'Nunito', sans-serif;\n\n  &:hover {\n    background-color: rgba(121, 126, 243, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n  }\n\n  &.disabled-button {\n    background-color: gray !important;\n    cursor: not-allowed;\n    color: white !important;\n  }\n}\n\n@keyframes slide-in {\n  0% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slide-out {\n  0% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n  100% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n}\n\n.success-message {\n  display: flex;\n  position: absolute;\n  right: 0px;\n  top: 720px;\n  justify-content: center;\n  z-index: 100;\n  padding: 50px;\n  border-radius: 30px 30px 0px 30px;\n  max-width: 530px;\n  background: rgba(68, 77, 242, 1);\n  color: rgba(255, 255, 255, 1);\n  align-items: center;\n  font-size: 36px;\n  box-shadow: 0px 6px 10px 0px rgba(0, 0, 0, 0.2);\n  animation: slide-in 0.4s ease-in-out, slide-out 0.4s ease-in-out 1.5s;\n  font-weight: 700;\n  gap: 28px;\n}\n\n@media screen and (max-width: 640px) {\n  .forgot-password-container {\n    padding: 40px 20px;\n    margin-right: 16px;\n    margin-left: 16px;\n    margin-bottom: 120px;\n\n    h1 {\n      font-size: 32px;\n      font-weight: 700px;\n      max-width: 193px;\n    }\n  }\n\n  .forgot-password-icon {\n    top: 35px;\n    left: 25px;\n  }\n\n  .forgot-password-title {\n    font-size: 17px;\n    gap: 12px;\n  }\n\n  .user-login-input-container {\n    gap: 12px;\n    margin-top: 0px;\n  }\n\n  \n  .forgot-password-info-box {\n    max-width: none;\n  }\n\n  .success-message {\n    top: 660px;\n    padding: 20px 30px;\n    max-width: 269px;\n    font-size: 22px;\n    gap: 18px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Passwort zurücksetzen        Bitte geben Sie Ihre E-Mail-Adresse ein.                                                                              {{ \"*Diese E-Mail-Adresse ist leider ungültig.\" }}                          {{ \"*Gültige E-Mail-Adresse eingeben.\" }}                                    Wir senden Ihnen eine E-Mail, über die Sie Ihr Passwort ändern können.                        E-Mail senden      '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormatService.html":{"url":"injectables/FormatService.html","title":"injectable - FormatService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FormatService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/format.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cutStrLen\n                            \n                            \n                                formatDateToDMY\n                            \n                            \n                                formatTimeDelta\n                            \n                            \n                                formatTimestampToHHMM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cutStrLen\n                        \n                    \n                \n            \n            \n                \ncutStrLen(string: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/format.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                string\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateToDMY\n                        \n                    \n                \n            \n            \n                \nformatDateToDMY(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/format.service.ts:14\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to a string in the \"dd.mm.yyyy\" (day.month.year) format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Date object to be formatted.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The formatted date string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimeDelta\n                        \n                    \n                \n            \n            \n                \nformatTimeDelta(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/format.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTimestampToHHMM\n                        \n                    \n                \n            \n            \n                \nformatTimestampToHHMM(timestamp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/format.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                timestamp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class FormatService {\n\n    /**\n    * Formats a Date object to a string in the \"dd.mm.yyyy\" (day.month.year) format.\n    *\n    * @param {Date} date - The Date object to be formatted.\n    * @returns {string} The formatted date string.\n    */\n    formatDateToDMY(date: Date) {\n        const day = date.getDate().toString().padStart(2, '0');\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const year = date.getFullYear();\n\n        return `${day}.${month}.${year}`;\n    }\n\n    formatTimestampToHHMM(timestamp: number) {\n        const date = new Date(timestamp);\n        const hours = String(date.getHours()).padStart(2, '0'); // Ensure two digits with leading zero\n        const minutes = String(date.getMinutes()).padStart(2, '0'); // Ensure two digits with leading zero\n        return hours + ':' + minutes;\n      }\n    \n    formatTimeDelta(timestamp: number): string {\n      const now = new Date().getTime();\n        const delta = now - timestamp;\n        const oneDayInMs = 24 * 60 * 60 * 1000; // One day in milliseconds\n    \n        const yesterdayDmy = this.formatDateToDMY(new Date(now - oneDayInMs));\n        const timestampDmy = this.formatDateToDMY(new Date(timestamp));\n    \n        if (yesterdayDmy == timestampDmy) {\n          return \"gestern\";\n        } else if (delta 40){\n          string=string.slice(0,39)+\"..\";\n        }\n        return string;\n      }\n      return undefined;\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GenerateIdService.html":{"url":"injectables/GenerateIdService.html","title":"injectable - GenerateIdService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GenerateIdService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/generate-id.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateRandomId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateRandomId\n                        \n                    \n                \n            \n            \n                \ngenerateRandomId(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/generate-id.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateIdService {\n  \n  generateRandomId(length: number) {\n    const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const idArray = new Array(length);\n  \n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.scss,../../../styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                showHeaderMenu\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeChatOrChannel\n                            \n                            \n                                closeProfilePopup\n                            \n                            \n                                getShortenedString\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                showProfil\n                            \n                            \n                                stopPropagation\n                            \n                            \n                                toogleHeaderMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                channelSelected\n                            \n                            \n                                chatSelected\n                            \n                            \n                                emptyChatSelectedMobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeEmptyViewEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserFirebaseService, channelService: ChannelFirebaseService, userProfileService: UserProfileService, authService: AuthFirebaseService, chatService: ChatFirebaseService, windowSizeService: WindowSizeService, activeSelectionService: ActiveSelectionService, formatService: FormatService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/header/header.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowSizeService\n                                                  \n                                                        \n                                                                        WindowSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeSelectionService\n                                                  \n                                                        \n                                                                        ActiveSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formatService\n                                                  \n                                                        \n                                                                        FormatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        channelSelected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/header/header.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        chatSelected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/header/header.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emptyChatSelectedMobile\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/header/header.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeEmptyViewEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/header/header.component.ts:32\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeChatOrChannel\n                        \n                    \n                \n            \n            \n                \ncloseChatOrChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:88\n                        \n                    \n\n\n            \n                \n                        close Chat and Channel view in mobile View\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeProfilePopup\n                        \n                    \n                \n            \n            \n                \ncloseProfilePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Close profil menu popup\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getShortenedString\n                        \n                    \n                \n            \n            \n                \ngetShortenedString(stringToShort: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Shorten a give string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                stringToShort\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring to short\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nshortened string\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:62\n                        \n                    \n\n\n            \n                \n                        loggout the current user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Loads current user from firebase\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfil\n                        \n                    \n                \n            \n            \n                \nshowProfil()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:79\n                        \n                    \n\n\n            \n                \n                        show or hide userprofil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopPropagation\n                        \n                    \n                \n            \n            \n                \nstopPropagation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Prevents closing of popup when click inside of popup\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nclickevent\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toogleHeaderMenu\n                        \n                    \n                \n            \n            \n                \ntoogleHeaderMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/header/header.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Show or hide menu.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/header/header.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showHeaderMenu\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/header/header.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/header/header.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/header/header.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { User } from 'src/models/user.class';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserProfileService } from 'src/services/user-profile.service';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { ChatFirebaseService } from 'src/services/chat-firebase.service';\nimport { WindowSizeService } from 'src/services/window-size.service';\nimport { ActiveSelectionService } from 'src/services/active-selection.service';\nimport { FormatService } from 'src/services/format.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss', '../../../styles.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  user: any = new User();\n\n  showHeaderMenu = false;\n  @Input() channelSelected = false; \n  @Input() chatSelected = false; \n  @Input() emptyChatSelectedMobile = false; \n\n  @Output() closeEmptyViewEvent = new EventEmitter();\n\n  windowWidth: number = 1024;  \n\n  constructor(\n    public userService: UserFirebaseService,\n    public channelService: ChannelFirebaseService,\n    private userProfileService: UserProfileService,\n    private authService: AuthFirebaseService,\n    private chatService: ChatFirebaseService, \n    private windowSizeService: WindowSizeService,\n    private activeSelectionService: ActiveSelectionService,\n    private formatService: FormatService,\n    private router: Router) { }\n\n  /**\n   * Loads current user from firebase \n   */\n  async ngOnInit(): Promise {    \n    this.user = await this.userService.getUserByUID(JSON.parse(localStorage.getItem('user')!).uid);\n    this.windowSizeService.windowWidth$.subscribe(windowWidth => {\n      this.windowWidth = windowWidth; \n    });\n    this.windowSizeService.setWindowSize(); \n  }\n\n\n  /**\n   * loggout the current user. \n   */\n  logout() {\n    this.showHeaderMenu = false;\n    this.authService.logout();\n  }\n\n\n  /**\n   * Show or hide menu. \n   */\n  toogleHeaderMenu() {\n    this.showHeaderMenu = !this.showHeaderMenu;\n  }\n\n\n  /**\n   * show or hide userprofil\n   */\n  showProfil() {\n    this.showHeaderMenu = false;\n    this.userProfileService.openUserProfil(this.userService.currentUser);\n  }\n\n\n  /**\n   * close Chat and Channel view in mobile View\n   */\n  closeChatOrChannel(){\n    this.channelService.selectedChannelId = undefined; \n    this.chatService.selectedChatId = undefined;   \n    this.activeSelectionService.activeSelection = undefined; \n    this.closeEmptyViewEvent.emit();\n  }\n\n\n  /**\n   * Close profil menu popup\n   */\n  closeProfilePopup(){\n    if(this.showHeaderMenu){\n      this.showHeaderMenu = false;\n    }\n  }\n\n  /**\n   * Shorten a give string \n   * @param stringToShort - string to short\n   * @returns - shortened string\n   */\n  getShortenedString( stringToShort: string) {\n    return this.formatService.cutStrLen(stringToShort);\n  }\n\n\n  /**\n   * Prevents closing of popup when click inside of popup\n   * @param event - clickevent \n   */\n  stopPropagation(event:Event){\n    event.stopPropagation();\n  }\n}\n\n    \n\n    \n         768\">\n    \n        \n    \n    \n        \n        \n    \n    \n        {{getShortenedString(user.fullName)}}\n        \n            \n            \n        \n        \n            \n                expand_more\n            \n        \n    \n    \n    \n        Profil\n        Log out\n    \n\n\n\n    \n        \n        \n            \n            \n            Code learning\n        \n    \n    \n        \n            \n        \n    \n\n        \n        \n            \n            Profil\n        \n        \n            \n            Logout\n        \n    \n    \n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import url(\"https://fonts.googleapis.com/icon?family=Material+Icons\");\n$headerImage-width: 300px;\n$headerUser-width: 25%;\n\n\n#header-container,\n#header-container-mobile {\n    width: 100%;\n    gap: 12px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 24px;\n    position: relative;\n\n    #header-image-container {\n        min-width: 360px;\n    }\n\n    #header-searchfield {\n        //flex-grow: 1;\n        width: 50%;\n        border-radius: 42px;\n        //height: 40px;\n        border: 0px;\n        padding-left: 24px;\n    }\n\n    #searchbar {\n        flex-grow: 1;\n        width: 50%;\n        border-radius: 42px;\n        //height: 40px;\n        border: 0px;\n    }\n\n    #header-user,\n    #header-user-mobile {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        gap: 12px;\n        min-width: $headerUser-width;\n\n        #header-user-icon,\n        #header-user-icon-mobile {\n            position: relative;\n\n            img {\n                width: 50px;\n                border-radius: 50%;\n            }\n\n            #header-status {\n                position: absolute;\n                bottom: 4px;\n                right: 4px;\n                min-width: 10px;\n                min-height: 10px;\n                border-radius: 50%;\n                background-color: green;\n                z-index: 10;\n                border: 1px solid white;\n            }\n        }\n    }\n}\n\n.mat-mdc-menu-panel {\n    border-radius: 30px !important;\n}\n\n\n$headerDropdownPositionTop: 100px;\n$headerDropdownPositionRigth: 0px;\n\n#headerMenu,\n#headerMenu-mobile {\n\n    position: absolute;\n    background-color: white;\n    border-radius: 30px 0px 30px 30px;\n    top: $headerDropdownPositionTop;\n    right: $headerDropdownPositionRigth;\n    z-index: 10;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    padding: 30px;\n    box-shadow: 0px -3px 10px 0px #00000033;\n\n\n    a {\n        display: flex;\n        justify-content: center;\n        cursor: pointer;\n        padding: 10px 45px;\n        border-radius: 100px;\n        font-size: 18px;\n        font-weight: 600;\n        width: 100px;\n\n        &:hover {\n            background-color: rgba(236, 238, 254, 1);\n            color: rgba(83, 90, 241, 1);\n        }\n    }\n}\n\n#userProfileMenuBackground {\n    position: fixed;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.5);\n    top: 0px;\n    left: 0px;\n    z-index: 9;\n}\n\n#headerUserProfil {\n    padding: 24px;\n    min-width: 100px;\n    max-width: 500px;\n    min-height: 100px;\n    z-index: 10;\n    top: $headerDropdownPositionTop;\n    right: $headerDropdownPositionRigth;\n    position: absolute;\n    background-color: white;\n    border-radius: 30px 0px 30px 30px;\n    box-shadow: 0px 6px 10px 0px #00000033;\n\n    #headerUserProfil-header {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    #headerUserProfil-image-container {\n        width: 100%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n\n        img {\n            width: 30%;\n            border-radius: 50%;\n        }\n    }\n\n    #headerUserProfil-name {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    #status {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n\n        #statusIcon {\n            width: 8px;\n            height: 8px;\n            border-radius: 50%;\n            background-color: green;\n        }\n\n        #statusFont {\n            color: green;\n            margin: 0px;\n        }\n    }\n\n    #headerUserProfil-email {\n        display: flex;\n        flex-direction: column;\n\n        #headerUserProfil-email-header {\n            display: flex;\n            gap: 12px;\n        }\n    }\n}\n\n#headerUserProfil-EditMode {\n\n    .headerUserProfil-EditMode-Row {\n        display: flex;\n        align-items: center;\n        gap: 12px;\n\n        img {\n            width: 24px;\n            height: 24px;\n        }\n    }\n\n    input {\n        border-radius: 30px;\n        color: #686868;\n        border: 1px solid #686868;\n        padding: 15px 20px 15px 20px;\n        font-family: 'Nunito', sans-serif;\n        width: calc(100% - 40px);\n    }\n\n    #headerUserProfil-EditMode-btn-container {\n        margin-top: 12px;\n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        gap: 24px;\n    }\n\n    #headerUserProfil-EditMode-EditMailInfo {\n        color: red;\n    }\n}\n\n#header-container-mobile {\n    display: none;\n}\n\n\n@media only screen and (max-width: 1000px) {\n\n    #searchbar {\n        display: none;\n    }\n}\n\n@media only screen and (max-width: 768px) {\n\n    #header-container {\n        display: none;\n    }\n\n    #header-container-mobile {\n        display: flex;\n        max-width: 100vw;\n\n        #header-image-container-mobile {\n            display: flex;\n\n            img {\n                width: 180px;\n            }\n\n            #header-image-container-mobile-selected {\n                display: flex;\n                gap: 12px;\n\n                img {\n                    width: unset;\n                }\n\n                ;\n            }\n        }\n\n        #header-user-mobile {\n            min-width: unset;\n        }\n\n        #headerMenu-mobile {\n            position: fixed;\n            bottom: 0px;\n            left: 0px;\n            top: unset;\n            height: fit-content;\n            padding: unset;\n            padding-top: 10vh;\n            padding-bottom: 10vh;\n            width: 100vw;\n            background-color: white;\n            border-radius: 30px 30px 0px 0px;\n            z-index: 10;\n\n            .headerMenu-mobile-entry {\n                display: flex;\n                align-items: center;\n                gap: 12px;\n            }\n        }\n        #headerMenu-mobile-background{\n            position: fixed;\n            width: 100vw;\n            height: 100vh;\n            top: 0px; \n            left: 0px;\n            z-index: 9;\n          }\n\n    }\n}\n\n@media only screen and (max-width: 700px) {\n    #header-image-container-mobile {\n        img {\n            max-width: 180px;\n            max-height: 100px;\n        }\n    }\n}\n\n@media only screen and (max-width: 350px) {\n    #header-image-container-mobile {\n        #header-image-container-mobile-selected {\n            display: flex;\n            gap: 12px;\n            align-items: center;\n        }\n\n        img {\n            max-width: 100px;\n            max-height: 30px;\n        }\n\n        h3 {\n            font-size: 18px;\n        }\n    }\n\n}\n                \n                    ../../../styles.scss\n                \n                @use '@angular/material' as mat;\n\n@import \"@ctrl/ngx-emoji-mart/picker\";\n\n@font-face {\n    font-family: 'Nunito';\n    src: url('assets/fonts/nunito-v26-latin-regular.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 200;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-200.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 300;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-300.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 500;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-500.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 600;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-600.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito Sans';\n    src: url('assets/fonts/nunito-sans-v15-latin-regular.woff2');\n}\n\n/* You can add global styles to this file, and also import other style files */\n\nhtml,\nbody {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    background-color: #edeefe;\n}\n\n.dsp-none{\n    display: none;\n}\n\ninput {\n    font-family: 'Nunito', sans-serif;\n}\n\ntextarea {\n    font-family: 'Nunito', sans-serif;\n}\n\nbutton{\n    font-family: 'Nunito', sans-serif;\n}\n\n.br-30 {\n    border-radius: 30px;\n}\n\n.btn-blue{\n    background-color: #444DF2; \n    color: white;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid white;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(121, 126, 243, 1) !important;\n        transition: background-color 0.15s ease-in-out\n    }\n}\n.btn-white{\n    background-color: white; \n    color: #444DF2;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid #444DF2;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(68, 77, 242, 1) !important;\n        transition: background-color 0.15s ease-in-out;\n        color: white !important;\n    }\n}\n\n.closeIcon-container{\n    padding: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    cursor: pointer;\n    min-width: 30px;\n    min-height: 30px;\n\n    &:hover{\n        background-color: #ECEEFE; \n        #closeIcon path {\n            fill: #535AF1; \n            }\n    }\n\n    #closeIcon{\n        width: 24px;\n        height: 24px;\n    }\n}\n\n\n.highlighted {\n    background-color: yellow;\n  }\n  .highlight-container {\n    margin-top: 10px;\n  }\n\n\n\n.notification-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    pointer-events: none;\n\n    .notification-card {\n        z-index: 99;\n        position: relative;\n        top: 70%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: fit-content;\n        opacity: 0;\n\n        .notification-card-content {\n            font-weight: 500;\n            font-size: 24px;\n        }\n    }\n\n\n\n    //Available animation types\n    @keyframes shift-left-in {\n        0% {\n            opacity: 0;\n            left: -10%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: -10%;\n        }\n    }\n\n    @keyframes shift-up {\n        0% {\n            opacity: 0;\n            top: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n        }\n\n        70% {\n            top: 70%;\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            top: 110%;\n        }\n    }\n\n    @keyframes shift-right-in {\n        0% {\n            opacity: 0;\n            left: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: 110%;\n        }\n    }\n    \n\n    //Types of Messages\n    .error {\n        background-color: rgb(255, 66, 66);\n        color: white;\n    }\n\n    .success {\n        background-color: #4f9d00;\n        border: solid 1px #00d84f;\n        color: white;\n    }\n\n    .default {\n        background-color: #444DF2;\n        border-radius: 30px 30px 0px 30px;\n        padding: 25px;\n        border: none;\n        color: white;\n        margin-left: 8px;\n        margin-right: 8px;\n    }\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 768\">                                                    {{getShortenedString(user.fullName)}}                                                                            expand_more                                        Profil        Log out                                                            Code learning                                                                                        Profil                                        Logout                '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/IfChangedDirective.html":{"url":"directives/IfChangedDirective.html","title":"directive - IfChangedDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  IfChangedDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/if-changed.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appIfChanged]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appIfChanged\n                            \n                            \n                                getLastTime\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    appIfChanged\n                                \n                                \n                                    getLastTime\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, ifChangedService: IfChangedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/if-changed.directive.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ifChangedService\n                                                  \n                                                        \n                                                                        IfChangedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appIfChanged\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/if-changed.directive.ts:25\n                            \n                        \n                \n                    \n                        Updates the view in the Angular component if the value has changed since the last check.\nThis function compares the current value with the previous value stored in the ifChangedService.\nIf the values are different, it clears the existing view and inserts a new embedded view.\nFinally, it updates the previous value for future comparisons.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        getLastTime\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/if-changed.directive.ts:47\n                            \n                        \n                \n                    \n                        Setter method for the getLastTime input property.\nThis setter is triggered whenever the value of the getLastTime input property changes.\nIt clears the existing view in the Angular component's ViewContainer and inserts a new\nembedded view using the provided templateRef with the specified value as the context.\nExample :// Usage in Angular component template:\n// \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        appIfChanged\n                    \n                \n\n\n                \n                    \n                        setappIfChanged(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/directives/if-changed.directive.ts:25\n                                \n                            \n                    \n                        \n                                Updates the view in the Angular component if the value has changed since the last check.\nThis function compares the current value with the previous value stored in the ifChangedService.\nIf the values are different, it clears the existing view and inserts a new embedded view.\nFinally, it updates the previous value for future comparisons.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe current value to check against the previous value.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        getLastTime\n                    \n                \n\n\n                \n                    \n                        setgetLastTime(value: any)\n                    \n                \n                            \n                                \n                                    Defined in src/app/directives/if-changed.directive.ts:47\n                                \n                            \n                    \n                        \n                                Setter method for the getLastTime input property.\nThis setter is triggered whenever the value of the getLastTime input property changes.\nIt clears the existing view in the Angular component's ViewContainer and inserts a new\nembedded view using the provided templateRef with the specified value as the context.\nExample :// Usage in Angular component template:\n// \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe new value for the getLastTime input property.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                        Example :\n                                            \n                                                // Usage in Angular component template:\n// &lt;app-example [getLastTime]=&quot;someValue&quot;&gt;\n                                            \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { IfChangedService } from 'src/services/if-changed-service.service';\n\n@Directive({\n  selector: '[appIfChanged]'\n})\nexport class IfChangedDirective {\n  constructor(\n    private templateRef: TemplateRef,\n    private viewContainer: ViewContainerRef,\n    private ifChangedService: IfChangedService\n  ) { }\n\n\n  /**\n  * Updates the view in the Angular component if the value has changed since the last check.\n  *\n  * This function compares the current value with the previous value stored in the ifChangedService.\n  * If the values are different, it clears the existing view and inserts a new embedded view.\n  * Finally, it updates the previous value for future comparisons.\n  *  \n  * @param {*} value - The current value to check against the previous value.\n  * @returns {void}\n  */\n  @Input() set appIfChanged(value: any) {\n    const previousValue = this.ifChangedService.getPreviousValue();\n    if (previousValue !== undefined && value !== previousValue) {\n      this.viewContainer.clear();\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n    this.ifChangedService.setPreviousValue(value);\n  }\n\n  /**\n  * Setter method for the `getLastTime` input property.\n  *\n  * This setter is triggered whenever the value of the `getLastTime` input property changes.\n  * It clears the existing view in the Angular component's ViewContainer and inserts a new\n  * embedded view using the provided templateRef with the specified value as the context.\n  *\n  * @param {*} value - The new value for the `getLastTime` input property.\n  * @returns {void}\n  * @example\n  * // Usage in Angular component template:\n  * // \n  */\n  @Input() set getLastTime(value: any) {\n    this.viewContainer.clear();\n    this.viewContainer.createEmbeddedView(this.templateRef, { $implicit: value });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IfChangedService.html":{"url":"injectables/IfChangedService.html","title":"injectable - IfChangedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IfChangedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/if-changed-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstChange\n                            \n                            \n                                    Public\n                                previousValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPreviousValue\n                            \n                            \n                                setPreviousValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousValue\n                        \n                    \n                \n            \n            \n                \ngetPreviousValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/if-changed-service.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPreviousValue\n                        \n                    \n                \n            \n            \n                \nsetPreviousValue(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/if-changed-service.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/services/if-changed-service.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        previousValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/if-changed-service.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class IfChangedService {\n  public previousValue: any;\n  firstChange: boolean = true;\n\n  setPreviousValue(value: any) {\n    this.previousValue = value;\n  }\n\n  getPreviousValue(): any {\n    return this.previousValue;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImprintComponent.html":{"url":"components/ImprintComponent.html","title":"component - ImprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/imprint/imprint.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-imprint\n            \n\n\n\n            \n                styleUrls\n                ./imprint.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./imprint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeImprint\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeImprintView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeImprintView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/startscreen/imprint/imprint.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeImprint\n                        \n                    \n                \n            \n            \n                \ncloseImprint()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/imprint/imprint.component.ts:18\n                        \n                    \n\n\n            \n                \n                        Emits an event to signal the closing of the imprint view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-imprint',\n  templateUrl: './imprint.component.html',\n  styleUrls: ['./imprint.component.scss']\n})\nexport class ImprintComponent {\n\n  @Output() closeImprintView = new EventEmitter();\n\n  /**\n * Emits an event to signal the closing of the imprint view.\n * \n * @emits closeImprintView\n * @returns {void}\n */\ncloseImprint() {\n  this.closeImprintView.emit();\n}\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    Impressum\n    Name des Betreibers: Max Mustermann\n    Adresse: Musterstraße 123, 12345 Musterstadt\n  \n  \n    Contact\n    E-Mail: max.mustermann@example.com\n  \n\n\n    \n\n    \n                \n                    ./imprint.component.scss\n                \n                .impressum-container {\n  max-width: 606px;\n  padding: 48px 56px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n  border-radius: 30px;\n  margin: 0px 10px;\n  \n  h1,\n  h2 {\n    color: rgba(68, 77, 242, 1);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Impressum    Name des Betreibers: Max Mustermann    Adresse: Musterstraße 123, 12345 Musterstadt        Contact    E-Mail: max.mustermann@example.com  '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IntroComponent.html":{"url":"components/IntroComponent.html","title":"component - IntroComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IntroComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/intro/intro.component.ts\n\n\n\n    \n        Description\n    \n    \n        The IntroComponent displays an introduction with animations.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-intro\n            \n\n\n\n            \n                styleUrls\n                ./intro.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./intro.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationLogo\n                            \n                            \n                                animationStart\n                            \n                            \n                                d_none\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/intro/intro.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Initializes the component and triggers animations.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationLogo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/intro/intro.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        animationStart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/intro/intro.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        d_none\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/intro/intro.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * The IntroComponent displays an introduction with animations.\n *\n * @export\n * @class IntroComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-intro',\n  templateUrl: './intro.component.html',\n  styleUrls: ['./intro.component.scss']\n})\nexport class IntroComponent implements OnInit {\n\n  animationStart: boolean = false;\n  animationLogo: boolean = false;\n  d_none: boolean = false;\n\n  /**\n   * Initializes the component and triggers animations.\n   * \n   * @memberof IntroComponent\n   * @returns {void}\n   */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.animationStart = true;\n      setTimeout(() => {\n        this.animationLogo = true;\n        //debugger\n        setTimeout(() => {\n          this.d_none = true;\n        }, 600);\n      }, 1000);\n    }, 1000);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n        DABubble\n    \n\n    \n\n    \n                \n                    ./intro.component.scss\n                \n                .background {\n    z-index: 2;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: linear-gradient(1.46deg, #313AE6 1.22%, #797EF3 98.76%);\n    width: 100%;\n    height: 100%;\n    transition: 1s;\n}\n\n.background.d-none{\n    display: none;\n}\n\n.logo {\n    z-index: 2;\n    display: flex;\n    position: absolute;\n    top: calc(50% - 92px);\n    left: calc(50% - 155px);\n    color: white;\n    font-size: 100px;\n    font-weight: 600;\n    transition: 700ms;\n    transition: opacity 0.5s, transform 0.5s;\n\n\n    img {\n        height: 184px;\n    }\n}\n\n  .logo.d-none {\n    opacity: 0;\n    transform: scale(0);\n    pointer-events: none; \n  }\n\n\n  @keyframes slidelogo-out {\n      0% {\n          opacity: 1;\n      }\n  \n      100% {\n          top: 50px;\n          left: 50px;\n          transform: scale(0.5);\n          opacity: 0;\n      }\n  }\n  \n  @keyframes slidelogo-out-mobile {\n      0% {\n          opacity: 1;\n      }\n  \n      100% {\n          top: 0px;\n          left: calc(50% - 200px);\n          transform: scale(0.3);\n          opacity: 0;\n      }\n  }\n  \n  @keyframes slidelogo-in {\n      0% {\n          opacity: 0;\n          transform: scale(2);\n          top: 50%;\n          left: 50%;\n      }\n  \n      100% {\n          top: 75px;\n          left: 75px;\n          opacity: 1;\n          transform: scale(1);\n      }\n  }\n  \n  @keyframes slidelogo-in-mobile {\n      0% {\n          opacity: 0;\n          top: 50%;\n          left: 50%;\n      }\n  \n      100% {\n          top: 40px;\n          left: 40px;\n          opacity: 1;\n      }\n  }\n  \n.logo-text {\n    width: 550px;\n    height: 200px;\n    overflow-x: hidden;\n    position: relative;\n\n    span {\n        transition: 700ms;\n        position: absolute;\n        top: 24px;\n        transform: translateX(-100%);\n    }\n}\n\n\n.slide-img {\n    transform: translateX(-200px);\n}\n\n.slide-text {\n    transform: translateX(10%) !important;\n}\n\n.slide-logo {\n    animation: slidelogo-out 1s;\n}\n\n.opacity {\n    opacity: 0;\n}\n\n\n@keyframes slidelogo-out {\n    0% {\n        opacity: 1;\n    }\n\n    100% {\n        top: 50px;\n        left: 50px;\n        scale: 0.5;\n        opacity: 0;\n    }\n}\n\n@keyframes slidelogo-out-mobile {\n    0% {\n        opacity: 1;\n    }\n\n    100% {\n        top: 50px;\n        left: calc(40% - 200px);\n        scale: 0.3;\n        opacity: 0;\n    }\n}\n\n@keyframes slidelogo-in {\n    0% {\n        opacity: 0;\n        scale: 2;\n        top: 50%;\n        left: 50%;\n    }\n\n    100% {\n        top: 75px;\n        left: 75px;\n        opacity: 1;\n        scale: 1;\n    }\n}\n\n@keyframes slidelogo-in-mobile {\n    0% {\n        opacity: 0;\n        top: 50%;\n        left: 50%;\n    }\n\n    100% {\n        top: 40px;\n        left: 40px;\n        opacity: 1;\n    }\n}\n\n@media screen and (max-width: 800px) {\n\n    .logo {\n        top: calc(50% - 46px);\n        left: calc(50% - -53px);\n        font-size: 40px;\n        img {\n            height: 80px;\n        }\n    }\n\n    .logo-text {\n        span {\n            top: 15px;\n        }\n    }\n}\n\n@media screen and (max-width: 570px) {\n   \n\n    .slide-logo {\n        animation: slidelogo-out-mobile 1s;\n    }\n\n    \n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                DABubble    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'IntroComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                errorInfo\n                            \n                            \n                                firebaseUserService\n                            \n                            \n                                guestLoginName\n                            \n                            \n                                guestLoginPassword\n                            \n                            \n                                hidePasswordImage\n                            \n                            \n                                isInputActive\n                            \n                            \n                                isPasswordInputActive\n                            \n                            \n                                isPasswordVisible\n                            \n                            \n                                loginErrorMessage\n                            \n                            \n                                loginFailed\n                            \n                            \n                                showPasswordImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                guestLogin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                loginWithGoogle\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onForgotPasswordLinkClick\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPasswordLinkClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/startscreen/login/login.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        forgotPasswordLinkClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/startscreen/login/login.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        guestLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    guestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/login/login.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Initiates a guest login process.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Initiates the login process with the provided email and password.\nHandles login failures by displaying error messages.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \nloginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Initiates the login process using Google authentication.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/login/login.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nLogs whether a user is logged in.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onForgotPasswordLinkClick\n                        \n                    \n                \n            \n            \n                \nonForgotPasswordLinkClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/login/login.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the forgot password link by emitting the forgotPasswordLinkClick event.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/login/login.component.ts:108\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password input.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    emailInput: new FormControl('', [Validators.required, Validators.email]),\n    passwordInput: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firebaseUserService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFirebaseService)\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLoginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'guest@guest.at'\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLoginPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DABubbleGuest'\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePasswordImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/icons/hideeye.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginErrorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPasswordImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/icons/eye.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/login/login.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output, inject } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n\n  @Output() forgotPasswordLinkClick = new EventEmitter();\n\n  /**\n * Handles the click event on the forgot password link by emitting the `forgotPasswordLinkClick` event.\n * \n * @emits forgotPasswordLinkClick\n * @returns {void}\n */\n  onForgotPasswordLinkClick() {\n    this.forgotPasswordLinkClick.emit();\n  }\n\n  errorInfo: any = false;\n  isInputActive = false;\n  isPasswordInputActive = false;\n  isPasswordVisible: boolean = false;\n  showPasswordImage: string = 'assets/img/icons/eye.png';\n  hidePasswordImage: string = 'assets/img/icons/hideeye.png';\n\n  guestLoginName = 'guest@guest.at';\n  guestLoginPassword = 'DABubbleGuest';\n\n  contactForm = new FormGroup({\n    emailInput: new FormControl('', [Validators.required, Validators.email]),\n    passwordInput: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n    ]),\n  });\n\n  loginFailed = false;\n  loginErrorMessage = \"\";\n\n  constructor(private authService: AuthFirebaseService) { }\n\n  firebaseUserService = inject(UserFirebaseService);\n\n  /**\n  * Angular lifecycle hook called after component initialization.\n  * Logs whether a user is logged in.\n  * \n  * @returns {void}\n  */\n  ngOnInit(): void {\n    console.log('User Logged In: ' + this.authService.isLoggedIn());\n  }\n\n  /**\n   * Initiates the login process with the provided email and password.\n   * Handles login failures by displaying error messages.\n   * \n   * @returns {void}\n   */\n  async login() {\n    if (\n      this.contactForm.value.emailInput != null &&\n      this.contactForm.value.passwordInput != null\n    ) {\n      this.authService.login(this.contactForm.value.emailInput, this.contactForm.value.passwordInput)\n        .catch((error) => {\n          const errorCode = error.code;\n          console.log(errorCode);\n\n          if (errorCode != null && errorCode != undefined) {\n            this.loginErrorMessage = this.authService.getErrorMessage(errorCode);\n            this.loginFailed = true;\n          }\n        });\n    }\n  }\n\n  /**\n * Initiates a guest login process.\n * \n * @returns {void}\n */\n  async guestLogin() {\n    this.authService\n      .login(this.guestLoginName, this.guestLoginPassword)\n  }\n\n  /**\n * Initiates the login process using Google authentication.\n * \n * @returns {void}\n */\n  loginWithGoogle() {\n    this.authService.GoogleAuth();\n  }\n\n  /**\n * Toggles the visibility of the password input.\n * \n * @returns {void}\n */\n  togglePasswordVisibility() {\n    this.isPasswordVisible = !this.isPasswordVisible;\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n    Anmeldung\n    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit\n    verwendest.\n  \n  \n    \n      \n        \n          \n        \n        \n      \n\n      \n        \n          {{ \"*Diese E-Mail-Adresse ist leider ungültig.\" }}\n        \n        \n          {{ \"*Gültige E-Mail-Adresse eingeben.\" }}\n        \n      \n      \n        \n          \n        \n        \n        \n          \n          \n        \n      \n      \n        \n          {{ \"*Gültiges Passwort eingeben.\" }}\n        \n      \n\n      \n        Passwort vergessen?\n      \n      \n        \n        \n          ODER\n        \n        \n      \n      \n        \n          \n        \n         Anmeldung mit Google \n      \n      \n        {{ loginErrorMessage }}\n      \n\n      \n        \n          Anmelden\n        \n        \n          Gäste-Login\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .user-login-container {\n  max-width: 606px;\n  padding: 50px 53px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n}\n\n.user-login-title {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 20px;\n  gap: 30px;\n\n  h1 {\n    font-size: 46px;\n    color: rgba(68, 77, 242, 1);\n    margin: 0px;\n  }\n}\n\n.user-login-input-container {\n  margin-top: 46px;\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n}\n\n.user-login-box {\n  display: flex;\n  flex-direction: column;\n  max-height: 60px;\n  justify-content: center;\n  margin-bottom: 40px;\n}\n\n.user-login-email,\n.user-login-password {\n  display: flex;\n  height: 100%;\n  border-radius: 100px;\n  background-color: rgba(236, 238, 254, 1);\n  font-size: 18px;\n  border: none;\n  padding: 18px 32px 18px 86px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid black;\n  }\n\n  &:focus {\n    border: 1px solid rgba(83, 90, 241, 1);\n  }\n}\n\n.user-login-icon {\n  display: flex;\n  position: relative;\n  left: 30px;\n  top: 41px;\n  width: 50px;\n}\n\n.warning-text,\n.warning-password {\n  display: flex;\n  width: 100%;\n  position: relative;\n  color: red;\n  top: -20px;\n  left: 0px;\n}\n\n.user-login-password-restore {\n  text-align: center;\n  margin-top: 10px;\n  margin-bottom: 29px;\n\n  a {\n    color: rgba(121, 126, 243, 1);\n    text-decoration: none;\n    padding: 5px 15px;\n    font-size: 18px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: rgba(236, 238, 254, 1);\n      border-radius: 30px;\n      transition: background-color 0.15s ease-in-out;\n    }\n  }\n}\n\n.user-register-passwort-hide {\n  display: flex;\n  position: relative;\n  right: 15px;\n  top: -42px;\n  flex-direction: row-reverse;\n  height: 0.5px;\n\n  img {\n    width: 24px;\n    height: 24px;\n  }\n}\n\n.user-login-seperation {\n  display: flex;\n  text-align: center;\n  font-size: 18px;\n  align-items: center;\n\n  p {\n    margin: 0px 15px;\n    font-size: 18px;\n    font-weight: bold;\n  }\n  margin-bottom: 56px;\n}\n\n.user-seperation-bar {\n  width: 100%;\n  border-bottom: 1px solid rgba(173, 176, 217, 1);\n\n}\n\n.user-google-login {\n  display: flex;\n  white-space: nowrap;\n  background-color: rgb(236, 238, 254);\n  padding: 11px 32px;\n  border-radius: 100px;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 43px;\n  cursor: pointer;\n  font-size: 18px;\n  color: rgba(68, 77, 242, 1);\n  border: 1px solid transparent;\n\n  &:hover {\n    border: 1px solid rgba(68, 77, 242, 1);\n    font-weight: bold;\n  }\n\n  &:active {\n    border: 1px solid black;\n    font-weight: 400;\n  }\n}\n\n.user-login-button-container {\n  display: flex;\n  justify-content: center;\n  gap: 30px;\n}\n\n.blue-button {\n  font-family: 'Nunito', sans-serif;\n  border-radius: 25px;\n  padding: 12px 25px;\n  height: 49px;\n  font-size: 18px;\n  background-color: rgba(68, 77, 242, 1) !important;\n\n  &:hover {\n    background-color: rgba(121, 126, 243, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n  }\n}\n\n.white-button {\n  border-radius: 25px;\n  font-family: 'Nunito', sans-serif;\n  white-space: nowrap;\n  padding: 12px 25px;\n  height: 49px;\n  font-size: 18px;\n  border: 1px solid rgba(68, 77, 242, 1) !important ;\n  font-weight: bold;\n  color: rgba(68, 77, 242, 1)!important;\n\n  &:hover {\n    background-color: rgba(68, 77, 242, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n    color: white !important;\n  }\n}\n\n.br-30 {\n  border-radius: 30px;\n}\n\n#loginFailed-container {\n  color: red;\n  text-align: center;\n  padding-bottom: 24px;\n}\n\n\n\n@media screen and (max-width: 640px) {\n\n\n  .user-login-container{\n    padding: 35px 20px;\n    margin-left: 20px;\n    margin-right: 20px;\n  }\n\n  .user-login-title{\n    gap: 20px;\n\n    h1{\n      font-size: 32px;\n    }\n  }\n  .user-login-box{\n    margin-bottom: 30px;\n  }\n\n  .user-login-input-container{\n    margin-top: 20px;\n    max-width: none;\n  }\n\n  .user-login-password-restore{\n    margin-bottom: 20px;\n  }\n\n  .user-login-seperation{\n    margin-bottom: 20px;\n  }\n\n  .user-google-login{\n    margin-bottom: 20px;\n    padding: 6px 32px;\n  }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Anmeldung    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit    verwendest.                                                                              {{ \"*Diese E-Mail-Adresse ist leider ungültig.\" }}                          {{ \"*Gültige E-Mail-Adresse eingeben.\" }}                                                                                                                        {{ \"*Gültiges Passwort eingeben.\" }}                            Passwort vergessen?                                      ODER                                                               Anmeldung mit Google                     {{ loginErrorMessage }}                              Anmelden                          Gäste-Login                    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainscreenComponent.html":{"url":"components/MainscreenComponent.html","title":"component - MainscreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainscreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/mainscreen.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mainscreen\n            \n\n\n\n            \n                styleUrls\n                ./mainscreen.component.scss,../../styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./mainscreen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeSelectionService\n                            \n                            \n                                channelOpen\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                seclectedChannel\n                            \n                            \n                                showSidenavMobile\n                            \n                            \n                                sideNavOpen\n                            \n                            \n                                threadOpen\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                userProfilOpen\n                            \n                            \n                                userProfilUser\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                newMessageMobile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleSideNav\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, userService: UserFirebaseService, threadService: ThreadFirebaseService, userProfileService: UserProfileService, chatService: ChatFirebaseService, windowSizeService: WindowSizeService, activeSelectionService: ActiveSelectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/mainscreen.component.ts:27\n                            \n                        \n\n                \n                    \n                            Defines services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowSizeService\n                                                  \n                                                        \n                                                                        WindowSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeSelectionService\n                                                  \n                                                        \n                                                                        ActiveSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        newMessageMobile\n                        \n                    \n                \n            \n            \n                \nnewMessageMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/mainscreen.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Opens view for new message in mobile screen\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/mainscreen.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Subscribe observables\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSideNav\n                        \n                    \n                \n            \n            \n                \ntoggleSideNav()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/mainscreen.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Hides or show sidenav\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActiveSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seclectedChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSidenavMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sideNavOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfilOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userProfilUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/mainscreen.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/models/user.class';\nimport { ActiveSelectionService } from 'src/services/active-selection.service';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { ChatFirebaseService } from 'src/services/chat-firebase.service';\nimport { ThreadFirebaseService } from 'src/services/thread-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { UserProfileService } from 'src/services/user-profile.service';\nimport { WindowSizeService } from 'src/services/window-size.service';\n\n@Component({\n  selector: 'app-mainscreen',\n  templateUrl: './mainscreen.component.html',\n  styleUrls: ['./mainscreen.component.scss', '../../styles.scss']\n})\nexport class MainscreenComponent implements OnInit {\n\n  channelOpen = true;\n  threadOpen = true;\n  sideNavOpen = true;\n  userProfilOpen = false;\n  userProfilUser = new User();\n  seclectedChannel: string = \"\";\n  windowWidth: any; \n  showSidenavMobile: Boolean = true; \n\n\n  /**\n   * Defines services\n   * @param channelService \n   * @param userService \n   * @param threadService \n   * @param userProfileService \n   * @param chatService \n   * @param windowSizeService \n   * @param activeSelectionService \n   */\n  constructor(\n    public channelService: ChannelFirebaseService,\n    public userService: UserFirebaseService,\n    public threadService: ThreadFirebaseService,\n    private userProfileService: UserProfileService,\n    public chatService: ChatFirebaseService, \n    private windowSizeService: WindowSizeService,\n    public activeSelectionService: ActiveSelectionService\n  ) {}\n\n  /**\n   * Subscribe observables \n   */\n  ngOnInit(): void {\n    this.userProfileService.openUserProfil$.subscribe((user: User) => {\n      this.userProfilOpen = true;\n      this.userProfilUser = user;\n    });\n    this.userProfileService.closeUserProfil$.subscribe(() => {\n      this.userProfilOpen = false;\n    });\n    this.windowSizeService.windowWidth$.subscribe(windowWidth => {\n      this.windowWidth = windowWidth; \n    });\n    this.windowSizeService.setWindowSize(); \n  }\n\n\n  /**\n   * Hides or show sidenav\n   */\n  toggleSideNav() {\n    this.sideNavOpen = !this.sideNavOpen;\n  }\n\n\n  /**\n   * Opens view for new message in mobile screen\n   */\n  newMessageMobile(){\n    this.activeSelectionService.activeSelection = undefined; \n    this.showSidenavMobile = false; \n  }\n}\n\n    \n\n    \n        \n    \n    \n     768\">\n        \n\n        \n        \n        \n\n        \n            \n        \n        \n            \n            \n        \n        \n            \n        \n    \n\n    \n        \n        \n        \n\n        \n            \n        \n\n        \n            \n            \n        \n\n        \n            \n            \n            \n        \n\n        \n            \n                edit_square\n            \n        \n    \n   \n    \n\n\n\n    Workspace-Menü schließen\n    Workspace-Menü öffnen\n\n\n\n    \n\n    \n\n    \n                \n                    ./mainscreen.component.scss\n                \n                $sideNav-width: 366px;\n$thread-width: 600px;\n\napp-channel, app-chat, app-empty-window {\n    flex-grow: 1;\n}\n\n#main-container {\n    display: flex;\n    flex-direction: column;\n\n    height: 100%;\n    max-height: calc(100vh - 48px);\n    padding: 24px;\n\n    #main-body {\n\n        display: flex;\n        justify-content: space-between;\n        gap: 12px;\n        height: calc(100% - 100px);\n\n        #main-sidebar {\n            width: $sideNav-width;\n        }\n\n        #main-channel {}\n\n        #main-chat {}\n\n        #main-thread {\n            width: $thread-width;\n        }\n    }\n}\n\n#workspace {\n    position: fixed;\n    left: -125px;\n    bottom: 30vh;\n    z-index: 8;\n    width: 250px;\n    transform: rotate(90deg);\n    border-radius: 30px 30px 0px 0px;\n    padding-left: 18px;\n    padding-right: 18px;\n    box-shadow: 11px 28px 77px 0px rgba(0, 0, 0, 0.75);\n    background-color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    &:hover {\n        color: #535AF1;\n        cursor: pointer;\n    }\n}\n#main-body-mobile{\n    display: none;\n}\n\n#new-message-mobile{\n    position: fixed;\n    bottom: 24px; \n    right: 24px;\n    &:hover{\n        cursor: pointer;\n    }\n}\n\n@media only screen and (max-width: 768px) {\n\n    #workspace {\n        display: none;\n    }\n\n    #main-container{\n        padding: unset;\n        height: 100%;\n        max-height: 100vh;\n\n        #main-header{\n            padding: 24px 24px 0px 24px;\n        }\n        \n        #main-body{\n            display: none !important;\n        }\n        \n        #main-body-mobile{\n            display: block;\n            height: calc(100% - 110px);\n        }\n    }\n\n}\n\n                \n                    ../../styles.scss\n                \n                @use '@angular/material' as mat;\n\n@import \"@ctrl/ngx-emoji-mart/picker\";\n\n@font-face {\n    font-family: 'Nunito';\n    src: url('assets/fonts/nunito-v26-latin-regular.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 200;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-200.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 300;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-300.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 500;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-500.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 600;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-600.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito Sans';\n    src: url('assets/fonts/nunito-sans-v15-latin-regular.woff2');\n}\n\n/* You can add global styles to this file, and also import other style files */\n\nhtml,\nbody {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    background-color: #edeefe;\n}\n\n.dsp-none{\n    display: none;\n}\n\ninput {\n    font-family: 'Nunito', sans-serif;\n}\n\ntextarea {\n    font-family: 'Nunito', sans-serif;\n}\n\nbutton{\n    font-family: 'Nunito', sans-serif;\n}\n\n.br-30 {\n    border-radius: 30px;\n}\n\n.btn-blue{\n    background-color: #444DF2; \n    color: white;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid white;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(121, 126, 243, 1) !important;\n        transition: background-color 0.15s ease-in-out\n    }\n}\n.btn-white{\n    background-color: white; \n    color: #444DF2;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid #444DF2;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(68, 77, 242, 1) !important;\n        transition: background-color 0.15s ease-in-out;\n        color: white !important;\n    }\n}\n\n.closeIcon-container{\n    padding: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    cursor: pointer;\n    min-width: 30px;\n    min-height: 30px;\n\n    &:hover{\n        background-color: #ECEEFE; \n        #closeIcon path {\n            fill: #535AF1; \n            }\n    }\n\n    #closeIcon{\n        width: 24px;\n        height: 24px;\n    }\n}\n\n\n.highlighted {\n    background-color: yellow;\n  }\n  .highlight-container {\n    margin-top: 10px;\n  }\n\n\n\n.notification-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    pointer-events: none;\n\n    .notification-card {\n        z-index: 99;\n        position: relative;\n        top: 70%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: fit-content;\n        opacity: 0;\n\n        .notification-card-content {\n            font-weight: 500;\n            font-size: 24px;\n        }\n    }\n\n\n\n    //Available animation types\n    @keyframes shift-left-in {\n        0% {\n            opacity: 0;\n            left: -10%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: -10%;\n        }\n    }\n\n    @keyframes shift-up {\n        0% {\n            opacity: 0;\n            top: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n        }\n\n        70% {\n            top: 70%;\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            top: 110%;\n        }\n    }\n\n    @keyframes shift-right-in {\n        0% {\n            opacity: 0;\n            left: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: 110%;\n        }\n    }\n    \n\n    //Types of Messages\n    .error {\n        background-color: rgb(255, 66, 66);\n        color: white;\n    }\n\n    .success {\n        background-color: #4f9d00;\n        border: solid 1px #00d84f;\n        color: white;\n    }\n\n    .default {\n        background-color: #444DF2;\n        border-radius: 30px 30px 0px 30px;\n        padding: 25px;\n        border: none;\n        color: white;\n        margin-left: 8px;\n        margin-right: 8px;\n    }\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             768\">                                                                                                                                                                                                                                                                                                                            edit_square                                   Workspace-Menü schließen    Workspace-Menü öffnen    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainscreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/message.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autorId\n                            \n                            \n                                avatarSrc\n                            \n                            \n                                content\n                            \n                            \n                                fileName\n                            \n                            \n                                fileSrc\n                            \n                            \n                                id\n                            \n                            \n                                path\n                            \n                            \n                                reactions\n                            \n                            \n                                timestamp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/message.class.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autorId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avatarSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reaction[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/models/message.class.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/message.class.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { content: string; timestamp: number; autorId: string; avatarSrc: string; reactions: {}; fileSrc: string; fileName: string; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Reaction } from \"./reaction.class\";\n\nexport class Message {\n    id: string;\n    content: string;\n    timestamp: number;\n    autorId: string;\n    avatarSrc: string;\n    fileSrc: string;\n    fileName: string;\n    reactions: Reaction[];\n    path: string;\n\n    constructor(obj?: any) {\n        this.id = obj ? obj.id : \"\";\n        this.content = obj ? obj.content : \"\";\n        this.timestamp = obj ? obj.timestamp : 0;\n        this.autorId = obj ? obj.autorId : \"\";\n        this.avatarSrc = obj ? obj.avatarSrc : \"\";\n        this.path = obj ? obj.path : \"\";\n        this.fileSrc= obj ? obj.fileSrc : \"\";\n        this.fileName= obj ? obj.fileName : \"\";\n        this.reactions = obj ? obj.reactions : [];\n    }\n\n    toJSON() {\n        return {\n            content: this.content,\n            timestamp: this.timestamp,\n            autorId: this.autorId,\n            avatarSrc: this.avatarSrc,\n            reactions: this.reactions,\n            fileSrc: this.fileSrc,\n            fileName: this.fileName\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageEditComponent.html":{"url":"components/MessageEditComponent.html","title":"component - MessageEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/message/message-edit/message-edit.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-edit\n            \n\n\n\n            \n                styleUrls\n                ./message-edit.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _message\n                            \n                            \n                                _path\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                fileIMG\n                            \n                            \n                                fileName\n                            \n                            \n                                fileSrc\n                            \n                            \n                                messageControl\n                            \n                            \n                                showEmojiBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeEditMode\n                            \n                            \n                                closeEmojiBar\n                            \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                handleEmojiSelection\n                            \n                            \n                                openMessage\n                            \n                            \n                                    Async\n                                saveMessage\n                            \n                            \n                                toggleEmojiBar\n                            \n                            \n                                updatedThreadMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                showEditMessageOutput\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    message\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, messageService: MessageFirebaseService, storageService: StorageFirebaseService, threadService: ThreadFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        showEditMessageOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeEditMode\n                        \n                    \n                \n            \n            \n                \ncloseEditMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeEmojiBar\n                        \n                    \n                \n            \n            \n                \ncloseEmojiBar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Closes the emoji list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEmojiSelection\n                        \n                    \n                \n            \n            \n                \nhandleEmojiSelection(selectedEmoji: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedEmoji\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openMessage\n                        \n                    \n                \n            \n            \n                \nopenMessage(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Asynchronously creates and sends a message to a selected channel.\nThis function sets the timestamp for the message and updates the selected channel with the message.\nAfter sending the message, it resets the message object to a new instance of the Message class.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEmojiBar\n                        \n                    \n                \n            \n            \n                \ntoggleEmojiBar(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the emoji list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedThreadMsg\n                        \n                    \n                \n            \n            \n                \nupdatedThreadMsg()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _path\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileIMG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageControl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEmojiBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n\n\n                \n                    \n                        setmessage(value: Message)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/message/message-edit/message-edit.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Message\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Message } from 'src/models/message.class';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { MessageFirebaseService } from 'src/services/message-firebase.service';\nimport { StorageFirebaseService } from 'src/services/storage-firebase.service';\nimport { ThreadFirebaseService } from 'src/services/thread-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n@Component({\n  selector: 'app-message-edit',\n  templateUrl: './message-edit.component.html',\n  styleUrls: ['./message-edit.component.scss']\n})\nexport class MessageEditComponent {\n  messageControl: FormControl = new FormControl();\n  showEmojiBar: boolean = false;\n  _path: string | undefined;\n  _message: Message | undefined;\n  fileName: string | undefined;\n  fileSrc: string | undefined;\n  fileIMG: any;\n\n  @Output() showEditMessageOutput: EventEmitter = new EventEmitter();\n\n  @Input() set message(value: Message) {\n    this._message = new Message(value);\n  }\n\n  constructor(\n    public channelService: ChannelFirebaseService,\n    private messageService: MessageFirebaseService,\n    private storageService: StorageFirebaseService,\n    private threadService: ThreadFirebaseService\n  ) {  }\n\n  /**\n  * Asynchronously creates and sends a message to a selected channel.\n  * This function sets the timestamp for the message and updates the selected channel with the message.\n  * After sending the message, it resets the `message` object to a new instance of the Message class.\n  * \n  * @returns {Promise}\n  */\n  async saveMessage() {\n    if (this._message) {\n      if (this._message.path) {\n        this.messageService.createMessage(this._message.path, this._message);\n        this.updatedThreadMsg();\n      }\n      this.showEmojiBar = false;\n      this.closeEditMode();\n    }\n  }\n\n  updatedThreadMsg(){\n    if(this.threadService.message && this._message){\n      if(this.threadService.message.id == this._message.id){\n        this.threadService.message=this._message;\n      }\n    }\n  }\n\n  closeEditMode() {\n    this.showEditMessageOutput.emit(false);\n  }\n\n  \n  /**\n   * Toggles the visibility of the emoji list.\n   */\n  toggleEmojiBar(event: Event) {\n    event.stopPropagation();\n    this.showEmojiBar = !this.showEmojiBar;\n  }\n\n\n  /**\n  * Closes the emoji list.\n  */\n  closeEmojiBar() {\n    this.showEmojiBar = false;\n  }\n\n  openMessage(message: Message) {\n    this.message = message;\n  }\n\n\n  handleEmojiSelection(selectedEmoji: string) {\n    if (selectedEmoji == \"noSelection\") {\n      this.closeEmojiBar();\n    } else {\n      if (this._message) {\n        this._message.content += selectedEmoji;\n      }\n    }\n  }\n\n  async deleteFile() {\n    try {\n      if (this._message && this._message.fileSrc) {\n        await this.storageService.deleteImage(this._message.fileSrc);\n        this._message.fileSrc = '';\n        this._message.fileName = '';\n      }\n    } catch (error) {\n      console.error('Error deleting file: ', error);\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n\n        \n            \n            \n          \n        \n           \n            \n                Zurück\n            \n            \n                Speichern\n            \n\n        \n\n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./message-edit.component.scss\n                \n                .msg-edit-container {\n  position: relative;\n  width: calc(100% - 40px);\n  background-color: rgb(255, 255, 255);\n  border: solid 1px #adb0d9;\n  border-radius: 20px;\n  padding: 20px;\n  min-height: 100px;\n\n  .preview-file {\n    display: flex;\n    max-height: 60px;\n    max-width: 60px;\n    object-fit: cover;\n    align-items: flex-end;\n\n    img {\n      border-radius: 30%;\n      width: 60px;\n      height: 60px;\n    }\n  }\n\n  .close-red-icon {\n    display: flex;\n    position: relative;\n    height: 20px !important;\n    top: -40px;\n    cursor: pointer;\n  }\n\n  .options {\n    z-index: 9;\n    position: absolute;\n    bottom: 20px;\n    left: 20px;\n    right: 20px;\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n\n    .toolbar-icon {\n      display: flex;\n      cursor: pointer;\n      align-items: center;\n      justify-content: center;\n\n      &:hover {\n        background-color: rgba(236, 238, 254, 1);\n        border-radius: 30px;\n\n        #addreaction-icon path {\n          fill: #535af1;\n        }\n      }\n    }\n\n    .msg-submit-options {\n      display: flex;\n      gap: 32px;\n\n      .msg-send {\n        display: flex;\n        gap: 32px;\n\n        button {\n          border-radius: 24px;\n          padding: 12px 25px 12px 25px;\n          font-weight: 700;\n          font-size: 18px;\n          line-height: 24.55px;\n          text-align: center;\n          cursor: pointer;\n        }\n\n        .back {\n          background-color: white;\n          color: #797ef3;\n          border: 1px solid #797ef3;\n\n          &:hover {\n            background-color: rgba(68, 77, 242, 1) !important;\n            transition: background-color 0.15s ease-in-out;\n            color: white !important;\n          }\n        }\n\n        .submit {\n          color: white;\n          background-color: #444df2;\n          border: none;\n\n          &:hover {\n            background-color: rgba(121, 126, 243, 1) !important;\n            transition: background-color 0.15s ease-in-out;\n          }\n        }\n      }\n    }\n  }\n\n  .msg-write-container {\n    width: 100%;\n    margin-bottom: 36px;\n    border: none;\n    min-height: 30px;\n    font-size: 18px;\n    line-height: 24.55px;\n\n    textarea {\n      background-color: white;\n      border: none;\n      height: fit-content;\n    }\n\n    &:focus {\n      outline: none;\n    }\n  }\n}\n\n@media only screen and (max-width: 620px) {\n  .msg-edit-container {\n    width: calc(100% - 30px);\n    padding: 30px;\n    gap: 10px;\n\n    .preview-file {\n      max-height: 50px;\n      max-width: 50px;\n      img {\n        width: 50px;\n        height: 50px;\n      }\n    }\n\n    .close-red-icon {\n      height: 20px !important;\n      top: -30px;\n      left: -10px;\n    }\n  }\n}\n\n@media only screen and (max-width: 560px) {\n  .msg-edit-container {\n    \n    .options {\n      bottom: 10px;\n      right: 10px;\n      left: 5px;\n      align-items: center;\n\n      .msg-submit-options {\n        .msg-send {\n          button {\n            padding: 12px 25px 12px 25px;\n            font-weight: 700;\n            font-size: 13px;\n            line-height: 16.55px;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media only screen and (max-width: 510px) {\n    .msg-edit-container {\n       \n      .options {\n        bottom: 10px;\n        right: 10px;\n        left: 5px;\n        align-items: center;\n  \n        .msg-submit-options {\n            gap: 10px;\n          .msg-send {\n           \n            button {\n              padding: 12px 25px 12px 25px;\n              font-weight: 700;\n              font-size: 13px;\n              line-height: 16.55px;\n            }\n          }\n        }\n      }\n    }\n  }\n\n@media only screen and (max-width: 480px) {\n  .msg-edit-container {\n    width: calc(100% - 30px);\n    padding: 30px;\n    gap: 10px;\n\n    .preview-file {\n      max-height: 35px;\n      max-width: 35px;\n      img {\n        width: 35px;\n        height: 35px;\n      }\n    }\n\n    .close-red-icon {\n      height: 18px !important;\n      top: -20px;\n      left: -10px;\n    }\n\n    .options {\n      bottom: 10px;\n      right: 10px;\n      left: 5px;\n      align-items: center;\n\n      .msg-submit-options {\n        gap: 10px;\n\n        .msg-send {\n          button {\n            border-radius: 24px;\n            padding: 12px 13px 12px 13px;\n            font-weight: 700;\n            font-size: 10px;\n            line-height: 9.55px;\n          }\n        }\n      }\n    }\n  }\n}\n\n@media only screen and (max-width: 370px) {\n  .msg-edit-container {\n    width: calc(100% - 10px);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                             Zurück                                        Speichern                                    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'MessageEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageFirebaseService.html":{"url":"injectables/MessageFirebaseService.html","title":"injectable - MessageFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/message-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                isOwnMessage\n                            \n                            \n                                    Public\n                                loadedAnswers\n                            \n                            \n                                    Public\n                                loadedReactions\n                            \n                            \n                                    Private\n                                unsubAnswers\n                            \n                            \n                                    Private\n                                unsubMessage\n                            \n                            \n                                    Private\n                                unsubMessages\n                            \n                            \n                                    Private\n                                unsubReactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createMessage\n                            \n                            \n                                    Async\n                                deleteMessage\n                            \n                            \n                                    Async\n                                deleteReaction\n                            \n                            \n                                    Async\n                                loadAnswers\n                            \n                            \n                                    Async\n                                loadReactions\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                updateReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore, channelService: ChannelFirebaseService, idService: GenerateIdService)\n                    \n                \n                        \n                            \n                                Defined in src/services/message-firebase.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        idService\n                                                  \n                                                        \n                                                                        GenerateIdService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMessage(path: string, message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:126\n                        \n                    \n\n\n            \n                \n                        Creates or updates a message in Firestore with the given path and message object.\nIf the message has an empty ID, a new message will be created.\nIf the message has an existing ID, the corresponding message will be updated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the Firestore document where the message should be created or updated.\n\n\n                                            \n                                        \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message object to be created or updated.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMessage(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Deletes a message from the specified Firestore path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Firestore path where the message is stored.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nA promise that resolves when the message is successfully deleted.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteReaction(reaction: Reaction, path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Deletes a reaction from Firestore based on its path and reaction object.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe reaction object to be deleted.\n\n\n                                            \n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the Firestore document containing the reaction.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves when the deletion is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadAnswers(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Loads answers for a specific message from Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message for which answers are to be loaded.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadReactions\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadReactions(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Loads reactions for a specific message from Firestore.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe message for which reactions are to be loaded.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when the component is about to be destroyed.\nUnsubscribes from any active subscription.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateReaction(reaction: Reaction, path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/message-firebase.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Updates a reaction in Firestore based on the provided reaction object and path (optional).\nIf a path is provided in the reaction object, the existing Firestore document will be updated.\nIf no path is provided, a new document will be created with a generated reaction ID in the specified path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe reaction object to be updated or added.\n\n\n                                            \n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \n(Optional) The path to the Firestore document where the reaction should be updated or added.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A promise that resolves when the update or addition is complete.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isOwnMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedReactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Reaction[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubReactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/message-firebase.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Firestore } from '@angular/fire/firestore';\nimport { collection, updateDoc, doc, getDocs, onSnapshot, query, setDoc, where, addDoc, Timestamp, deleteDoc } from \"firebase/firestore\";\nimport { Message } from '../models/message.class';\nimport { ChannelFirebaseService } from './channel-firebase.service';\nimport { UserFirebaseService } from './user-firebase.service';\nimport { Reaction } from 'src/models/reaction.class';\nimport { ThreadFirebaseService } from './thread-firebase.service';\nimport { GenerateIdService } from './generate-id.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MessageFirebaseService {\n    private unsubMessage: any;\n    private unsubMessages: any;\n    public isOwnMessage: boolean = false;\n\n    private unsubReactions: any;\n    public loadedReactions: Reaction[] = [];\n\n    private unsubAnswers: any;\n    public loadedAnswers: Message[] = [];\n\n    constructor(\n        private firestore: Firestore,\n        public channelService: ChannelFirebaseService,\n        private idService: GenerateIdService\n    ) {\n    }\n\n    /**\n    * Updates a reaction in Firestore based on the provided reaction object and path (optional).\n    *\n    * If a path is provided in the reaction object, the existing Firestore document will be updated.\n    * If no path is provided, a new document will be created with a generated reaction ID in the specified path.\n    *\n    * @param {Reaction} reaction - The reaction object to be updated or added.\n    * @param {string} [path] - (Optional) The path to the Firestore document where the reaction should be updated or added.\n    * @returns {Promise} A promise that resolves when the update or addition is complete.\n    */\n    async updateReaction(reaction: Reaction, path: string) {\n        if (reaction.path) {\n            const docInstance = doc(this.firestore, reaction.path);\n            if (reaction.users.length == 0) {\n                deleteDoc(docInstance);\n            } else {\n                updateDoc(docInstance, reaction.toJSON());\n            }\n        } else {\n            const reactionId = this.idService.generateRandomId(20);\n            const docInstance = doc(this.firestore, `${path}/${reactionId}`);\n            await setDoc(docInstance, reaction.toJSON());\n        }\n    }\n\n\n    /**\n    * Deletes a reaction from Firestore based on its path and reaction object.\n    *\n    * @param {Reaction} reaction - The reaction object to be deleted.\n    * @param {string} path - The path to the Firestore document containing the reaction.\n    * @returns {Promise} A promise that resolves when the deletion is complete.\n    */\n    async deleteReaction(reaction: Reaction, path: string) {\n        await deleteDoc(doc(this.firestore, `${path}/${reaction.id}`));\n    }\n\n\n    /**\n    * Loads reactions for a specific message from Firestore.\n    *\n    * @param {Message} message - The message for which reactions are to be loaded.\n    * @returns {void}\n    */\n    async loadReactions(message: Message) {\n        if (message) {\n            const path = message.path + `/reactions/`;\n            this.unsubReactions = onSnapshot(collection(this.firestore, path), (querySnapshot: any) => {\n                this.loadedReactions = [];\n                querySnapshot.forEach((doc: any) => {\n                    if (doc.data()) {\n                        let reaction = new Reaction(doc.data()); path\n                        reaction.id = doc.id;\n                        reaction.path = path + doc.id\n                        this.loadedReactions.push(reaction);\n                    }\n                })\n            })\n        }\n    }\n\n\n    /**\n     * Loads answers for a specific message from Firestore.\n     *\n     * @param {Message} message - The message for which answers are to be loaded.\n     * @returns {void}\n     */\n    async loadAnswers(message: Message) {\n        let path = message.path + `/answers/`;\n        this.unsubAnswers = onSnapshot(collection(this.firestore, path), (querySnapshot: any) => {\n            this.loadedAnswers = [];\n            querySnapshot.forEach((doc: any) => {\n                if (doc.data()) {\n                    let answer = new Message(doc.data());\n                    answer.id = doc.id;\n                    answer.path = path + doc.id;\n                    this.loadedAnswers.push(answer);\n                }\n            })\n        });\n    }\n\n\n    /**\n    * Creates or updates a message in Firestore with the given path and message object.\n    *\n    * If the message has an empty ID, a new message will be created.\n    * If the message has an existing ID, the corresponding message will be updated.\n    *\n    * @param {string} path - The path to the Firestore document where the message should be created or updated.\n    * @param {Message} message - The message object to be created or updated.\n    * @returns {void}\n    */\n    async createMessage(path: string, message: Message) {\n        if (message.id == \"\") {\n            message.id = this.idService.generateRandomId(20);\n            path = path + message.id;\n            const docInstance = doc(this.firestore, path);\n            await setDoc(docInstance, message.toJSON());\n        } else {\n            const docInstance = doc(this.firestore, path);\n            await updateDoc(docInstance, message.toJSON());\n        }\n    }\n\n\n    /**\n    * Deletes a message from the specified Firestore path.\n    *\n    * @param {string} path - The Firestore path where the message is stored.\n    * @param {Message} message - The message to be deleted.\n    * @returns {Promise} - A promise that resolves when the message is successfully deleted.\n    */\n    async deleteMessage(path: string) {\n        await deleteDoc(doc(this.firestore, `${path}`));\n    }\n\n    /**\n    * Lifecycle hook called when the component is about to be destroyed.\n    * Unsubscribes from any active subscription.\n    */\n    ngOnDestroy() {\n        if (this.unsubMessages) {\n            this.unsubMessages();\n        }\n\n        if (this.unsubMessage) {\n            this.unsubMessage();\n        }\n\n        if (this.unsubReactions) {\n            this.unsubReactions();\n        }\n\n        if (this.unsubAnswers) {\n            this.unsubAnswers();\n        }\n    }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationService.html":{"url":"injectables/NotificationService.html","title":"injectable - NotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/notification.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                renderNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(windowSizeService: WindowSizeService)\n                    \n                \n                        \n                            \n                                Defined in src/services/notification.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        windowSizeService\n                                                  \n                                                        \n                                                                        WindowSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        renderNotification\n                        \n                    \n                \n            \n            \n                \nrenderNotification(message: string, style: string, animation: string, duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/notification.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Renders a notification with the specified message, style, animation, and duration.\nParams for style and animation can be declared in styles.scss\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                            \n                                                    \nThe message content of the notification.\n\n\n                                            \n                                        \n                                        \n                                                style\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"default\"\n                                            \n\n                                            \n                                                    \nThe style class to apply to the notification card. Available Options: default, success, error\n\n\n                                            \n                                        \n                                        \n                                                animation\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"shift-right-in\"\n                                            \n\n                                            \n                                                    \nThe animation to apply to the notification card. Available Options: \"shift-right-in\", shift-left-in\", \"shift-up\".\n\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    2\n                                            \n\n                                            \n                                                    \nThe duration (in seconds) for which the notification is displayed.\n\nParams for style and animation can be declared in styles.scss\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { WindowSizeService } from './window-size.service';\nimport { take } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class NotificationService {\n    \n    constructor( private windowSizeService: WindowSizeService){}\n\n    /**\n    * Renders a notification with the specified message, style, animation, and duration.\n    *\n    * @param {string} [message=\"\"] - The message content of the notification.\n    * @param {string} [style=\"default\"] - The style class to apply to the notification card. Available Options: default, success, error\n    * @param {string} [animation=\"shift-right-in\"] - The animation to apply to the notification card. Available Options: \"shift-right-in\", shift-left-in\", \"shift-up\".\n    * @param {number} [duration=2] - The duration (in seconds) for which the notification is displayed.\n    * \n    * Params for style and animation can be declared in styles.scss\n    * \n    * @returns {void}\n    */\n    renderNotification(message: string =\"\", style: string=\"default\", animation: string=\"shift-right-in\", duration: number=2){\n        let container=document.createElement(\"div\");\n        document.body.append(container);\n        container.classList.add('notification-container');\n        let element=document.createElement(\"div\");\n        element.classList.add('notification-card');\n        element.classList.add(style);\n        element.style.animation = `${animation} ${duration}s ease-in-out`;\n        element.innerHTML= message;\n        container.appendChild(element);\n        setTimeout(()=>{\n            container.remove();\n        },duration*1000)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/privacy-policy/privacy-policy.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n\n\n            \n                styleUrls\n                ./privacy-policy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePrivacyPolicy\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closePrivacyPolicyView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closePrivacyPolicyView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/startscreen/privacy-policy/privacy-policy.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePrivacyPolicy\n                        \n                    \n                \n            \n            \n                \nclosePrivacyPolicy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/privacy-policy/privacy-policy.component.ts:20\n                        \n                    \n\n\n            \n                \n                        Emits an event to signal the closing of the privacy policy view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss']\n})\nexport class PrivacyPolicyComponent {\n\n  @Output() closePrivacyPolicyView = new EventEmitter();\n\n\n\n  /**\n * Emits an event to signal the closing of the privacy policy view.\n * \n * @emits closePrivacyPolicyView\n * @returns {void}\n */\nclosePrivacyPolicy() {\n  this.closePrivacyPolicyView.emit();\n}\n\n\n}\n\n    \n\n    \n        \n \n  \n    \n  \n  Datenschutz&shy;erkl&auml;rung\n  1. Datenschutz auf einen Blick\n  Allgemeine Hinweise\n  \n    Die folgenden Hinweise geben einen einfachen &Uuml;berblick dar&uuml;ber,\n    was mit Ihren personenbezogenen Daten passiert, wenn Sie diese Website\n    besuchen. Personenbezogene Daten sind alle Daten, mit denen Sie\n    pers&ouml;nlich identifiziert werden k&ouml;nnen. Ausf&uuml;hrliche\n    Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text\n    aufgef&uuml;hrten Datenschutzerkl&auml;rung.\n  \n  Datenerfassung auf dieser Website\n  \n    Wer ist verantwortlich f&uuml;r die Datenerfassung auf dieser Website?\n  \n  \n    Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber.\n    Dessen Kontaktdaten k&ouml;nnen Sie dem Abschnitt &bdquo;Hinweis zur\n    Verantwortlichen Stelle&ldquo; in dieser Datenschutzerkl&auml;rung\n    entnehmen.\n  \n  Wie erfassen wir Ihre Daten?\n  \n    Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen.\n    Hierbei kann es sich z.&nbsp;B. um Daten handeln, die Sie in ein\n    Kontaktformular eingeben.\n  \n  \n    Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der\n    Website durch unsere IT-Systeme erfasst. Das sind vor allem technische Daten\n    (z.&nbsp;B. Internetbrowser, Betriebssystem oder Uhrzeit des Seitenaufrufs).\n    Die Erfassung dieser Daten erfolgt automatisch, sobald Sie diese Website\n    betreten.\n  \n  Wof&uuml;r nutzen wir Ihre Daten?\n  \n    Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der\n    Website zu gew&auml;hrleisten. Andere Daten k&ouml;nnen zur Analyse Ihres\n    Nutzerverhaltens verwendet werden.\n  \n  Welche Rechte haben Sie bez&uuml;glich Ihrer Daten?\n  \n    Sie haben jederzeit das Recht, unentgeltlich Auskunft &uuml;ber Herkunft,\n    Empf&auml;nger und Zweck Ihrer gespeicherten personenbezogenen Daten zu\n    erhalten. Sie haben au&szlig;erdem ein Recht, die Berichtigung oder\n    L&ouml;schung dieser Daten zu verlangen. Wenn Sie eine Einwilligung zur\n    Datenverarbeitung erteilt haben, k&ouml;nnen Sie diese Einwilligung\n    jederzeit f&uuml;r die Zukunft widerrufen. Au&szlig;erdem haben Sie das\n    Recht, unter bestimmten Umst&auml;nden die Einschr&auml;nkung der\n    Verarbeitung Ihrer personenbezogenen Daten zu verlangen. Des Weiteren steht\n    Ihnen ein Beschwerderecht bei der zust&auml;ndigen Aufsichtsbeh&ouml;rde zu.\n  \n  \n    Hierzu sowie zu weiteren Fragen zum Thema Datenschutz k&ouml;nnen Sie sich\n    jederzeit an uns wenden.\n  \n  2. Hosting\n  Wir hosten die Inhalte unserer Website bei folgendem Anbieter:\n  All-Inkl\n  \n    Anbieter ist die ALL-INKL.COM - Neue Medien M&uuml;nnich, Inh. Ren&eacute;\n    M&uuml;nnich, Hauptstra&szlig;e 68, 02742 Friedersdorf (nachfolgend\n    All-Inkl). Details entnehmen Sie der Datenschutzerkl&auml;rung von All-Inkl:\n    https://all-inkl.com/datenschutzinformationen/.\n  \n  \n    Die Verwendung von All-Inkl erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f\n    DSGVO. Wir haben ein berechtigtes Interesse an einer m&ouml;glichst\n    zuverl&auml;ssigen Darstellung unserer Website. Sofern eine entsprechende\n    Einwilligung abgefragt wurde, erfolgt die Verarbeitung ausschlie&szlig;lich\n    auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und &sect; 25 Abs. 1 TTDSG,\n    soweit die Einwilligung die Speicherung von Cookies oder den Zugriff auf\n    Informationen im Endger&auml;t des Nutzers (z.&nbsp;B.\n    Device-Fingerprinting) im Sinne des TTDSG umfasst. Die Einwilligung ist\n    jederzeit widerrufbar.\n  \n\n  Auftragsverarbeitung\n  \n    Wir haben einen Vertrag &uuml;ber Auftragsverarbeitung (AVV) zur Nutzung des\n    oben genannten Dienstes geschlossen. Hierbei handelt es sich um einen\n    datenschutzrechtlich vorgeschriebenen Vertrag, der gew&auml;hrleistet, dass\n    dieser die personenbezogenen Daten unserer Websitebesucher nur nach unseren\n    Weisungen und unter Einhaltung der DSGVO verarbeitet.\n  \n  3. Allgemeine Hinweise und Pflicht&shy;informationen\n  Datenschutz\n  \n    Die Betreiber dieser Seiten nehmen den Schutz Ihrer pers&ouml;nlichen Daten\n    sehr ernst. Wir behandeln Ihre personenbezogenen Daten vertraulich und\n    entsprechend den gesetzlichen Datenschutzvorschriften sowie dieser\n    Datenschutzerkl&auml;rung.\n  \n  \n    Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten\n    erhoben. Personenbezogene Daten sind Daten, mit denen Sie pers&ouml;nlich\n    identifiziert werden k&ouml;nnen. Die vorliegende Datenschutzerkl&auml;rung\n    erl&auml;utert, welche Daten wir erheben und wof&uuml;r wir sie nutzen. Sie\n    erl&auml;utert auch, wie und zu welchem Zweck das geschieht.\n  \n  \n    Wir weisen darauf hin, dass die Daten&uuml;bertragung im Internet\n    (z.&nbsp;B. bei der Kommunikation per E-Mail) Sicherheitsl&uuml;cken\n    aufweisen kann. Ein l&uuml;ckenloser Schutz der Daten vor dem Zugriff durch\n    Dritte ist nicht m&ouml;glich.\n  \n  Hinweis zur verantwortlichen Stelle\n  \n    Die verantwortliche Stelle f&uuml;r die Datenverarbeitung auf dieser Website\n    ist:\n  \n  \n    Beispielfirma\n    Musterweg 10\n    90210 Musterstadt\n  \n\n  \n    Telefon: +49 (0) 123 44 55 66\n    E-Mail: info@beispielfirma.de\n  \n  \n    Verantwortliche Stelle ist die nat&uuml;rliche oder juristische Person, die\n    allein oder gemeinsam mit anderen &uuml;ber die Zwecke und Mittel der\n    Verarbeitung von personenbezogenen Daten (z.&nbsp;B. Namen, E-Mail-Adressen\n    o. &Auml;.) entscheidet.\n  \n\n  Speicherdauer\n  \n    Soweit innerhalb dieser Datenschutzerkl&auml;rung keine speziellere\n    Speicherdauer genannt wurde, verbleiben Ihre personenbezogenen Daten bei\n    uns, bis der Zweck f&uuml;r die Datenverarbeitung entf&auml;llt. Wenn Sie\n    ein berechtigtes L&ouml;schersuchen geltend machen oder eine Einwilligung\n    zur Datenverarbeitung widerrufen, werden Ihre Daten gel&ouml;scht, sofern\n    wir keine anderen rechtlich zul&auml;ssigen Gr&uuml;nde f&uuml;r die\n    Speicherung Ihrer personenbezogenen Daten haben (z.&nbsp;B. steuer- oder\n    handelsrechtliche Aufbewahrungsfristen); im letztgenannten Fall erfolgt die\n    L&ouml;schung nach Fortfall dieser Gr&uuml;nde.\n  \n  \n    Allgemeine Hinweise zu den Rechtsgrundlagen der Datenverarbeitung auf dieser\n    Website\n  \n  \n    Sofern Sie in die Datenverarbeitung eingewilligt haben, verarbeiten wir Ihre\n    personenbezogenen Daten auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO bzw.\n    Art. 9 Abs. 2 lit. a DSGVO, sofern besondere Datenkategorien nach Art. 9\n    Abs. 1 DSGVO verarbeitet werden. Im Falle einer ausdr&uuml;cklichen\n    Einwilligung in die &Uuml;bertragung personenbezogener Daten in Drittstaaten\n    erfolgt die Datenverarbeitung au&szlig;erdem auf Grundlage von Art. 49 Abs.\n    1 lit. a DSGVO. Sofern Sie in die Speicherung von Cookies oder in den\n    Zugriff auf Informationen in Ihr Endger&auml;t (z.&nbsp;B. via\n    Device-Fingerprinting) eingewilligt haben, erfolgt die Datenverarbeitung\n    zus&auml;tzlich auf Grundlage von &sect; 25 Abs. 1 TTDSG. Die Einwilligung\n    ist jederzeit widerrufbar. Sind Ihre Daten zur Vertragserf&uuml;llung oder\n    zur Durchf&uuml;hrung vorvertraglicher Ma&szlig;nahmen erforderlich,\n    verarbeiten wir Ihre Daten auf Grundlage des Art. 6 Abs. 1 lit. b DSGVO. Des\n    Weiteren verarbeiten wir Ihre Daten, sofern diese zur Erf&uuml;llung einer\n    rechtlichen Verpflichtung erforderlich sind auf Grundlage von Art. 6 Abs. 1\n    lit. c DSGVO. Die Datenverarbeitung kann ferner auf Grundlage unseres\n    berechtigten Interesses nach Art. 6 Abs. 1 lit. f DSGVO erfolgen. &Uuml;ber\n    die jeweils im Einzelfall einschl&auml;gigen Rechtsgrundlagen wird in den\n    folgenden Abs&auml;tzen dieser Datenschutzerkl&auml;rung informiert.\n  \n  Empfänger von personenbezogenen Daten\n  \n    Im Rahmen unserer Gesch&auml;ftst&auml;tigkeit arbeiten wir mit\n    verschiedenen externen Stellen zusammen. Dabei ist teilweise auch eine\n    &Uuml;bermittlung von personenbezogenen Daten an diese externen Stellen\n    erforderlich. Wir geben personenbezogene Daten nur dann an externe Stellen\n    weiter, wenn dies im Rahmen einer Vertragserf&uuml;llung erforderlich ist,\n    wenn wir gesetzlich hierzu verpflichtet sind (z.&nbsp;B. Weitergabe von\n    Daten an Steuerbeh&ouml;rden), wenn wir ein berechtigtes Interesse nach Art.\n    6 Abs. 1 lit. f DSGVO an der Weitergabe haben oder wenn eine sonstige\n    Rechtsgrundlage die Datenweitergabe erlaubt. Beim Einsatz von\n    Auftragsverarbeitern geben wir personenbezogene Daten unserer Kunden nur auf\n    Grundlage eines g&uuml;ltigen Vertrags &uuml;ber Auftragsverarbeitung\n    weiter. Im Falle einer gemeinsamen Verarbeitung wird ein Vertrag &uuml;ber\n    gemeinsame Verarbeitung geschlossen.\n  \n  Widerruf Ihrer Einwilligung zur Datenverarbeitung\n  \n    Viele Datenverarbeitungsvorg&auml;nge sind nur mit Ihrer ausdr&uuml;cklichen\n    Einwilligung m&ouml;glich. Sie k&ouml;nnen eine bereits erteilte\n    Einwilligung jederzeit widerrufen. Die Rechtm&auml;&szlig;igkeit der bis zum\n    Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf unber&uuml;hrt.\n  \n  \n    Widerspruchsrecht gegen die Datenerhebung in besonderen F&auml;llen sowie\n    gegen Direktwerbung (Art. 21 DSGVO)\n  \n  \n    WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F\n    DSGVO ERFOLGT, HABEN SIE JEDERZEIT DAS RECHT, AUS GR&Uuml;NDEN, DIE SICH AUS\n    IHRER BESONDEREN SITUATION ERGEBEN, GEGEN DIE VERARBEITUNG IHRER\n    PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH F&Uuml;R EIN\n    AUF DIESE BESTIMMUNGEN GEST&Uuml;TZTES PROFILING. DIE JEWEILIGE\n    RECHTSGRUNDLAGE, AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER\n    DATENSCHUTZERKL&Auml;RUNG. WENN SIE WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE\n    BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR VERARBEITEN, ES SEI DENN, WIR\n    K&Ouml;NNEN ZWINGENDE SCHUTZW&Uuml;RDIGE GR&Uuml;NDE F&Uuml;R DIE\n    VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN\n    &Uuml;BERWIEGEN ODER DIE VERARBEITUNG DIENT DER GELTENDMACHUNG,\n    AUS&Uuml;BUNG ODER VERTEIDIGUNG VON RECHTSANSPR&Uuml;CHEN (WIDERSPRUCH NACH\n    ART. 21 ABS. 1 DSGVO).\n  \n  \n    WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU\n    BETREIBEN, SO HABEN SIE DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE\n    VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER DATEN ZUM ZWECKE DERARTIGER\n    WERBUNG EINZULEGEN; DIES GILT AUCH F&Uuml;R DAS PROFILING, SOWEIT ES MIT\n    SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN\n    IHRE PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER\n    DIREKTWERBUNG VERWENDET (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).\n  \n  \n    Beschwerde&shy;recht bei der zust&auml;ndigen Aufsichts&shy;beh&ouml;rde\n  \n  \n    Im Falle von Verst&ouml;&szlig;en gegen die DSGVO steht den Betroffenen ein\n    Beschwerderecht bei einer Aufsichtsbeh&ouml;rde, insbesondere in dem\n    Mitgliedstaat ihres gew&ouml;hnlichen Aufenthalts, ihres Arbeitsplatzes oder\n    des Orts des mutma&szlig;lichen Versto&szlig;es zu. Das Beschwerderecht\n    besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher\n    Rechtsbehelfe.\n  \n  Recht auf Daten&shy;&uuml;bertrag&shy;barkeit\n  \n    Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in\n    Erf&uuml;llung eines Vertrags automatisiert verarbeiten, an sich oder an\n    einen Dritten in einem g&auml;ngigen, maschinenlesbaren Format\n    aush&auml;ndigen zu lassen. Sofern Sie die direkte &Uuml;bertragung der\n    Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur, soweit\n    es technisch machbar ist.\n  \n  Auskunft, Berichtigung und L&ouml;schung\n  \n    Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das\n    Recht auf unentgeltliche Auskunft &uuml;ber Ihre gespeicherten\n    personenbezogenen Daten, deren Herkunft und Empf&auml;nger und den Zweck der\n    Datenverarbeitung und ggf. ein Recht auf Berichtigung oder L&ouml;schung\n    dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene\n    Daten k&ouml;nnen Sie sich jederzeit an uns wenden.\n  \n  Recht auf Einschr&auml;nkung der Verarbeitung\n  \n    Sie haben das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer\n    personenbezogenen Daten zu verlangen. Hierzu k&ouml;nnen Sie sich jederzeit\n    an uns wenden. Das Recht auf Einschr&auml;nkung der Verarbeitung besteht in\n    folgenden F&auml;llen:\n  \n  \n    \n      Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen\n      Daten bestreiten, ben&ouml;tigen wir in der Regel Zeit, um dies zu\n      &uuml;berpr&uuml;fen. F&uuml;r die Dauer der Pr&uuml;fung haben Sie das\n      Recht, die Einschr&auml;nkung der Verarbeitung Ihrer personenbezogenen\n      Daten zu verlangen.\n    \n    \n      Wenn die Verarbeitung Ihrer personenbezogenen Daten\n      unrechtm&auml;&szlig;ig geschah/geschieht, k&ouml;nnen Sie statt der\n      L&ouml;schung die Einschr&auml;nkung der Datenverarbeitung verlangen.\n    \n    \n      Wenn wir Ihre personenbezogenen Daten nicht mehr ben&ouml;tigen, Sie sie\n      jedoch zur Aus&uuml;bung, Verteidigung oder Geltendmachung von\n      Rechtsanspr&uuml;chen ben&ouml;tigen, haben Sie das Recht, statt der\n      L&ouml;schung die Einschr&auml;nkung der Verarbeitung Ihrer\n      personenbezogenen Daten zu verlangen.\n    \n    \n      Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss\n      eine Abw&auml;gung zwischen Ihren und unseren Interessen vorgenommen\n      werden. Solange noch nicht feststeht, wessen Interessen &uuml;berwiegen,\n      haben Sie das Recht, die Einschr&auml;nkung der Verarbeitung Ihrer\n      personenbezogenen Daten zu verlangen.\n    \n  \n  \n    Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschr&auml;nkt\n    haben, d&uuml;rfen diese Daten &ndash; von ihrer Speicherung abgesehen\n    &ndash; nur mit Ihrer Einwilligung oder zur Geltendmachung, Aus&uuml;bung\n    oder Verteidigung von Rechtsanspr&uuml;chen oder zum Schutz der Rechte einer\n    anderen nat&uuml;rlichen oder juristischen Person oder aus Gr&uuml;nden\n    eines wichtigen &ouml;ffentlichen Interesses der Europ&auml;ischen Union\n    oder eines Mitgliedstaats verarbeitet werden.\n  \n  SSL- bzw. TLS-Verschl&uuml;sselung\n  \n    Diese Seite nutzt aus Sicherheitsgr&uuml;nden und zum Schutz der\n    &Uuml;bertragung vertraulicher Inhalte, wie zum Beispiel Bestellungen oder\n    Anfragen, die Sie an uns als Seitenbetreiber senden, eine SSL- bzw.\n    TLS-Verschl&uuml;sselung. Eine verschl&uuml;sselte Verbindung erkennen Sie\n    daran, dass die Adresszeile des Browsers von &bdquo;http://&ldquo; auf\n    &bdquo;https://&ldquo; wechselt und an dem Schloss-Symbol in Ihrer\n    Browserzeile.\n  \n  \n    Wenn die SSL- bzw. TLS-Verschl&uuml;sselung aktiviert ist, k&ouml;nnen die\n    Daten, die Sie an uns &uuml;bermitteln, nicht von Dritten mitgelesen werden.\n  \n  Widerspruch gegen Werbe-E-Mails\n  \n    Der Nutzung von im Rahmen der Impressumspflicht ver&ouml;ffentlichten\n    Kontaktdaten zur &Uuml;bersendung von nicht ausdr&uuml;cklich angeforderter\n    Werbung und Informationsmaterialien wird hiermit widersprochen. Die\n    Betreiber der Seiten behalten sich ausdr&uuml;cklich rechtliche Schritte im\n    Falle der unverlangten Zusendung von Werbeinformationen, etwa durch\n    Spam-E-Mails, vor.\n  \n  4. Datenerfassung auf dieser Website\n  Anfrage per E-Mail, Telefon oder Telefax\n  \n    Wenn Sie uns per E-Mail, Telefon oder Telefax kontaktieren, wird Ihre\n    Anfrage inklusive aller daraus hervorgehenden personenbezogenen Daten (Name,\n    Anfrage) zum Zwecke der Bearbeitung Ihres Anliegens bei uns gespeichert und\n    verarbeitet. Diese Daten geben wir nicht ohne Ihre Einwilligung weiter.\n  \n  \n    Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b\n    DSGVO, sofern Ihre Anfrage mit der Erf&uuml;llung eines Vertrags\n    zusammenh&auml;ngt oder zur Durchf&uuml;hrung vorvertraglicher\n    Ma&szlig;nahmen erforderlich ist. In allen &uuml;brigen F&auml;llen beruht\n    die Verarbeitung auf unserem berechtigten Interesse an der effektiven\n    Bearbeitung der an uns gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO)\n    oder auf Ihrer Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) sofern diese\n    abgefragt wurde; die Einwilligung ist jederzeit widerrufbar.\n  \n  \n    Die von Ihnen an uns per Kontaktanfragen &uuml;bersandten Daten verbleiben\n    bei uns, bis Sie uns zur L&ouml;schung auffordern, Ihre Einwilligung zur\n    Speicherung widerrufen oder der Zweck f&uuml;r die Datenspeicherung\n    entf&auml;llt (z.&nbsp;B. nach abgeschlossener Bearbeitung Ihres Anliegens).\n    Zwingende gesetzliche Bestimmungen &ndash; insbesondere gesetzliche\n    Aufbewahrungsfristen &ndash; bleiben unber&uuml;hrt.\n  \n  5. Plugins und Tools\n  Google Fonts\n  \n    Diese Seite nutzt zur einheitlichen Darstellung von Schriftarten so genannte\n    Google Fonts, die von Google bereitgestellt werden. Beim Aufruf einer Seite\n    l&auml;dt Ihr Browser die ben&ouml;tigten Fonts in ihren Browsercache, um\n    Texte und Schriftarten korrekt anzuzeigen.\n  \n  \n    Zu diesem Zweck muss der von Ihnen verwendete Browser Verbindung zu den\n    Servern von Google aufnehmen. Hierdurch erlangt Google Kenntnis\n    dar&uuml;ber, dass &uuml;ber Ihre IP-Adresse diese Website aufgerufen wurde.\n    Die Nutzung von Google Fonts erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f\n    DSGVO. Der Websitebetreiber hat ein berechtigtes Interesse an der\n    einheitlichen Darstellung des Schriftbildes auf seiner Website. Sofern eine\n    entsprechende Einwilligung abgefragt wurde, erfolgt die Verarbeitung\n    ausschlie&szlig;lich auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und &sect;\n    25 Abs. 1 TTDSG, soweit die Einwilligung die Speicherung von Cookies oder\n    den Zugriff auf Informationen im Endger&auml;t des Nutzers (z.&nbsp;B.\n    Device-Fingerprinting) im Sinne des TTDSG umfasst. Die Einwilligung ist\n    jederzeit widerrufbar.\n  \n  \n    Wenn Ihr Browser Google Fonts nicht unterst&uuml;tzt, wird eine\n    Standardschrift von Ihrem Computer genutzt.\n  \n  \n    Weitere Informationen zu Google Fonts finden Sie unter\n    https://developers.google.com/fonts/faq\n    und in der Datenschutzerkl&auml;rung von Google:\n    https://policies.google.com/privacy?hl=de.\n  \n  \n    Das Unternehmen verf&uuml;gt &uuml;ber eine Zertifizierung nach dem\n    &bdquo;EU-US Data Privacy Framework&ldquo; (DPF). Der DPF ist ein\n    &Uuml;bereinkommen zwischen der Europ&auml;ischen Union und den USA, der die\n    Einhaltung europ&auml;ischer Datenschutzstandards bei Datenverarbeitungen in\n    den USA gew&auml;hrleisten soll. Jedes nach dem DPF zertifizierte\n    Unternehmen verpflichtet sich, diese Datenschutzstandards einzuhalten.\n    Weitere Informationen hierzu erhalten Sie vom Anbieter unter folgendem Link:\n    Link\n  \n  Quelle: https://www.e-recht24.de\n\n\n    \n\n    \n                \n                    ./privacy-policy.component.scss\n                \n                .privacy-container {\n  max-width: 600px;\n  padding: 48px 56px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n  border-radius: 30px;\n \n  h1,\n  h2,\n  h3,\n  h4 {\n    color: rgba(68, 77, 242, 1);\n  }\n}\n\n\n@media screen and (max-width: 640px) {\n\n  .privacy-container {\n    max-width: 460px;\n    padding: 30px 10px;\n    \n  }\n\n\n}\n\n\n@media screen and (max-width:470px) {\n\n  .privacy-container {\n    max-width: 340px;\n\n  }\n\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           Datenschutz­erklärung  1. Datenschutz auf einen Blick  Allgemeine Hinweise      Die folgenden Hinweise geben einen einfachen Überblick darüber,    was mit Ihren personenbezogenen Daten passiert, wenn Sie diese Website    besuchen. Personenbezogene Daten sind alle Daten, mit denen Sie    persönlich identifiziert werden können. Ausführliche    Informationen zum Thema Datenschutz entnehmen Sie unserer unter diesem Text    aufgeführten Datenschutzerklärung.    Datenerfassung auf dieser Website      Wer ist verantwortlich für die Datenerfassung auf dieser Website?        Die Datenverarbeitung auf dieser Website erfolgt durch den Websitebetreiber.    Dessen Kontaktdaten können Sie dem Abschnitt „Hinweis zur    Verantwortlichen Stelle“ in dieser Datenschutzerklärung    entnehmen.    Wie erfassen wir Ihre Daten?      Ihre Daten werden zum einen dadurch erhoben, dass Sie uns diese mitteilen.    Hierbei kann es sich z. B. um Daten handeln, die Sie in ein    Kontaktformular eingeben.        Andere Daten werden automatisch oder nach Ihrer Einwilligung beim Besuch der    Website durch unsere IT-Systeme erfasst. Das sind vor allem technische Daten    (z. B. Internetbrowser, Betriebssystem oder Uhrzeit des Seitenaufrufs).    Die Erfassung dieser Daten erfolgt automatisch, sobald Sie diese Website    betreten.    Wofür nutzen wir Ihre Daten?      Ein Teil der Daten wird erhoben, um eine fehlerfreie Bereitstellung der    Website zu gewährleisten. Andere Daten können zur Analyse Ihres    Nutzerverhaltens verwendet werden.    Welche Rechte haben Sie bezüglich Ihrer Daten?      Sie haben jederzeit das Recht, unentgeltlich Auskunft über Herkunft,    Empfänger und Zweck Ihrer gespeicherten personenbezogenen Daten zu    erhalten. Sie haben außerdem ein Recht, die Berichtigung oder    Löschung dieser Daten zu verlangen. Wenn Sie eine Einwilligung zur    Datenverarbeitung erteilt haben, können Sie diese Einwilligung    jederzeit für die Zukunft widerrufen. Außerdem haben Sie das    Recht, unter bestimmten Umständen die Einschränkung der    Verarbeitung Ihrer personenbezogenen Daten zu verlangen. Des Weiteren steht    Ihnen ein Beschwerderecht bei der zuständigen Aufsichtsbehörde zu.        Hierzu sowie zu weiteren Fragen zum Thema Datenschutz können Sie sich    jederzeit an uns wenden.    2. Hosting  Wir hosten die Inhalte unserer Website bei folgendem Anbieter:  All-Inkl      Anbieter ist die ALL-INKL.COM - Neue Medien Münnich, Inh. René    Münnich, Hauptstraße 68, 02742 Friedersdorf (nachfolgend    All-Inkl). Details entnehmen Sie der Datenschutzerklärung von All-Inkl:    https://all-inkl.com/datenschutzinformationen/.        Die Verwendung von All-Inkl erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f    DSGVO. Wir haben ein berechtigtes Interesse an einer möglichst    zuverlässigen Darstellung unserer Website. Sofern eine entsprechende    Einwilligung abgefragt wurde, erfolgt die Verarbeitung ausschließlich    auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und § 25 Abs. 1 TTDSG,    soweit die Einwilligung die Speicherung von Cookies oder den Zugriff auf    Informationen im Endgerät des Nutzers (z. B.    Device-Fingerprinting) im Sinne des TTDSG umfasst. Die Einwilligung ist    jederzeit widerrufbar.    Auftragsverarbeitung      Wir haben einen Vertrag über Auftragsverarbeitung (AVV) zur Nutzung des    oben genannten Dienstes geschlossen. Hierbei handelt es sich um einen    datenschutzrechtlich vorgeschriebenen Vertrag, der gewährleistet, dass    dieser die personenbezogenen Daten unserer Websitebesucher nur nach unseren    Weisungen und unter Einhaltung der DSGVO verarbeitet.    3. Allgemeine Hinweise und Pflicht­informationen  Datenschutz      Die Betreiber dieser Seiten nehmen den Schutz Ihrer persönlichen Daten    sehr ernst. Wir behandeln Ihre personenbezogenen Daten vertraulich und    entsprechend den gesetzlichen Datenschutzvorschriften sowie dieser    Datenschutzerklärung.        Wenn Sie diese Website benutzen, werden verschiedene personenbezogene Daten    erhoben. Personenbezogene Daten sind Daten, mit denen Sie persönlich    identifiziert werden können. Die vorliegende Datenschutzerklärung    erläutert, welche Daten wir erheben und wofür wir sie nutzen. Sie    erläutert auch, wie und zu welchem Zweck das geschieht.        Wir weisen darauf hin, dass die Datenübertragung im Internet    (z. B. bei der Kommunikation per E-Mail) Sicherheitslücken    aufweisen kann. Ein lückenloser Schutz der Daten vor dem Zugriff durch    Dritte ist nicht möglich.    Hinweis zur verantwortlichen Stelle      Die verantwortliche Stelle für die Datenverarbeitung auf dieser Website    ist:        Beispielfirma    Musterweg 10    90210 Musterstadt        Telefon: +49 (0) 123 44 55 66    E-Mail: info@beispielfirma.de        Verantwortliche Stelle ist die natürliche oder juristische Person, die    allein oder gemeinsam mit anderen über die Zwecke und Mittel der    Verarbeitung von personenbezogenen Daten (z. B. Namen, E-Mail-Adressen    o. Ä.) entscheidet.    Speicherdauer      Soweit innerhalb dieser Datenschutzerklärung keine speziellere    Speicherdauer genannt wurde, verbleiben Ihre personenbezogenen Daten bei    uns, bis der Zweck für die Datenverarbeitung entfällt. Wenn Sie    ein berechtigtes Löschersuchen geltend machen oder eine Einwilligung    zur Datenverarbeitung widerrufen, werden Ihre Daten gelöscht, sofern    wir keine anderen rechtlich zulässigen Gründe für die    Speicherung Ihrer personenbezogenen Daten haben (z. B. steuer- oder    handelsrechtliche Aufbewahrungsfristen); im letztgenannten Fall erfolgt die    Löschung nach Fortfall dieser Gründe.        Allgemeine Hinweise zu den Rechtsgrundlagen der Datenverarbeitung auf dieser    Website        Sofern Sie in die Datenverarbeitung eingewilligt haben, verarbeiten wir Ihre    personenbezogenen Daten auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO bzw.    Art. 9 Abs. 2 lit. a DSGVO, sofern besondere Datenkategorien nach Art. 9    Abs. 1 DSGVO verarbeitet werden. Im Falle einer ausdrücklichen    Einwilligung in die Übertragung personenbezogener Daten in Drittstaaten    erfolgt die Datenverarbeitung außerdem auf Grundlage von Art. 49 Abs.    1 lit. a DSGVO. Sofern Sie in die Speicherung von Cookies oder in den    Zugriff auf Informationen in Ihr Endgerät (z. B. via    Device-Fingerprinting) eingewilligt haben, erfolgt die Datenverarbeitung    zusätzlich auf Grundlage von § 25 Abs. 1 TTDSG. Die Einwilligung    ist jederzeit widerrufbar. Sind Ihre Daten zur Vertragserfüllung oder    zur Durchführung vorvertraglicher Maßnahmen erforderlich,    verarbeiten wir Ihre Daten auf Grundlage des Art. 6 Abs. 1 lit. b DSGVO. Des    Weiteren verarbeiten wir Ihre Daten, sofern diese zur Erfüllung einer    rechtlichen Verpflichtung erforderlich sind auf Grundlage von Art. 6 Abs. 1    lit. c DSGVO. Die Datenverarbeitung kann ferner auf Grundlage unseres    berechtigten Interesses nach Art. 6 Abs. 1 lit. f DSGVO erfolgen. Über    die jeweils im Einzelfall einschlägigen Rechtsgrundlagen wird in den    folgenden Absätzen dieser Datenschutzerklärung informiert.    Empfänger von personenbezogenen Daten      Im Rahmen unserer Geschäftstätigkeit arbeiten wir mit    verschiedenen externen Stellen zusammen. Dabei ist teilweise auch eine    Übermittlung von personenbezogenen Daten an diese externen Stellen    erforderlich. Wir geben personenbezogene Daten nur dann an externe Stellen    weiter, wenn dies im Rahmen einer Vertragserfüllung erforderlich ist,    wenn wir gesetzlich hierzu verpflichtet sind (z. B. Weitergabe von    Daten an Steuerbehörden), wenn wir ein berechtigtes Interesse nach Art.    6 Abs. 1 lit. f DSGVO an der Weitergabe haben oder wenn eine sonstige    Rechtsgrundlage die Datenweitergabe erlaubt. Beim Einsatz von    Auftragsverarbeitern geben wir personenbezogene Daten unserer Kunden nur auf    Grundlage eines gültigen Vertrags über Auftragsverarbeitung    weiter. Im Falle einer gemeinsamen Verarbeitung wird ein Vertrag über    gemeinsame Verarbeitung geschlossen.    Widerruf Ihrer Einwilligung zur Datenverarbeitung      Viele Datenverarbeitungsvorgänge sind nur mit Ihrer ausdrücklichen    Einwilligung möglich. Sie können eine bereits erteilte    Einwilligung jederzeit widerrufen. Die Rechtmäßigkeit der bis zum    Widerruf erfolgten Datenverarbeitung bleibt vom Widerruf unberührt.        Widerspruchsrecht gegen die Datenerhebung in besonderen Fällen sowie    gegen Direktwerbung (Art. 21 DSGVO)        WENN DIE DATENVERARBEITUNG AUF GRUNDLAGE VON ART. 6 ABS. 1 LIT. E ODER F    DSGVO ERFOLGT, HABEN SIE JEDERZEIT DAS RECHT, AUS GRÜNDEN, DIE SICH AUS    IHRER BESONDEREN SITUATION ERGEBEN, GEGEN DIE VERARBEITUNG IHRER    PERSONENBEZOGENEN DATEN WIDERSPRUCH EINZULEGEN; DIES GILT AUCH FÜR EIN    AUF DIESE BESTIMMUNGEN GESTÜTZTES PROFILING. DIE JEWEILIGE    RECHTSGRUNDLAGE, AUF DENEN EINE VERARBEITUNG BERUHT, ENTNEHMEN SIE DIESER    DATENSCHUTZERKLÄRUNG. WENN SIE WIDERSPRUCH EINLEGEN, WERDEN WIR IHRE    BETROFFENEN PERSONENBEZOGENEN DATEN NICHT MEHR VERARBEITEN, ES SEI DENN, WIR    KÖNNEN ZWINGENDE SCHUTZWÜRDIGE GRÜNDE FÜR DIE    VERARBEITUNG NACHWEISEN, DIE IHRE INTERESSEN, RECHTE UND FREIHEITEN    ÜBERWIEGEN ODER DIE VERARBEITUNG DIENT DER GELTENDMACHUNG,    AUSÜBUNG ODER VERTEIDIGUNG VON RECHTSANSPRÜCHEN (WIDERSPRUCH NACH    ART. 21 ABS. 1 DSGVO).        WERDEN IHRE PERSONENBEZOGENEN DATEN VERARBEITET, UM DIREKTWERBUNG ZU    BETREIBEN, SO HABEN SIE DAS RECHT, JEDERZEIT WIDERSPRUCH GEGEN DIE    VERARBEITUNG SIE BETREFFENDER PERSONENBEZOGENER DATEN ZUM ZWECKE DERARTIGER    WERBUNG EINZULEGEN; DIES GILT AUCH FÜR DAS PROFILING, SOWEIT ES MIT    SOLCHER DIREKTWERBUNG IN VERBINDUNG STEHT. WENN SIE WIDERSPRECHEN, WERDEN    IHRE PERSONENBEZOGENEN DATEN ANSCHLIESSEND NICHT MEHR ZUM ZWECKE DER    DIREKTWERBUNG VERWENDET (WIDERSPRUCH NACH ART. 21 ABS. 2 DSGVO).        Beschwerde­recht bei der zuständigen Aufsichts­behörde        Im Falle von Verstößen gegen die DSGVO steht den Betroffenen ein    Beschwerderecht bei einer Aufsichtsbehörde, insbesondere in dem    Mitgliedstaat ihres gewöhnlichen Aufenthalts, ihres Arbeitsplatzes oder    des Orts des mutmaßlichen Verstoßes zu. Das Beschwerderecht    besteht unbeschadet anderweitiger verwaltungsrechtlicher oder gerichtlicher    Rechtsbehelfe.    Recht auf Daten­übertrag­barkeit      Sie haben das Recht, Daten, die wir auf Grundlage Ihrer Einwilligung oder in    Erfüllung eines Vertrags automatisiert verarbeiten, an sich oder an    einen Dritten in einem gängigen, maschinenlesbaren Format    aushändigen zu lassen. Sofern Sie die direkte Übertragung der    Daten an einen anderen Verantwortlichen verlangen, erfolgt dies nur, soweit    es technisch machbar ist.    Auskunft, Berichtigung und Löschung      Sie haben im Rahmen der geltenden gesetzlichen Bestimmungen jederzeit das    Recht auf unentgeltliche Auskunft über Ihre gespeicherten    personenbezogenen Daten, deren Herkunft und Empfänger und den Zweck der    Datenverarbeitung und ggf. ein Recht auf Berichtigung oder Löschung    dieser Daten. Hierzu sowie zu weiteren Fragen zum Thema personenbezogene    Daten können Sie sich jederzeit an uns wenden.    Recht auf Einschränkung der Verarbeitung      Sie haben das Recht, die Einschränkung der Verarbeitung Ihrer    personenbezogenen Daten zu verlangen. Hierzu können Sie sich jederzeit    an uns wenden. Das Recht auf Einschränkung der Verarbeitung besteht in    folgenden Fällen:              Wenn Sie die Richtigkeit Ihrer bei uns gespeicherten personenbezogenen      Daten bestreiten, benötigen wir in der Regel Zeit, um dies zu      überprüfen. Für die Dauer der Prüfung haben Sie das      Recht, die Einschränkung der Verarbeitung Ihrer personenbezogenen      Daten zu verlangen.              Wenn die Verarbeitung Ihrer personenbezogenen Daten      unrechtmäßig geschah/geschieht, können Sie statt der      Löschung die Einschränkung der Datenverarbeitung verlangen.              Wenn wir Ihre personenbezogenen Daten nicht mehr benötigen, Sie sie      jedoch zur Ausübung, Verteidigung oder Geltendmachung von      Rechtsansprüchen benötigen, haben Sie das Recht, statt der      Löschung die Einschränkung der Verarbeitung Ihrer      personenbezogenen Daten zu verlangen.              Wenn Sie einen Widerspruch nach Art. 21 Abs. 1 DSGVO eingelegt haben, muss      eine Abwägung zwischen Ihren und unseren Interessen vorgenommen      werden. Solange noch nicht feststeht, wessen Interessen überwiegen,      haben Sie das Recht, die Einschränkung der Verarbeitung Ihrer      personenbezogenen Daten zu verlangen.            Wenn Sie die Verarbeitung Ihrer personenbezogenen Daten eingeschränkt    haben, dürfen diese Daten – von ihrer Speicherung abgesehen    – nur mit Ihrer Einwilligung oder zur Geltendmachung, Ausübung    oder Verteidigung von Rechtsansprüchen oder zum Schutz der Rechte einer    anderen natürlichen oder juristischen Person oder aus Gründen    eines wichtigen öffentlichen Interesses der Europäischen Union    oder eines Mitgliedstaats verarbeitet werden.    SSL- bzw. TLS-Verschlüsselung      Diese Seite nutzt aus Sicherheitsgründen und zum Schutz der    Übertragung vertraulicher Inhalte, wie zum Beispiel Bestellungen oder    Anfragen, die Sie an uns als Seitenbetreiber senden, eine SSL- bzw.    TLS-Verschlüsselung. Eine verschlüsselte Verbindung erkennen Sie    daran, dass die Adresszeile des Browsers von „http://“ auf    „https://“ wechselt und an dem Schloss-Symbol in Ihrer    Browserzeile.        Wenn die SSL- bzw. TLS-Verschlüsselung aktiviert ist, können die    Daten, die Sie an uns übermitteln, nicht von Dritten mitgelesen werden.    Widerspruch gegen Werbe-E-Mails      Der Nutzung von im Rahmen der Impressumspflicht veröffentlichten    Kontaktdaten zur Übersendung von nicht ausdrücklich angeforderter    Werbung und Informationsmaterialien wird hiermit widersprochen. Die    Betreiber der Seiten behalten sich ausdrücklich rechtliche Schritte im    Falle der unverlangten Zusendung von Werbeinformationen, etwa durch    Spam-E-Mails, vor.    4. Datenerfassung auf dieser Website  Anfrage per E-Mail, Telefon oder Telefax      Wenn Sie uns per E-Mail, Telefon oder Telefax kontaktieren, wird Ihre    Anfrage inklusive aller daraus hervorgehenden personenbezogenen Daten (Name,    Anfrage) zum Zwecke der Bearbeitung Ihres Anliegens bei uns gespeichert und    verarbeitet. Diese Daten geben wir nicht ohne Ihre Einwilligung weiter.        Die Verarbeitung dieser Daten erfolgt auf Grundlage von Art. 6 Abs. 1 lit. b    DSGVO, sofern Ihre Anfrage mit der Erfüllung eines Vertrags    zusammenhängt oder zur Durchführung vorvertraglicher    Maßnahmen erforderlich ist. In allen übrigen Fällen beruht    die Verarbeitung auf unserem berechtigten Interesse an der effektiven    Bearbeitung der an uns gerichteten Anfragen (Art. 6 Abs. 1 lit. f DSGVO)    oder auf Ihrer Einwilligung (Art. 6 Abs. 1 lit. a DSGVO) sofern diese    abgefragt wurde; die Einwilligung ist jederzeit widerrufbar.        Die von Ihnen an uns per Kontaktanfragen übersandten Daten verbleiben    bei uns, bis Sie uns zur Löschung auffordern, Ihre Einwilligung zur    Speicherung widerrufen oder der Zweck für die Datenspeicherung    entfällt (z. B. nach abgeschlossener Bearbeitung Ihres Anliegens).    Zwingende gesetzliche Bestimmungen – insbesondere gesetzliche    Aufbewahrungsfristen – bleiben unberührt.    5. Plugins und Tools  Google Fonts      Diese Seite nutzt zur einheitlichen Darstellung von Schriftarten so genannte    Google Fonts, die von Google bereitgestellt werden. Beim Aufruf einer Seite    lädt Ihr Browser die benötigten Fonts in ihren Browsercache, um    Texte und Schriftarten korrekt anzuzeigen.        Zu diesem Zweck muss der von Ihnen verwendete Browser Verbindung zu den    Servern von Google aufnehmen. Hierdurch erlangt Google Kenntnis    darüber, dass über Ihre IP-Adresse diese Website aufgerufen wurde.    Die Nutzung von Google Fonts erfolgt auf Grundlage von Art. 6 Abs. 1 lit. f    DSGVO. Der Websitebetreiber hat ein berechtigtes Interesse an der    einheitlichen Darstellung des Schriftbildes auf seiner Website. Sofern eine    entsprechende Einwilligung abgefragt wurde, erfolgt die Verarbeitung    ausschließlich auf Grundlage von Art. 6 Abs. 1 lit. a DSGVO und §    25 Abs. 1 TTDSG, soweit die Einwilligung die Speicherung von Cookies oder    den Zugriff auf Informationen im Endgerät des Nutzers (z. B.    Device-Fingerprinting) im Sinne des TTDSG umfasst. Die Einwilligung ist    jederzeit widerrufbar.        Wenn Ihr Browser Google Fonts nicht unterstützt, wird eine    Standardschrift von Ihrem Computer genutzt.        Weitere Informationen zu Google Fonts finden Sie unter    https://developers.google.com/fonts/faq    und in der Datenschutzerklärung von Google:    https://policies.google.com/privacy?hl=de.        Das Unternehmen verfügt über eine Zertifizierung nach dem    „EU-US Data Privacy Framework“ (DPF). Der DPF ist ein    Übereinkommen zwischen der Europäischen Union und den USA, der die    Einhaltung europäischer Datenschutzstandards bei Datenverarbeitungen in    den USA gewährleisten soll. Jedes nach dem DPF zertifizierte    Unternehmen verpflichtet sich, diese Datenschutzstandards einzuhalten.    Weitere Informationen hierzu erhalten Sie vom Anbieter unter folgendem Link:    Link    Quelle: https://www.e-recht24.de'\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reaction.html":{"url":"classes/Reaction.html","title":"class - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/reaction.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                path\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/reaction.class.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/reaction.class.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/reaction.class.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { name: string; users: {}; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class Reaction {\n    id: string;\n    name: string;\n    users: string[];\n    path: string;\n\n    constructor(obj?: any) {\n        this.id = obj ? obj.id : \"\";\n        this.name = obj ? obj.name : \"\";\n        this.users = obj ? obj.users : [];\n        this.path = obj ? obj.path : \"\";\n    }\n\n    toJSON() {\n        return {\n            name: this.name,\n            users: this.users\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReactionComponent.html":{"url":"components/ReactionComponent.html","title":"component - ReactionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReactionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/message/reaction/reaction.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reaction\n            \n\n\n\n            \n                styleUrls\n                ./reaction.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reaction.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                emoji\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emojiSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                reaction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emojiSelectedOutput\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    reaction\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        reaction\n                    \n                \n                \n                    \n                        Type :         Reaction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/reaction/reaction.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emojiSelectedOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/reaction/reaction.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emojiSelected\n                        \n                    \n                \n            \n            \n                \nemojiSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/reaction/reaction.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an emoji.\nThis method logs the selected emoji to the console and emits the selected emoji using the emojiSelectedOutput EventEmitter.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/reaction/reaction.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emoji\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/reaction/reaction.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        reaction\n                    \n                \n\n\n                \n                    \n                        setreaction(value: Reaction)\n                    \n                \n                            \n                                \n                                    Defined in src/app/mainscreen/message/reaction/reaction.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Reaction\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Reaction } from 'src/models/reaction.class';\n\n@Component({\n  selector: 'app-reaction',\n  templateUrl: './reaction.component.html',\n  styleUrls: ['./reaction.component.scss']\n})\nexport class ReactionComponent {\n  emoji: string = \"\";\n  count: number | undefined;\n\n  @Input()\n  public set reaction(value: Reaction) {\n    this.emoji = value.name;\n    this.count = value.users.length;\n  }\n\n  @Output() emojiSelectedOutput: EventEmitter = new EventEmitter();\n\n\n  /**\n  * Handles the selection of an emoji.\n  *\n  * This method logs the selected emoji to the console and emits the selected emoji using the emojiSelectedOutput EventEmitter.\n  * \n  * @returns {void}\n  */\n  emojiSelected() {\n    console.log(this.emoji+\"selected\");\n    this.emojiSelectedOutput.emit(this.emoji);\n  }\n}\n\n    \n\n    \n        \n    {{ emoji }} {{count}}\n\n    \n\n    \n                \n                    ./reaction.component.scss\n                \n                div {\n    border: solid 1px #ADB0D9;\n    border-radius: 20px;\n    padding: 5px 10px 5px 10px;\n    display: flex;\n    gap: 10px;\n    margin: 2px;\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ emoji }} {{count}}'\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReactionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkboxValue\n                            \n                            \n                                contactForm\n                            \n                            \n                                hidePasswordImage\n                            \n                            \n                                isEmailInputActive\n                            \n                            \n                                isNameInputActive\n                            \n                            \n                                isPasswordInputActive\n                            \n                            \n                                isPasswordValid\n                            \n                            \n                                isPasswordVisible\n                            \n                            \n                                registrationErrorMessage\n                            \n                            \n                                registrationFailed\n                            \n                            \n                                showPasswordImage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeRegister\n                            \n                            \n                                isButtonDisabled\n                            \n                            \n                                nameValidator\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                togglePasswordVisibility\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeRegisterView\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserFirebaseService, authService: AuthFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/startscreen/register/register.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeRegisterView\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/startscreen/register/register.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeRegister\n                        \n                    \n                \n            \n            \n                \ncloseRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/register/register.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Emits an event to signal the closing of the registration view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \nisButtonDisabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/register/register.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Determines whether the registration button should be disabled based on the form validity and checkbox value.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nTrue if the button should be disabled; false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n            \n                \nnameValidator(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/register/register.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Validates the format of the name input.\nReturns an object with an 'invalidName' property if the name format is invalid.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form control for the name input.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \nAn object with 'invalidName' property if the name is invalid; otherwise, null.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/register/register.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Handles the form submission for user registration.\nRetrieves input values, attempts user registration, and updates the UI accordingly.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/register/register.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the password input.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkboxValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    nameInput: new FormControl('', [\n      Validators.required,\n      Validators.minLength(5)\n    ]),\n    emailInput: new FormControl('', [\n      Validators.required, \n      Validators.email\n    ]),\n    passwordInput: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*()_+]).*$/)\n    ])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidePasswordImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/icons/hideeye.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationErrorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationFailed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPasswordImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/icons/eye.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n\n  constructor(\n    private userService: UserFirebaseService, \n    private authService: AuthFirebaseService\n    ) { \n    }\n\n  @Output() closeRegisterView = new EventEmitter();\n\n  isNameInputActive: boolean = false;\n  isEmailInputActive: boolean = false;\n  isPasswordInputActive: boolean = false;\n  isPasswordVisible: boolean = false;\n  isPasswordValid: boolean = true;\n  showPasswordImage: string = 'assets/img/icons/eye.png';\n  hidePasswordImage: string = 'assets/img/icons/hideeye.png';\n  checkboxValue: boolean = false;\n  registrationFailed: boolean = false;\n  registrationErrorMessage: string = \"\";\n  \n  contactForm = new FormGroup({\n    nameInput: new FormControl('', [\n      Validators.required,\n      Validators.minLength(5)\n    ]),\n    emailInput: new FormControl('', [\n      Validators.required, \n      Validators.email\n    ]),\n    passwordInput: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.pattern(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*()_+]).*$/)\n    ])\n  });\n\n\n\n\n  /**\n  * Emits an event to signal the closing of the registration view.\n  * \n  * @emits closeRegisterView\n  * @returns {void}\n  */\n  closeRegister() {\n    this.closeRegisterView.emit();\n  }\n\n\n  /**\n   * Validates the format of the name input.\n   * Returns an object with an 'invalidName' property if the name format is invalid.\n   * \n   * @param {FormControl} control - The form control for the name input.\n   * @returns {{ [key: string]: boolean } | null} - An object with 'invalidName' property if the name is invalid; otherwise, null.\n   */\n  nameValidator(control: FormControl): { [key: string]: boolean } | null {\n    const value = control.value;\n    if (value && value.trim().split(' ').length }\n  */\n  async onSubmit() {\n    const nameInputValue = this.contactForm.get('nameInput')?.value || '';\n    const emailInputValue = this.contactForm.get('emailInput')?.value || '';\n    const passwordInputValue = this.contactForm.get('passwordInput')?.value || '';\n    let registerSuccessful = false;\n\n    this.userService.registUser.fullName = nameInputValue;\n    this.userService.registUser.mail = emailInputValue;\n    await this.authService.register(emailInputValue, passwordInputValue)\n      .then(() => {\n        console.log(\"Registrierung erfolgreich. User wird angelegt\");\n        this.userService.addRegistUserWithUID(this.userService.registUser.id);\n        this.closeRegister();\n      })\n      .catch((error) => {\n        console.log(\"AuthResponse: \");\n        const errorCode = error.code;\n        console.log(errorCode);\n        if (errorCode != null && errorCode != undefined) {\n          this.registrationErrorMessage = this.authService.getErrorMessage(errorCode);\n          this.registrationFailed = true;\n        }\n        return;\n      });\n  }\n\n}\n    \n\n    \n        \n  \n    \n      \n        \n      \n      Konto erstellen\n      \n    \n    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues\n        DABubble-Konto.\n  \n\n  \n    \n      \n        \n          \n        \n        \n      \n      \n        \n          {{ \"*Bitte einen Vorname und Nachname eingeben.\" }}\n        \n        \n          {{\n            \"*Der Vorname und Nachname muss aus jeweils einem Wort bestehen.\"\n          }}\n        \n      \n\n      \n        \n          \n        \n        \n      \n\n      \n        \n          {{ \"*Gültige E-Mail-Adresse eingeben.\" }}\n        \n        \n          {{ \"*Diese E-Mail-Adresse ist leider ungültig.\" }}\n        \n      \n\n      \n        \n          \n        \n        \n        \n          \n          \n        \n      \n\n      \n        \n          {{\n            \"*Gültiges Passwort mit mindestens 6 Zeichen , einem Großbuchstaben und einem Sonderzeichen eingeben.\"\n          }}\n        \n      \n    \n  \n  \n    \n    Ich stimme der Datenschutzerklärung zu.\n  \n  \n    \n      {{ registrationErrorMessage }}\n    \n  \n  \n    \n      Weiter\n    \n  \n\n\n    \n\n    \n                \n                    ./register.component.scss\n                \n                .user-register-container {\n  max-width: 606px;\n  padding: 50px 53px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n}\n\n.user-register-title {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 20px;\n  gap: 32px;\n\n  h1 {\n    font-size: 46px;\n    color: rgba(68, 77, 242, 1);\n    margin: 0px;\n  }\n}\n\n.user-uper-register-title {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n}\n\n.user-register-input-container {\n  margin-top: 42px;\n  display: flex;\n  flex-direction: column;\n  max-width: 500px;\n}\n\n.user-register-box {\n  display: flex;\n  flex-direction: column;\n  max-height: 60px;\n  justify-content: center;\n  margin-bottom: 32px;\n}\n\n.user-register-passwort-hide {\n  display: flex;\n  position: relative;\n  right: 15px;\n  top: -42px;\n  flex-direction: row-reverse;\n  height: 0.5px;\n\n  img {\n    width: 24px;\n    height: 24px;\n  }\n}\n\n.user-register-email,\n.user-register-password {\n  display: flex;\n  height: 100%;\n  border-radius: 100px;\n  background-color: rgba(236, 238, 254, 1);\n  font-size: 18px;\n  border: none;\n  padding: 18px 32px 18px 86px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid black;\n  }\n\n  &:focus {\n    border: 1px solid rgba(83, 90, 241, 1);\n  }\n}\n\n.user-register-icon {\n  display: flex;\n  position: relative;\n  left: 30px;\n  top: 41px;\n  width: 50px;\n}\n\n.warning-text,\n.warning-password {\n  display: flex;\n  width: 100%;\n  position: relative;\n  color: red;\n  top: -15px;\n  left: 0px;\n}\n.registrationError {\n  margin-top: 24px;\n}\n\n.user-register-button-container {\n  display: flex;\n  justify-content: flex-end;\n  gap: 30px;\n}\n\n.blue-button {\n  border-radius: 25px;\n  padding: 12px 25px;\n  height: 49px;\n  font-size: 18px;\n  margin-top: 35px;\n  background-color: rgba(68, 77, 242, 1) !important;\n\n  &:hover {\n    background-color: rgba(121, 126, 243, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n  }\n\n  &.disabled-button {\n    background-color: gray !important;\n    cursor: not-allowed;\n  }\n}\n\n.user-register-checkbox {\n  display: flex;\n  gap: 8px;\n  font-size: 16px;\n  align-items: center;\n  padding: 5px 4px;\n\n  a {\n    text-decoration: none;\n    color: rgba(121, 126, 243, 1);\n\n    &:hover {\n      background-color: rgba(236, 238, 254, 1);\n      border-radius: 30px;\n      color: rgba(68, 77, 242, 1);\n    }\n  }\n}\n\n.custom-checkbox {\n  width: 17px;\n  height: 17px;\n}\n\n.br-30 {\n  border-radius: 30px;\n}\n\n\n@media screen and (max-width: 640px) {\n\n\n  .user-register-container{\n    padding: 20px 20px 30px 20px;\n    margin-left: 16px;\n    margin-right: 16px;\n    margin-bottom: 190px;\n  }\n\n  .user-register-title{\n    \n    gap: 15px;\n\n    h1{\n      font-size: 32px;\n    }\n\n    b{\n      font-size: 17px;\n    }\n  }\n\n  .user-uper-icon-title{\n    img{\n      left: 30px;\n    }\n  }\n\n  .user-uper-register-title{\n    left: 20px;\n  }\n\n  .user-register-input-container{\n    margin-top: 20px;\n    width: 100%;\n    max-width: none;\n  }\n\n  .blue-button{\n    margin-top: 30px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Konto erstellen              Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues        DABubble-Konto.                                                                              {{ \"*Bitte einen Vorname und Nachname eingeben.\" }}                          {{            \"*Der Vorname und Nachname muss aus jeweils einem Wort bestehen.\"          }}                                                                                    {{ \"*Gültige E-Mail-Adresse eingeben.\" }}                          {{ \"*Diese E-Mail-Adresse ist leider ungültig.\" }}                                                                                                                        {{            \"*Gültiges Passwort mit mindestens 6 Zeichen , einem Großbuchstaben und einem Sonderzeichen eingeben.\"          }}                              Ich stimme der Datenschutzerklärung zu.              {{ registrationErrorMessage }}                  Weiter      '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n\n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contactForm\n                            \n                            \n                                imprint\n                            \n                            \n                                isInputActive\n                            \n                            \n                                oobCode\n                            \n                            \n                                privacyPolicy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeImprintAndPrivacy\n                            \n                            \n                                isButtonDisabled\n                            \n                            \n                                newPassword\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, authService: AuthFirebaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/startscreen/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeImprintAndPrivacy\n                        \n                    \n                \n            \n            \n                \ncloseImprintAndPrivacy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/reset-password/reset-password.component.ts:66\n                        \n                    \n\n\n            \n                \n                        Closes the imprint and privacy policy views by setting their respective flags to false.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isButtonDisabled\n                        \n                    \n                \n            \n            \n                \nisButtonDisabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Determines whether the \"New Password\" button should be disabled based on form validation.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the button should be disabled; false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n            \n                \nnewPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/reset-password/reset-password.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Resets the user's password using the provided 'oobCode' and new password.\nNavigates to the home page after successful password reset.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/reset-password/reset-password.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nRetrieves the 'oobCode' query parameter from the URL and logs it to the console if present.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contactForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/reset-password/reset-password.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imprint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/reset-password/reset-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInputActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/reset-password/reset-password.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        privacyPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  contactForm: FormGroup;\n  isInputActive = false;\n  imprint = false;\n  privacyPolicy = false;\n  oobCode = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthFirebaseService,\n    private router: Router\n  ) {\n    this.contactForm = this.formBuilder.group({\n      passwordInput: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+-]).*$/)\n        ]\n      ],\n      passwordRepeatInput: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*()_+-]).*$/)\n        ]\n      ],\n    });\n  }\n\n  /**\n * Angular lifecycle hook called after component initialization.\n * Retrieves the 'oobCode' query parameter from the URL and logs it to the console if present.\n * \n * @returns {void}\n */\n  ngOnInit(): void {\n    const queryParams = new URLSearchParams(window.location.search);\n    if (queryParams.get('oobCode') != null) {\n      this.oobCode = queryParams.get('oobCode')!;\n      console.log(\"Param\");\n\n    }\n    console.log(\"code from URL:\");\n    console.log(this.oobCode);\n  }\n\n  /**\n * Closes the imprint and privacy policy views by setting their respective flags to false.\n * \n * @returns {void}\n */\n  closeImprintAndPrivacy() {\n    this.imprint = false;\n    this.privacyPolicy = false;\n  }\n\n  /**\n * Determines whether the \"New Password\" button should be disabled based on form validation.\n * \n * @returns {boolean} - True if the button should be disabled; false otherwise.\n */\n  isButtonDisabled(): boolean {\n    const passwordControl = this.contactForm.get('passwordInput');\n    const passwordRepeatControl = this.contactForm.get('passwordRepeatInput');\n\n    if (passwordControl && passwordRepeatControl) {\n      return (\n        !passwordControl.valid ||\n        passwordControl.value !== passwordRepeatControl.value ||\n        !this.contactForm.valid\n      );\n    }\n\n    return true;\n  }\n\n  /**\n * Resets the user's password using the provided 'oobCode' and new password.\n * Navigates to the home page after successful password reset.\n * \n * @returns {void}\n */\n  newPassword() {\n    if (this.contactForm.valid) {\n      const queryParams = new URLSearchParams(window.location.search);\n      const oobCode = queryParams.get('oobCode');\n      const newPassword = this.contactForm.get('passwordInput')!.value;\n\n\n      if (oobCode) {\n        this.authService.applyActionCode(oobCode)\n          .then(() => {\n            this.authService.confirmPasswordReset(oobCode, newPassword);\n            this.router.navigate(['']);\n          })\n      }\n    }\n  }\n}\n\n\n\n\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n        Passwort zurücksetzen\n      \n    \n\n    \n      \n        \n      \n\n      \n        \n      \n\n      \n        \n          {{\n            \"Das Passwort muss mindestens ein Sonderzeichen, einen Groß-/Kleinbuchstaben haben und 6 Zeichen lang.\"\n          }}\n        \n      \n\n      \n        \n          Passwort ändern\n        \n      \n    \n  \n\n  \n  \n\n  \n    Impressum\n    Datenschutz\n  \n\n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                .startScreen-container {\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n  h3 {\n    margin: 0;\n  }\n}\n\n.uper-startscreen-container {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-content: space-between;\n  align-items: center;\n  padding-top: 75px;\n  padding-bottom: 11px;\n}\n\n#startScreen-logo {\n  display: flex;\n  padding-left: 75px;\n  a {\n    text-decoration: none;\n    color: rgba(121, 126, 243, 1);\n    padding: 10px 15px;\n    font-size: 18px;\n    cursor: pointer;\n\n    &:hover {\n      border: 1px solid rgba(173, 176, 217, 1);\n      border-radius: 100px;\n    }\n  }\n}\n\n#startScreen-register {\n  align-items: flex-end;\n  display: flex;\n  flex-direction: column;\n  padding-right: 75px;\n}\n\n#startscreen-imprint-container {\n  display: flex;\n  gap: 48px;\n  padding-top: 68px;\n  padding-bottom: 48px;\n\n  a {\n    text-decoration: none;\n    color: rgba(121, 126, 243, 1);\n    padding: 10px 15px;\n    font-size: 18px;\n    cursor: pointer;\n\n    &:hover {\n      border: 1px solid rgba(173, 176, 217, 1);\n      border-radius: 100px;\n    }\n  }\n}\n\n.reset-password-container {\n  display: flex;\n  max-width: 692px;\n  padding: 40px 90px;\n  border-radius: 30px;\n  background: white;\n  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.08);\n  align-items: center;\n}\n\n.reset-password-title {\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  font-size: 20px;\n  gap: 40px;\n  align-items: center;\n\n  p {\n    font-size: 46px;\n    color: rgba(68, 77, 242, 1);\n    margin: 0px;\n  }\n}\n\n.reset-password-icon {\n  position: absolute;\n  top: 60px;\n  left: 32px;\n  cursor: pointer;\n}\n\n.reset-passwort-input-container {\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 40px;\n  width: 400px;\n}\n\n.user-reset-box {\n  display: flex;\n  flex-direction: column;\n  max-height: 60px;\n  justify-content: center;\n}\n\n.user-input-password {\n  display: flex;\n  height: 100%;\n  border-radius: 100px;\n  background-color: rgba(236, 238, 254, 1);\n  font-size: 18px;\n  border: none;\n  padding: 18px 40px;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    border: 1px solid black;\n  }\n\n  &:focus {\n    border: 1px solid rgba(83, 90, 241, 1);\n  }\n}\n\n.warning-text,\n.warning-password {\n  display: flex;\n  width: 100%;\n  position: relative;\n  color: red;\n  top: -20px;\n  left: 0px;\n}\n\n.reset-password-button-container {\n  display: flex;\n  justify-content: flex-end;\n  gap: 30px;\n}\n\n.blue-button {\n  border-radius: 25px;\n  padding: 12px 25px;\n  height: 49px;\n  font-size: 18px;\n  background-color: rgba(68, 77, 242, 1) !important;\n  color: white !important;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgba(121, 126, 243, 1) !important;\n    transition: background-color 0.15s ease-in-out;\n  }\n\n  &.disabled-button {\n    background-color: gray !important;\n    color: white;\n    cursor: not-allowed;\n  }\n}\n\n@media screen and (max-width: 640px) {\n  #startScreen-register,\n  #startscreen-imprint-container {\n    display: none;\n  }\n\n  .startScreen-container {\n    display: flex;\n    justify-content: center;\n    margin: 16px;\n  }\n\n  .uper-startscreen-container {\n    justify-content: center;\n    margin-top: 0px;\n    padding-bottom: 30px;\n    padding-top: 0px;\n  }\n\n  #startScreen-logo {\n    padding-left: 0px;\n  }\n\n  .app-login {\n    width: 100%;\n  }\n\n  .app-register {\n    width: 100%;\n  }\n\n  .app-avatar {\n    width: 100%;\n  }\n\n  .reset-password-container {\n    width: 100%;\n    padding: 20px;\n    margin-left: 16px;\n    margin-right: 16px;\n\n    p {\n      max-width: 193px;\n      font-size: 32px;\n      font-weight: 700;\n    }\n  }\n\n  .reset-passwort-input-container {\n    width: 100%;\n  }\n\n  .reset-password-icon[_ngcontent-ng-c546112664] {\n    top: 30px;\n    left: 25px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Passwort zurücksetzen                                                                              {{            \"Das Passwort muss mindestens ein Sonderzeichen, einen Groß-/Kleinbuchstaben haben und 6 Zeichen lang.\"          }}                                      Passwort ändern                              Impressum    Datenschutz  '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShowChannelUsersComponent.html":{"url":"components/ShowChannelUsersComponent.html","title":"component - ShowChannelUsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShowChannelUsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-show-channel-users\n            \n\n\n\n            \n                styleUrls\n                ./show-channel-users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./show-channel-users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeSelectionService\n                            \n                            \n                                    Public\n                                channelService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                openAddMemberMenu\n                            \n                            \n                                openProfil\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, activeSelectionService: ActiveSelectionService, userProfileService: UserProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:14\n                            \n                        \n\n                \n                    \n                            Defines Services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeSelectionService\n                                                  \n                                                        \n                                                                        ActiveSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:14\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Closes show user popup component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddMemberMenu\n                        \n                    \n                \n            \n            \n                \nopenAddMemberMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:31\n                        \n                    \n\n\n            \n                \n                        Moves to edit channel user component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfil\n                        \n                    \n                \n            \n            \n                \nopenProfil(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Shows userprofile of given user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nuser for showing in profil\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        activeSelectionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActiveSelectionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { User } from 'src/models/user.class';\nimport { ActiveSelectionService } from 'src/services/active-selection.service';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { UserProfileService } from 'src/services/user-profile.service';\n\n@Component({\n  selector: 'app-show-channel-users',\n  templateUrl: './show-channel-users.component.html',\n  styleUrls: ['./show-channel-users.component.scss']\n})\nexport class ShowChannelUsersComponent {\n  \n  @Output() closeEvent = new EventEmitter();\n\n  /**\n   * Defines Services\n   * @param channelService \n   * @param activeSelectionService \n   * @param userProfileService \n   */\n  constructor(\n    public channelService: ChannelFirebaseService,\n    public activeSelectionService: ActiveSelectionService , \n    private userProfileService: UserProfileService\n  ) { }\n\n  /**\n   * Moves to edit channel user component\n   */\n  openAddMemberMenu(){\n    this.closeEvent.emit(\"editChannelUser\");\n  }\n\n  \n  /**\n   * Closes show user popup component\n   */\n  close() {\n    this.closeEvent.emit();\n  }\n\n  \n  /**\n   * Shows userprofile of given user. \n   * @param user - user for showing in profil\n   */\n    openProfil(user: User) {\n      this.close()\n      this.userProfileService.openUserProfil(user);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            Mitglieder\n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n        \n    \n\n    \n        \n        Teilnehmer hinzufügen\n    \n\n\n\n    \n\n    \n                \n                    ./show-channel-users.component.scss\n                \n                #showChannel {\n    max-width: 800px;\n    min-width: 400px;\n    min-height: 300px;\n    background-color: white;\n    border-radius: 30px 0px 30px 30px;\n    position: absolute;\n    top: 50px;\n    right: 30px;\n    z-index: 15;\n    box-shadow: 0px 6px 10px 0px #00000033;\n    padding: 0px 24px 24px 24px;\n    gap: 18px;\n    display: flex;\n    flex-direction: column;\n    word-break: break-all;\n    max-height: 70vh;\n    overflow: scroll;\n    overflow-x: hidden;\n\n    #showChannelHeader {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        align-items: center;\n\n        img {\n            cursor: pointer;\n        }\n    }\n\n    .add-user-container {\n        display: flex;\n        justify-content: left;\n        align-items: center;\n        gap: 8px;\n        width: fit-content;\n        cursor: pointer;\n    }\n}\n\n#showChannelBackground {\n    position: fixed;\n    height: 100vh;\n    width: 100vw;\n    z-index: 14;\n    background-color: rgba(0, 0, 0, 0.5);\n    top: 0px;\n    left: 0px;\n}\n\n.member-image {\n    border-radius: 50%;\n    height: 32px;\n    aspect-ratio: 1;\n}\n\n@media only screen and (max-width: 768px) {\n\n    #showChannel {\n        max-width: unset;\n        min-width: unset;\n        width: calc(100vw - 92px);\n        padding: 0px 24px 24px 24px;\n        right: 24px;\n        left: 24px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Mitglieder                                                                                                                                                                                                        Teilnehmer hinzufügen    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ShowChannelUsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidenavComponent.html":{"url":"components/SidenavComponent.html","title":"component - SidenavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidenavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/sidenav/sidenav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidenav\n            \n\n\n\n            \n                styleUrls\n                ./sidenav.component.scss,../../../styles.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidenav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                chatService\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                selectedChannelID\n                            \n                            \n                                unpackChannels\n                            \n                            \n                                unpackMessages\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getShortenedString\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                openNewChatOrChannel\n                            \n                            \n                                showChannels\n                            \n                            \n                                showMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, channelService: ChannelFirebaseService, chatService: ChatFirebaseService, userService: UserFirebaseService, windowSizeService: WindowSizeService, activeSelectionService: ActiveSelectionService, formatService: FormatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:24\n                            \n                        \n\n                \n                    \n                            Defines services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        windowSizeService\n                                                  \n                                                        \n                                                                        WindowSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activeSelectionService\n                                                  \n                                                        \n                                                                        ActiveSelectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formatService\n                                                  \n                                                        \n                                                                        FormatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getShortenedString\n                        \n                    \n                \n            \n            \n                \ngetShortenedString(stringToShort: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/sidenav.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Shorten a give string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                stringToShort\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstring to short\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \nshortened string\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/sidenav.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Gets logged in user and sets the current window size in service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/sidenav.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Opens addNewChannelDialog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChatOrChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChatOrChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/sidenav.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Opens view to create a new chat or channel.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showChannels\n                        \n                    \n                \n            \n            \n                \nshowChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/sidenav.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Defines if channels in sidenav are visible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMessages\n                        \n                    \n                \n            \n            \n                \nshowMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/sidenav/sidenav.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Defines if messages (chats) in sidenav are visible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedChannelID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unpackChannels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unpackMessages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        windowWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1024\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/sidenav/sidenav.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog} from '@angular/material/dialog';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { User } from 'src/models/user.class';\nimport { ChatFirebaseService } from 'src/services/chat-firebase.service';\nimport { WindowSizeService } from 'src/services/window-size.service';\nimport { ActiveSelectionService } from 'src/services/active-selection.service';\nimport { FormatService } from 'src/services/format.service';\nimport { AddChannelDialogComponent } from 'src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss', '../../../styles.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n  unpackChannels = false;\n  unpackMessages = false;\n  currentUser: User = new User();\n\n  selectedChannelID = \"\";\n  windowWidth = 1024; \n\n  /**\n   * Defines services\n   * @param dialog \n   * @param channelService \n   * @param chatService \n   * @param userService \n   * @param windowSizeService \n   * @param activeSelectionService \n   * @param formatService \n   */\n  constructor(\n    public dialog: MatDialog,\n    public channelService: ChannelFirebaseService,\n    public chatService: ChatFirebaseService,\n    public userService: UserFirebaseService,\n    private windowSizeService: WindowSizeService,\n    private activeSelectionService: ActiveSelectionService,\n    private formatService: FormatService\n  ) { }\n\n\n  /**\n   * Gets logged in user and sets the current window size in service. \n   */\n  ngOnInit(): void {\n    this.userService.getUserByUID(JSON.parse(localStorage.getItem('user')!).uid)\n      .then((user) => {\n        this.currentUser = user\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n      this.windowSizeService.windowWidth$.subscribe(windowWidth => {\n        this.windowWidth = windowWidth; \n      });\n      this.windowSizeService.setWindowSize(); \n  }\n\n  /**\n  * Defines if channels in sidenav are visible. \n  */\n  showChannels() {\n    if (this.unpackChannels == false) {\n      this.unpackChannels = true;\n    } else {\n      this.unpackChannels = false;\n    }\n  }\n\n\n  /**\n   * Defines if messages (chats) in sidenav are visible. \n   */\n  showMessages() {\n    if (this.unpackMessages == false) {\n      this.unpackMessages = true;\n    } else {\n      this.unpackMessages = false;\n    }\n  }\n\n\n  /**\n   * Opens addNewChannelDialog\n   */\n  openDialog() {\n    const dialogRef = this.dialog.open(AddChannelDialogComponent, { });\n    dialogRef.afterClosed().subscribe(result => { });\n  }\n\n\n  /**\n   * Opens view to create a new chat or channel. \n   */\n  openNewChatOrChannel(){\n    this.activeSelectionService.activeSelection = undefined; \n  }\n\n\n  /**\n   * Shorten a give string \n   * @param stringToShort - string to short\n   * @returns - shortened string\n   */\n    getShortenedString( stringToShort: string) {\n      return this.formatService.cutStrLen(stringToShort);\n    }\n}\n\n\n\n\n\n\n    \n\n    \n        \n   \n    \n        \n        Code learning\n        \n            \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n        \n            \n                \n                \n                Channels\n            \n            \n                add\n            \n        \n\n        \n\n            \n                \n                    #\n                    {{ getShortenedString(channel.channelName) }}\n                \n            \n\n            \n                \n                Channel hinzufügen\n            \n        \n    \n\n    \n        \n            \n            \n            Direktnachrichten\n        \n\n        \n\n            \n            \n\n            \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./sidenav.component.scss\n                \n                #sidenav {\n    height: 100%;\n    overflow-y: scroll;\n    padding: 32px 30px;\n    min-width: 366px;\n}\n/* width */\n::-webkit-scrollbar {\n    width: 0px;\n}\n\n\n.sidenavHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    h3{\n        font-size: 24px;\n        font-weight: 700;\n    }\n}\n\n.editSquare {\n\n    &:hover {\n        filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n        transform: scale(1.05);\n    }\n}\n\n.d-none {\n    display: none;\n}\n\n.myChannelsHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.add {\n   \n    &:hover {\n        filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n        transform: scale(1.1);\n        cursor: pointer;\n    }\n}\n\n.addImage {\n    width: 17px;\n    height: 17px;\n}\n\n.myChannelsHeader2 {\n    display: flex;\n    align-items: center;\n\n    &:hover {\n        .arrow_drop_channels {\n            filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n            transform: scale(1.05);\n        }\n\n        .workspaces {\n            filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n            transform: scale(1.05);\n        }\n\n        .myChannelsHeaderText {\n            filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n            transform: scale(1.01);\n        }\n    }\n\n    cursor: pointer;\n}\n\n.pad-right17 {\n    padding-right: 17px;\n}\n\n.pad-left18{\n    padding-left: 18px;\n}\n\n.pad-left40{\n    padding-left: 40px;\n}\n\n.pad-left60{\n    padding-left: 60px;\n}\n\n.myChannels {\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    gap:6px;\n    cursor: pointer;\n    word-break: break-word;\n\n    .myChannels-channel{\n\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        gap:12px; \n        width: fit-content;\n        padding: 0px 12px 0px 12px;\n        border-radius: 30px;\n\n        .myChannels-channel-icon{\n            font-family: 'Nunito', sans-serif;\n            font-weight: 200;\n            font-size: 24px;\n            margin: 0px;\n        }\n\n        .myChannels-channel-name{\n            font-family: 'Nunito', sans-serif;\n            font-weight: 200;\n            margin: 0px;\n\n        }\n        &:hover{\n           color: #535AF1;\n           background-color: #ECEEFE; \n           font-family: 'Nunito', sans-serif;\n           font-weight: 400;\n           .myChannels-channel-icon{\n            font-weight: 400;\n            }\n            .myChannels-channel-name{\n                font-weight: 400;\n            } \n        }\n    }\n    .myChannels-channel-selected{\n        color: #535AF1; \n        background-color: #ECEEFE; \n        .myChannels-channel-icon{\n            font-weight: 400;\n        }\n        .myChannels-channel-name{\n            font-weight: 400;\n        } \n    }\n}\n\n.myMessagesHeader {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n   // margin-right: 33px;\n\n    &:hover {\n        .arrow_drop {\n            filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n            transform: scale(1.05);\n        }\n\n        .accountIcon {\n            filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n            transform: scale(1.05);\n        }\n\n        .myMessagesHeaderText {\n            filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n            transform: scale(1.01);\n        }\n        cursor: pointer;\n    }\n}\n\n.myMessagesContainer {\n    width: 100%;\n    //display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.message {\n    \n    width: 240px;\n    height: 60px;\n    border-radius: 37px;\n    margin-top: 8px;\n\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    &:hover {\n        background-color: rgba(155, 150, 250, 0.37);\n        cursor: pointer;\n    }\n}\n\n.addChannel {\n    \n    padding-top: 20px;\n    display: flex;\n    align-items: center;\n  /*\n    display: flex;\n    justify-content: center;\n    align-items: center;\n*/\n\n    &:hover {\n        filter: invert(11%) sepia(100%) saturate(9000%) hue-rotate(-108deg);\n        transform: scale(1.01);\n        cursor: pointer;\n    }\n}\n\n.myMessages {\n    display: flex;\n   flex-direction: column;\n}\n#sidenav-mobile-searchbar{\n    display: none;\n}\n\n@media only screen and (max-width: 768px) {\n\n    #sidenav{\n\n        border-radius: 0px;\n\n        .sidenavHeader{\n            display: none;\n        }\n        #sidenav-mobile-searchbar{\n            display: block;    \n        }\n    }\n}\n                \n                    ../../../styles.scss\n                \n                @use '@angular/material' as mat;\n\n@import \"@ctrl/ngx-emoji-mart/picker\";\n\n@font-face {\n    font-family: 'Nunito';\n    src: url('assets/fonts/nunito-v26-latin-regular.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 200;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-200.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 300;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-300.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 500;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-500.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 600;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-600.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito Sans';\n    src: url('assets/fonts/nunito-sans-v15-latin-regular.woff2');\n}\n\n/* You can add global styles to this file, and also import other style files */\n\nhtml,\nbody {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    background-color: #edeefe;\n}\n\n.dsp-none{\n    display: none;\n}\n\ninput {\n    font-family: 'Nunito', sans-serif;\n}\n\ntextarea {\n    font-family: 'Nunito', sans-serif;\n}\n\nbutton{\n    font-family: 'Nunito', sans-serif;\n}\n\n.br-30 {\n    border-radius: 30px;\n}\n\n.btn-blue{\n    background-color: #444DF2; \n    color: white;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid white;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(121, 126, 243, 1) !important;\n        transition: background-color 0.15s ease-in-out\n    }\n}\n.btn-white{\n    background-color: white; \n    color: #444DF2;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid #444DF2;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(68, 77, 242, 1) !important;\n        transition: background-color 0.15s ease-in-out;\n        color: white !important;\n    }\n}\n\n.closeIcon-container{\n    padding: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    cursor: pointer;\n    min-width: 30px;\n    min-height: 30px;\n\n    &:hover{\n        background-color: #ECEEFE; \n        #closeIcon path {\n            fill: #535AF1; \n            }\n    }\n\n    #closeIcon{\n        width: 24px;\n        height: 24px;\n    }\n}\n\n\n.highlighted {\n    background-color: yellow;\n  }\n  .highlight-container {\n    margin-top: 10px;\n  }\n\n\n\n.notification-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    pointer-events: none;\n\n    .notification-card {\n        z-index: 99;\n        position: relative;\n        top: 70%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: fit-content;\n        opacity: 0;\n\n        .notification-card-content {\n            font-weight: 500;\n            font-size: 24px;\n        }\n    }\n\n\n\n    //Available animation types\n    @keyframes shift-left-in {\n        0% {\n            opacity: 0;\n            left: -10%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: -10%;\n        }\n    }\n\n    @keyframes shift-up {\n        0% {\n            opacity: 0;\n            top: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n        }\n\n        70% {\n            top: 70%;\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            top: 110%;\n        }\n    }\n\n    @keyframes shift-right-in {\n        0% {\n            opacity: 0;\n            left: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: 110%;\n        }\n    }\n    \n\n    //Types of Messages\n    .error {\n        background-color: rgb(255, 66, 66);\n        color: white;\n    }\n\n    .success {\n        background-color: #4f9d00;\n        border: solid 1px #00d84f;\n        color: white;\n    }\n\n    .default {\n        background-color: #444DF2;\n        border-radius: 30px 30px 0px 30px;\n        padding: 25px;\n        border: none;\n        color: white;\n        margin-left: 8px;\n        margin-right: 8px;\n    }\n}\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                       Code learning                                                                                                                                                    Channels                                        add                                                                            #                    {{ getShortenedString(channel.channelName) }}                                                                        Channel hinzufügen                                                                        Direktnachrichten                                                                            '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'SidenavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartscreenComponent.html":{"url":"components/StartscreenComponent.html","title":"component - StartscreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartscreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/startscreen/startscreen.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-startscreen\n            \n\n\n\n            \n                styleUrls\n                ./startscreen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./startscreen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                imprint\n                            \n                            \n                                privacyPolicy\n                            \n                            \n                                showAvatar\n                            \n                            \n                                showForgotPassword\n                            \n                            \n                                showLogin\n                            \n                            \n                                showRegister\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeAvatar\n                            \n                            \n                                closeForgotPassword\n                            \n                            \n                                closeImprintAndPrivacy\n                            \n                            \n                                closeRegister\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onForgotPasswordLinkClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthFirebaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/startscreen/startscreen.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeAvatar\n                        \n                    \n                \n            \n            \n                \ncloseAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/startscreen.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Closes the avatar view and shows the login view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeForgotPassword\n                        \n                    \n                \n            \n            \n                \ncloseForgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/startscreen.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Closes the forgot password view and shows the login view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeImprintAndPrivacy\n                        \n                    \n                \n            \n            \n                \ncloseImprintAndPrivacy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/startscreen.component.ts:44\n                        \n                    \n\n\n            \n                \n                        Closes the imprint and privacy policy views by setting their respective flags to false.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeRegister\n                        \n                    \n                \n            \n            \n                \ncloseRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/startscreen.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Closes the registration view and shows the avatar view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/startscreen.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nRedirects to the 'main' route if the user is already logged in and the login session is not expired.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onForgotPasswordLinkClick\n                        \n                    \n                \n            \n            \n                \nonForgotPasswordLinkClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/startscreen/startscreen.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Shows the forgot password view and hides the login view.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        imprint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/startscreen.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        privacyPolicy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/startscreen.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/startscreen.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showForgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/startscreen.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/startscreen.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRegister\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/startscreen/startscreen.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\n\n\n@Component({\n  selector: 'app-startscreen',\n  templateUrl: './startscreen.component.html',\n  styleUrls: ['./startscreen.component.scss']\n})\nexport class StartscreenComponent implements OnInit{\n\n  showLogin = true; \n  imprint = false; \n  privacyPolicy = false; \n  showAvatar = false;\n  showRegister = false;\n  showForgotPassword = false;\n \n\n  constructor(\n    private authService: AuthFirebaseService, \n    private router: Router\n  ){}\n\n\n  /**\n * Angular lifecycle hook called after component initialization.\n * Redirects to the 'main' route if the user is already logged in and the login session is not expired.\n * \n * @returns {void}\n */\n  ngOnInit(): void {\n    if(this.authService.isLoggedIn() && !this.authService.loginExprired()){\n      this.router.navigateByUrl('index'); \n    }\n  }\n\n  /**\n * Closes the imprint and privacy policy views by setting their respective flags to false.\n * \n * @returns {void}\n */\n  closeImprintAndPrivacy(){\n    this.imprint = false; \n    this.privacyPolicy = false; \n  }\n\n  /**\n * Closes the registration view and shows the avatar view.\n * \n * @returns {void}\n */\n  closeRegister(){\n    this.showRegister = false; \n    this.showAvatar = true; \n  }\n\n  /**\n * Closes the avatar view and shows the login view.\n * \n * @returns {void}\n */\n  closeAvatar(){\n    this.showLogin = true;\n    this.showAvatar = false;\n  }\n\n  /**\n * Closes the forgot password view and shows the login view.\n * \n * @returns {void}\n */\n  closeForgotPassword(){\n    this.showLogin = true;\n    this.showForgotPassword = false;\n  }\n\n  /**\n * Shows the forgot password view and hides the login view.\n * \n * @returns {void}\n */\n  onForgotPasswordLinkClick() {\n    this.showLogin = false;\n    this.showForgotPassword = true;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n        \n            Neu bei DABubble?\n            Konto erstellen\n        \n    \n    \n        \n        \n        \n        \n        \n    \n        Impressum\n        Datenschutz\n    \n    \n        Neu bei DABubble?\n        Konto erstellen\n\n        \n            Impressum\n            Datenschutz\n        \n    \n\n    \n\n    \n                \n                    ./startscreen.component.scss\n                \n                \n#startScreen-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n \n  h3 {\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: rgba(121, 126, 243, 1);\n    padding: 10px 15px;\n    font-size: 18px;\n    cursor: pointer;\n    border: 1px solid transparent;\n\n    &:hover {\n      border: 1px solid rgba(173, 176, 217, 1);\n      border-radius: 100px;\n    }\n  }\n}\n\n.uper-startscreen-container {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  padding-top: 75px;\n  padding-bottom: 11px;\n}\n\n\n#startScreen-logo {\n  display: flex;\n  padding-left: 75px;\n}\n\n#startScreen-register {\n  align-items: flex-end;\n  display: flex;\n  flex-direction: column;\n  padding-right: 75px;\n}\n\n#startScreen-register-mobile{\n  display: none;\n}\n\n#startscreen-imprint-container {\n  display: flex;\n  gap: 48px;\n  padding-top: 68px;\n  padding-bottom: 48px;\n}\n\n\n@media screen and (max-width: 640px) {\n\n  #startScreen-register,\n  #startscreen-imprint-container{\n    display: none;\n  }\n\n  #startScreen-container{\n    display: flex;\n    justify-content: center;\n    \n  }\n\n  #startScreen-register-mobile{\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin-top: 30px;\n    gap: 20px;\n    font-size: 18px;\n\n    a {\n      text-decoration: none;\n      color: rgba(121, 126, 243, 1);\n      padding: 7px 18px;\n      font-size: 18px;\n      border: 1px solid rgba(121, 126, 243, 1);\n      border-radius: 100px;\n      cursor: pointer;\n      font-weight: bold;\n      color: rgba(68, 77, 242, 1);\n    }\n  }\n\n  #startScreen-imprint-mobile{\n    display: flex;\n    gap: 10px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n  }\n\n  .uper-startscreen-container {\n    justify-content: center;\n    //margin-top: 92px;\n    padding-bottom: 30px;\n  }\n  \n  #startScreen-logo {\n    padding-left: 0px;\n  }\n\n  .app-login{\n    width: 100%;\n  }\n\n  .app-register{\n    width: 100%;\n  }\n\n  .app-avatar{\n    width: 100%;\n  }\n\n  .app-forgot{\n    width: 100%;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Neu bei DABubble?            Konto erstellen                                                                    Impressum        Datenschutz                Neu bei DABubble?        Konto erstellen                    Impressum            Datenschutz            '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'StartscreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageFirebaseService.html":{"url":"injectables/StorageFirebaseService.html","title":"injectable - StorageFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/storage-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteImage\n                            \n                            \n                                    Async\n                                getDownloadUrl\n                            \n                            \n                                    Private\n                                    Async\n                                uploadAndRetrieveUrl\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                    Async\n                                uploadFileToStorage\n                            \n                            \n                                    Async\n                                uploadIMGFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/services/storage-firebase.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteImage(imagePath: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage-firebase.service.ts:84\n                        \n                    \n\n\n            \n                \n                        Deletes an image from Firebase Storage based on the provided image path.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                imagePath\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path of the image in Firebase Storage.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves when the image is successfully deleted.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDownloadUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDownloadUrl(storageRef: StorageReference)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage-firebase.service.ts:114\n                        \n                    \n\n\n            \n                \n                        Retrieves the download URL for a file stored in Firebase Storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageRef\n                                            \n                                                        StorageReference\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Firebase Storage reference of the file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves to the download URL of the file.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        uploadAndRetrieveUrl\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAndRetrieveUrl(storageRef: StorageReference, file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage-firebase.service.ts:72\n                        \n                    \n\n\n            \n                \n                        Uploads a file to a specified Firebase Storage reference and returns the download URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageRef\n                                            \n                                                        StorageReference\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Firebase Storage reference where the file will be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file to be uploaded.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves to the download URL of the uploaded file.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: File, folder: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage-firebase.service.ts:46\n                        \n                    \n\n\n            \n                \n                        Uploads a file to Firebase Storage in the specified folder and returns the download URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file to be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                folder\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe folder in which the file will be stored.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves to the download URL of the uploaded file.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadFileToStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFileToStorage(storageRef: StorageReference, file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage-firebase.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Uploads a file to a specified Firebase Storage reference.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                storageRef\n                                            \n                                                        StorageReference\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Firebase Storage reference where the file will be uploaded.\n\n\n                                            \n                                        \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file to be uploaded.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves when the file is successfully uploaded.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadIMGFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadIMGFile(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/storage-firebase.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Uploads an image file to Firebase Storage and returns the download URL.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe image file to be uploaded.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves to the download URL of the uploaded image.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Storage, ref, uploadBytes, getDownloadURL, StorageReference, deleteObject, getStorage } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageFirebaseService {\n  constructor(private storage: Storage) {}\n  \n\n  /**\n * Uploads an image file to Firebase Storage and returns the download URL.\n * \n * @param {File} file - The image file to be uploaded.\n * @returns {Promise} - A promise that resolves to the download URL of the uploaded image.\n * @throws {Error} - If the file is invalid or has an unsupported type.\n */\n  async uploadIMGFile(file: File): Promise {\n    if (!file || !file.type.startsWith('image/')) {\n      throw new Error('Invalid file type');\n    }\n\n    const timestamp = new Date().getTime();\n    const storageRef = ref(this.storage, 'Userpics/' + timestamp);\n\n    try {\n      await this.uploadFileToStorage(storageRef, file);\n      const url = await this.getDownloadUrl(storageRef);\n      console.log('File URL:', url);\n      return url;\n    } catch (error) {\n      console.error('Error uploading image: ', error);\n      throw error;\n    }\n  }\n\n\n /**\n * Uploads a file to Firebase Storage in the specified folder and returns the download URL.\n * \n * @param {File} file - The file to be uploaded.\n * @param {string} folder - The folder in which the file will be stored.\n * @returns {Promise} - A promise that resolves to the download URL of the uploaded file.\n * @throws {Error} - If the file is invalid or has an unsupported type.\n */\n  async uploadFile(file: File, folder: string): Promise {\n    const timestamp = new Date().getTime();\n    if (!file.type.startsWith('image/') && file.type !== 'application/pdf') {\n      throw new Error('Invalid file type');\n    }\n\n    const fileName = `${file.name}_${timestamp}`;\n    const storageRef = ref(this.storage, `${folder}/${fileName}`);\n    try {\n      const url = await this.uploadAndRetrieveUrl(storageRef, file);\n      console.log('File URL:', url);\n      return url;\n    } catch (error) {\n      console.error('Error uploading file: ', error);\n      throw error;\n    }\n  }\n\n\n  /**\n * Uploads a file to a specified Firebase Storage reference and returns the download URL.\n * \n * @param {StorageReference} storageRef - The Firebase Storage reference where the file will be uploaded.\n * @param {File} file - The file to be uploaded.\n * @returns {Promise} - A promise that resolves to the download URL of the uploaded file.\n */\n  private async uploadAndRetrieveUrl(storageRef: StorageReference, file: File): Promise {\n    await uploadBytes(storageRef, file);\n    return getDownloadURL(storageRef);\n  }\n  \n  /**\n * Deletes an image from Firebase Storage based on the provided image path.\n * \n * @param {string} imagePath - The path of the image in Firebase Storage.\n * @returns {Promise} - A promise that resolves when the image is successfully deleted.\n * @throws {Error} - If there is an error during the deletion process.\n */\n  async deleteImage(imagePath: string): Promise {\n    try {\n      const path = imagePath;\n  \n      const fileRef = ref(this.storage, path);\n      await deleteObject(fileRef);\n    } catch (error) {\n      console.error('Fehler beim Löschen des Bildes: ', error);\n      throw error;\n    }\n  }\n\n\n  /**\n * Uploads a file to a specified Firebase Storage reference.\n * \n * @param {StorageReference} storageRef - The Firebase Storage reference where the file will be uploaded.\n * @param {File} file - The file to be uploaded.\n * @returns {Promise} - A promise that resolves when the file is successfully uploaded.\n */\n  async uploadFileToStorage(storageRef: StorageReference, file: File): Promise {\n    await uploadBytes(storageRef, file);\n  }\n\n  /**\n * Retrieves the download URL for a file stored in Firebase Storage.\n * \n * @param {StorageReference} storageRef - The Firebase Storage reference of the file.\n * @returns {Promise} - A promise that resolves to the download URL of the file.\n */\n  async getDownloadUrl(storageRef: StorageReference): Promise {\n    return getDownloadURL(storageRef);\n  }\n\n\n\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Thread.html":{"url":"classes/Thread.html","title":"class - Thread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Thread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/thread.class.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Chat\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refChannelId\n                            \n                            \n                                id\n                            \n                            \n                                messages\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/thread.class.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/thread.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Chat\n\n                            \n                        \n                    \n                        \n                                Defined in         Chat:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Chat\n\n                            \n                        \n                    \n                        \n                                Defined in         Chat:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Chat\n\n                            \n                        \n                    \n                        \n                                Defined in         Chat:7\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        toJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    toJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Chat\n\n                        \n                    \n                    \n                        \n                                Defined in         Chat:11\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         { id: any; messages: any; users: any; refChannelId: string; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Chat } from \"./chat.class\";\n\nexport class Thread extends Chat {\n    refChannelId: string;\n\n    constructor(data?: any) {\n        super(data);\n        this.refChannelId = data.refChannelId || \"General\";\n    }\n\n    override toJSON() {\n        return {\n            id: this.id,\n            messages: this.messages,\n            users: this.users,\n            refChannelId: this.refChannelId\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadComponent.html":{"url":"components/ThreadComponent.html","title":"component - ThreadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/message/thread/thread.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                IfChangedService\n                                MessageFirebaseService\n                \n            \n\n\n            \n                selector\n                app-thread\n            \n\n\n\n            \n                styleUrls\n                ./thread.component.scss,../../../../styles.scss,../date-line/date-line.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thread.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answersPath\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                formatService\n                            \n                            \n                                showEmojiList\n                            \n                            \n                                showToolbar\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userFirebase\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeEmojiList\n                            \n                            \n                                closeThread\n                            \n                            \n                                closeToolbar\n                            \n                            \n                                getAnswersPath\n                            \n                            \n                                handleEmojiBarVisibility\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openToolbar\n                            \n                            \n                                toggleEmojiList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, threadService: ThreadFirebaseService, userFirebase: UserFirebaseService, formatService: FormatService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userFirebase\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formatService\n                                                  \n                                                        \n                                                                        FormatService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeEmojiList\n                        \n                    \n                \n            \n            \n                \ncloseEmojiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Closes the emoji list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Closes the thread.\nThis method sets the message property in the threadService to undefined, indicating that there is no active thread.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeToolbar\n                        \n                    \n                \n            \n            \n                \ncloseToolbar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Closes the toolbar.\nThis method sets the showToolbar flag to false, indicating that the toolbar should be hidden.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswersPath\n                        \n                    \n                \n            \n            \n                \ngetAnswersPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Retrieves the path for answers associated with the current thread's message.\n\n@returns {string} - The path for answers associated with the current thread's message.\n\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                \nThe path for answers associated with the current thread's message.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEmojiBarVisibility\n                        \n                    \n                \n            \n            \n                \nhandleEmojiBarVisibility(isVisible: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Handles the visibility of the emoji bar.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isVisible\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean indicating whether the emoji list should be visible (true) or hidden (false).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Closes current thread when componetn was destroyed (e.g. logout)\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openToolbar\n                        \n                    \n                \n            \n            \n                \nopenToolbar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Opens the toolbar.\nThis method sets the showToolbar flag to true, indicating that the toolbar should be displayed.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEmojiList\n                        \n                    \n                \n            \n            \n                \ntoggleEmojiList()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/thread/thread.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Toggles the rendering of the emoji list.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answersPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formatService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormatService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showEmojiList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToolbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userFirebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/thread/thread.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Message } from 'src/models/message.class';\nimport { ChannelFirebaseService } from 'src/services/channel-firebase.service';\nimport { FormatService } from 'src/services/format.service';\nimport { IfChangedService } from 'src/services/if-changed-service.service';\nimport { MessageFirebaseService } from 'src/services/message-firebase.service';\nimport { ThreadFirebaseService } from 'src/services/thread-firebase.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\n\n@Component({\n  selector: 'app-thread',\n  templateUrl: './thread.component.html',\n  styleUrls: ['./thread.component.scss', '../../../../styles.scss', '../date-line/date-line.component.scss'],\n  providers: [IfChangedService, MessageFirebaseService]\n})\nexport class ThreadComponent implements OnDestroy {\n\n  showEmojiList: boolean = false;\n  showToolbar: boolean = false;\n  answersPath: string = \"\";\n\n  constructor(\n    public channelService: ChannelFirebaseService,\n    public threadService: ThreadFirebaseService,\n    public userFirebase: UserFirebaseService,\n    public formatService: FormatService) {}\n\n\n  /**\n  * Retrieves the path for answers associated with the current thread's message.\n  *\n  *  * @returns {string} - The path for answers associated with the current thread's message.\n  */\n  getAnswersPath(){\n    return this.threadService.message?.path+\"/answers/\";\n  }\n\n\n  /**\n  * Toggles the rendering of the emoji list.\n  */\n  toggleEmojiList() {\n    this.showEmojiList = !this.showEmojiList;\n  }\n\n\n  /**\n  * Closes the emoji list.\n  */\n  closeEmojiList() {\n    this.showEmojiList = false;\n  }\n\n\n  /**\n  * Handles the visibility of the emoji bar.\n  * @param {boolean} isVisible - A boolean indicating whether the emoji list should be visible (`true`) or hidden (`false`).\n  */\n  handleEmojiBarVisibility(isVisible: boolean) {\n    this.showEmojiList = isVisible;\n  }\n\n  \n  /**\n  * Opens the toolbar.\n  * This method sets the showToolbar flag to true, indicating that the toolbar should be displayed.\n  * @returns {void}\n  */\n  openToolbar() {\n    this.showToolbar = true;\n  }\n\n\n  /**\n  * Closes the toolbar.\n  * This method sets the showToolbar flag to false, indicating that the toolbar should be hidden.\n  *\n  * @returns {void}\n  */\n  closeToolbar() {\n    this.showToolbar = false;\n  }\n\n  \n  /**\n  * Closes the thread.\n  * This method sets the message property in the threadService to undefined, indicating that there is no active thread.\n  * @returns {void}\n  */\n  closeThread() {\n    this.threadService.message = undefined;\n  }\n\n\n  /**\n   * Closes current thread when componetn was destroyed (e.g. logout)\n   */\n  ngOnDestroy(): void {\n    this.closeThread(); \n  }\n\n}\n    \n\n    \n        \n    \n        \n            \n                Thread\n            \n            \n                \n                    # {{ formatService.cutStrLen(channelService.selectedChannel.channelName) }}\n                \n            \n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n    \n\n    \n        \n\n        0\">\n            \n            {{ threadService.loadedAnswers.length}} Antworten\n        \n\n\n        \n            \n        \n    \n\n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./thread.component.scss\n                \n                //Revert default mat-card settings\n.mat-mdc-card-content:last-child {\n    padding: 0;\n}\n\n.mat-mdc-card-content:first-child {\n    padding: 0;\n}\n\n.mat-mdc-card-content {\n    padding: 0;\n}\n\n#thread {\n    height: 100%;\n    flex-grow: 1;\n    display: flex;\n    justify-content: flex-end;\n    flex-direction: column;\n    border-radius: 30px;\n\n    .header {\n        box-shadow: rgba(0, 0, 0, 0.8) 0 2px 23px -10px;\n        padding: 36px 45px;\n        border-radius: 30px 30px 0 0;\n        display: flex;\n        justify-content: space-between;\n\n        .header-title {\n            display: flex;\n            align-items: center;\n            gap: 32px;\n        }\n        h2{\n            margin: 0px;\n        }\n    }\n\n    .chat-container {\n        overflow-y: auto;\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        height: calc(100% - 50px);\n\n        app-message {\n            margin-top: 35px;\n        }\n\n        app-date-line,\n        .line-container {\n            margin: 12px 35px 12px 35px;\n        }\n    }\n\n\n\n\n    app-message-create {\n        padding: 35px 35px 35px 35px;\n    }\n}\n\n\n\n\n.closeIcon {\n    cursor: pointer;\n}\n\n.channel-name-header {\n    color: #444DF2;\n    line-break: anywhere;\n}\n                \n                    ../../../../styles.scss\n                \n                @use '@angular/material' as mat;\n\n@import \"@ctrl/ngx-emoji-mart/picker\";\n\n@font-face {\n    font-family: 'Nunito';\n    src: url('assets/fonts/nunito-v26-latin-regular.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 200;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-200.woff2');\n}\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 300;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-300.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 500;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-500.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito';\n    font-weight: 600;\n    font-style: normal;\n    src: url('assets/fonts/nunito-v26-latin-600.woff2');\n}\n\n@font-face {\n    font-family: 'Nunito Sans';\n    src: url('assets/fonts/nunito-sans-v15-latin-regular.woff2');\n}\n\n/* You can add global styles to this file, and also import other style files */\n\nhtml,\nbody {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    font-family: 'Nunito', sans-serif;\n    background-color: #edeefe;\n}\n\n.dsp-none{\n    display: none;\n}\n\ninput {\n    font-family: 'Nunito', sans-serif;\n}\n\ntextarea {\n    font-family: 'Nunito', sans-serif;\n}\n\nbutton{\n    font-family: 'Nunito', sans-serif;\n}\n\n.br-30 {\n    border-radius: 30px;\n}\n\n.btn-blue{\n    background-color: #444DF2; \n    color: white;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid white;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(121, 126, 243, 1) !important;\n        transition: background-color 0.15s ease-in-out\n    }\n}\n.btn-white{\n    background-color: white; \n    color: #444DF2;\n    padding: 12px 25px 12px 25px;\n    font-family: 'Nunito', sans-serif;\n    border-radius: 30px;\n    border: 1px solid #444DF2;\n    cursor: pointer;\n    font-size: 18px;\n    &:disabled{\n        opacity: 0.4;\n    }\n\n    &:hover{\n        background-color: rgba(68, 77, 242, 1) !important;\n        transition: background-color 0.15s ease-in-out;\n        color: white !important;\n    }\n}\n\n.closeIcon-container{\n    padding: 8px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 30px;\n    cursor: pointer;\n    min-width: 30px;\n    min-height: 30px;\n\n    &:hover{\n        background-color: #ECEEFE; \n        #closeIcon path {\n            fill: #535AF1; \n            }\n    }\n\n    #closeIcon{\n        width: 24px;\n        height: 24px;\n    }\n}\n\n\n.highlighted {\n    background-color: yellow;\n  }\n  .highlight-container {\n    margin-top: 10px;\n  }\n\n\n\n.notification-container {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    pointer-events: none;\n\n    .notification-card {\n        z-index: 99;\n        position: relative;\n        top: 70%;\n        left: 50%;\n        transform: translateX(-50%) translateY(-50%);\n        width: fit-content;\n        opacity: 0;\n\n        .notification-card-content {\n            font-weight: 500;\n            font-size: 24px;\n        }\n    }\n\n\n\n    //Available animation types\n    @keyframes shift-left-in {\n        0% {\n            opacity: 0;\n            left: -10%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: -10%;\n        }\n    }\n\n    @keyframes shift-up {\n        0% {\n            opacity: 0;\n            top: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n        }\n\n        70% {\n            top: 70%;\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            top: 110%;\n        }\n    }\n\n    @keyframes shift-right-in {\n        0% {\n            opacity: 0;\n            left: 110%;\n        }\n\n        5% {\n            opacity: 1;\n        }\n\n        30% {\n            top: 70%;\n            left: 50%\n        }\n\n        70% {\n            top: 70%;\n            left: 50%\n        }\n\n        95% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n            left: 110%;\n        }\n    }\n    \n\n    //Types of Messages\n    .error {\n        background-color: rgb(255, 66, 66);\n        color: white;\n    }\n\n    .success {\n        background-color: #4f9d00;\n        border: solid 1px #00d84f;\n        color: white;\n    }\n\n    .default {\n        background-color: #444DF2;\n        border-radius: 30px 30px 0px 30px;\n        padding: 25px;\n        border: none;\n        color: white;\n        margin-left: 8px;\n        margin-right: 8px;\n    }\n}\n  \n                \n                    ../date-line/date-line.component.scss\n                \n                .line-container {\n    display: flex;\n    justify-content: center;\n    position: relative;\n\n    .date {\n        border: 1px solid #ADB0D9;\n        border-radius: 30px;\n        padding: 5px 15px 5px 15px;\n        background-color: white;\n        z-index: 2;\n    }\n\n    .line {\n        top: calc(50% - 0.5px);\n        position: absolute;\n        width: calc( 100% - 1px);\n        padding: 0.5px;\n        background-color: #ADB0D9;\n        z-index: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Thread                                                            # {{ formatService.cutStrLen(channelService.selectedChannel.channelName) }}                                                                                                                                                                                                                0\">                        {{ threadService.loadedAnswers.length}} Antworten                                            '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThreadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreadFirebaseService.html":{"url":"injectables/ThreadFirebaseService.html","title":"injectable - ThreadFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreadFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/thread-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadedAnswers\n                            \n                            \n                                    Public\n                                loadedThread\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                path\n                            \n                            \n                                unsubAnswers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadAnswers\n                            \n                            \n                                loadAnswersQuery\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openThread\n                            \n                            \n                                    Async\n                                updateThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/services/thread-firebase.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loadAnswers\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadAnswers(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/thread-firebase.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAnswersQuery\n                        \n                    \n                \n            \n            \n                \nloadAnswersQuery(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/thread-firebase.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/thread-firebase.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openThread\n                        \n                    \n                \n            \n            \n                \nopenThread(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/thread-firebase.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateThread\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateThread(thread: Thread, path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/thread-firebase.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread\n                                            \n                                                            Thread\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                    \n                        \n                                Defined in src/services/thread-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thread | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/services/thread-firebase.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                    \n                        \n                                Defined in src/services/thread-firebase.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/services/thread-firebase.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/thread-firebase.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Firestore } from '@angular/fire/firestore';\nimport { collection, updateDoc, doc, getDocs, onSnapshot, query, setDoc, where, orderBy } from \"firebase/firestore\";\nimport { Thread } from '../models/thread.class';\nimport { MessageFirebaseService } from './message-firebase.service';\nimport { Message } from 'src/models/message.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ThreadFirebaseService {\n    public loadedThread: Thread | undefined;\n    message?: Message;\n    public loadedAnswers!: Message[];\n    path: string = \"\";\n    unsubAnswers: any;\n\n    constructor(\n        private firestore: Firestore,\n    ) { }\n\n    openThread(message: Message) {\n        this.message = message;\n        this.path = message.path;\n        this.loadAnswers(message);\n    }\n\n    loadAnswersQuery(path: string) {\n        return query(collection(this.firestore, path), orderBy(\"timestamp\"));\n    }\n\n    async loadAnswers(message: Message) {\n        let path = message.path + `/answers/`;\n        this.unsubAnswers = onSnapshot(this.loadAnswersQuery(path), (querySnapshot: any) => {\n            this.loadedAnswers = [];\n            querySnapshot.forEach((doc: any) => {\n                if (doc.data()) {\n                    let answer = new Message(doc.data());\n                    answer.id = doc.id;\n                    answer.path = path + doc.id;\n                    this.loadedAnswers.push(answer);\n                }\n            })\n        });\n    }\n\n    async updateThread(thread: Thread, path: string) {\n        if (thread.id == \"\") {\n            const docInstance = doc(collection(this.firestore, path + \"threads\"));\n            setDoc(docInstance, thread.toJSON());\n        } else {\n            const docInstance = doc(this.firestore, 'threads', thread.id);\n            updateDoc(docInstance, thread.toJSON());\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.unsubAnswers) {\n            this.unsubAnswers();\n        }\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/message/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n\n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showMessageOptions\n                            \n                            \n                                showMessageReactions\n                            \n                            \n                                    Public\n                                threadService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleEmojiSelection\n                            \n                            \n                                handleMessageDelete\n                            \n                            \n                                handleMessageEdit\n                            \n                            \n                                hideOptions\n                            \n                            \n                                hideReactions\n                            \n                            \n                                toggleOptions\n                            \n                            \n                                toggleReactions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOwnMessage\n                            \n                            \n                                message\n                            \n                            \n                                messageLocation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteMessageOutput\n                            \n                            \n                                editMessageOutput\n                            \n                            \n                                emojiSelectedOutput\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(threadService: ThreadFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOwnMessage\n                    \n                \n                \n                    \n                        Type :     boolean | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         Message | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        messageLocation\n                    \n                \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteMessageOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        editMessageOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emojiSelectedOutput\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleEmojiSelection\n                        \n                    \n                \n            \n            \n                \nhandleEmojiSelection(selectedEmoji: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an emoji.\nThis method is called when an emoji is selected, and it performs the following actions:\n\nIf the selected emoji is \"noSelection\", it hides the message reactions.\nIf a valid emoji is selected, it emits the selected emoji using the emojiSelectedOutput EventEmitter.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selectedEmoji\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe emoji selected by the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessageDelete\n                        \n                    \n                \n            \n            \n                \nhandleMessageDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Emits an event to indicate that a message should be deleted.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessageEdit\n                        \n                    \n                \n            \n            \n                \nhandleMessageEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Emits an event to indicate that a message should be edited.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideOptions\n                        \n                    \n                \n            \n            \n                \nhideOptions(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Hides message options by setting the showMessageOptions flag to false.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object that triggered the method.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideReactions\n                        \n                    \n                \n            \n            \n                \nhideReactions(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Hides message reactions by setting the showMessageReactions flag to false.\nThis method is typically called in response to an event, and it prevents the event propagation\nto ensure that the message reactions are hidden without affecting other components or actions.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object that triggered the method.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleOptions\n                        \n                    \n                \n            \n            \n                \ntoggleOptions(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Handles the selection of an emoji.\nThis method is called when an emoji is selected, and it performs the following actions:\n\nIf the selected emoji is \"noSelection\", it hides the message reactions.\nIf a valid emoji is selected, it emits the selected emoji using the emojiSelectedOutput EventEmitter.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleReactions\n                        \n                    \n                \n            \n            \n                \ntoggleReactions(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of message reactions.\nThis method is typically called in response to an event and performs the following actions:\n\nIf message reactions are currently visible, hides them by setting showMessageReactions to false.\nIf message reactions are not visible, shows them and hides other options by calling hideOptions.\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object that triggered the method.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showMessageOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMessageReactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/message/toolbar/toolbar.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Message } from 'src/models/message.class';\nimport { MessageFirebaseService } from 'src/services/message-firebase.service';\nimport { ThreadFirebaseService } from 'src/services/thread-firebase.service';\n\n\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss']\n})\nexport class ToolbarComponent {\n  @Input() isOwnMessage: boolean | undefined;\n  @Input() message: Message | undefined;\n  @Input() messageLocation: string | undefined;\n  showMessageOptions: boolean = false;\n  showMessageReactions: boolean = false;\n  @Output() emojiSelectedOutput: EventEmitter = new EventEmitter();\n  @Output() editMessageOutput: EventEmitter = new EventEmitter();\n  @Output() deleteMessageOutput: EventEmitter = new EventEmitter();\n  \n\n  constructor(\n    public threadService: ThreadFirebaseService) {\n  }\n\n\n  /**\n  * Emits an event to indicate that a message should be edited.\n  * @returns {void}\n  */\n  handleMessageEdit(){\n    this.editMessageOutput.emit(true);\n  }\n\n\n  /**\n  * Emits an event to indicate that a message should be deleted.\n  * @returns {void}\n  */\n  handleMessageDelete(){\n    this.deleteMessageOutput.emit(true);\n  }\n\n  \n  /**\n  * Handles the selection of an emoji.\n  *\n  * This method is called when an emoji is selected, and it performs the following actions:\n  * - If the selected emoji is \"noSelection\", it hides the message reactions.\n  * - If a valid emoji is selected, it emits the selected emoji using the `emojiSelectedOutput` EventEmitter.\n  *\n  * @param {string} selectedEmoji - The emoji selected by the user.\n  * @returns {void}\n  */\n  handleEmojiSelection(selectedEmoji: string) {\n    if (selectedEmoji == \"noSelection\") {\n      this.showMessageReactions = false;\n    } else {\n      this.emojiSelectedOutput.emit(selectedEmoji);\n    }\n  }\n\n\n  /**\n  * Handles the selection of an emoji.\n  *\n  * This method is called when an emoji is selected, and it performs the following actions:\n  * - If the selected emoji is \"noSelection\", it hides the message reactions.\n  * - If a valid emoji is selected, it emits the selected emoji using the `emojiSelectedOutput` EventEmitter.\n  *\n  * @param {string} selectedEmoji - The emoji selected by the user.\n  * @returns {void}\n  */\n  toggleOptions(event: Event) {\n    event.stopPropagation();\n    if (this.showMessageOptions) {\n      this.showMessageOptions = false;\n    } else {\n      this.showMessageOptions = true;\n      this.hideReactions(event);\n    }\n  }\n\n\n  /**\n  * Hides message options by setting the showMessageOptions flag to false.\n  * \n  * @param {Event} event - The event object that triggered the method.\n  * @returns {void}\n  */\n  hideOptions(event: Event) {\n    event.stopPropagation();\n    this.showMessageOptions = false;\n  }\n\n\n  /**\n  * Toggles the visibility of message reactions.\n  *\n  * This method is typically called in response to an event and performs the following actions:\n  * - If message reactions are currently visible, hides them by setting showMessageReactions to false.\n  * - If message reactions are not visible, shows them and hides other options by calling hideOptions.\n  * \n  * @param {Event} event - The event object that triggered the method.\n  * @returns {void}\n  */\n  toggleReactions(event: Event) {\n    event.stopPropagation();\n    if (this.showMessageReactions) {\n      this.showMessageReactions = false;\n    } else {\n      this.showMessageReactions = true;\n      this.hideOptions(event);\n    }\n  }\n\n\n  /**\n  * Hides message reactions by setting the showMessageReactions flag to false.\n  *\n  * This method is typically called in response to an event, and it prevents the event propagation\n  * to ensure that the message reactions are hidden without affecting other components or actions.\n  *\n  * @param {Event} event - The event object that triggered the method.\n  * @returns {void}\n  */\n  hideReactions(event: Event) {\n    event.stopPropagation();\n    this.showMessageReactions = false;\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n        \n            \n        \n        \n            \n        \n        \n            \n                \n            \n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n        Nachricht bearbeiten\n        \n    \n    \n        Nachricht löschen\n    \n\n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                mat-toolbar {\n  background-color: white;\n  border: solid 1px rgba(173, 176, 217, 1);\n  border-radius: 25px 25px 25px 0px;\n  z-index: 99;\n  gap: 5px;\n}\n\n.toolbar-icon {\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: rgba(236, 238, 254, 1);\n    border-radius: 30px;\n\n    #addreaction-icon path,\n    #more-vert-icon path,\n    #answer-icon path {\n      fill: #535af1;\n    }\n  }\n}\n\n.message-edit-options {\n  position: absolute;\n  float: right;\n  background-color: white;\n  border-radius: 0px 30px 30px 30px;\n  width: 100%;\n  left: 90%;\n  top: 35px;\n  box-shadow: 0px 6px 14px 0px rgba(0, 0, 0, 0.2);\n\n  button {\n    cursor: pointer;\n    width: fit-content;\n    background-color: #ffffff;\n    border-radius: 30px 30px 30px 30px;\n    display: flex;\n    align-items: center;\n    width: calc(100% - 16px);\n    margin: 8px;\n    border: none;\n    padding: 8px;\n    justify-content: center;\n    font-size: 16px;\n    font-weight: bold;\n\n    &:hover {\n      background-color: #eceefe;\n      font-weight: 600;\n      color: rgba(83, 90, 241, 1);\n    }\n  }\n}\n\n@media only screen and (max-width: 768px) {\n  .message-container {\n    padding: 0px 0px;\n  }\n\n  .message-edit-options {\n    left: 35%;\n    top: 60px;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        varachricht bearbeiten                        Nachricht löschen    '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                channels\n                            \n                            \n                                chats\n                            \n                            \n                                fullName\n                            \n                            \n                                id\n                            \n                            \n                                mail\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/user.class.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chats\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user.class.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        toJSON\n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/models/user.class.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; fullName: string; mail: string; avatar: string; channels: {}; chats: {}; status: string; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id: string;\n    fullName:string;\n    mail: string;\n    avatar: string;\n    channels: string[]; \n    chats: string[]; \n    status: string; \n\n    constructor(obj?: any) {\n        this.id = obj ? obj.id : \"\";\n        this.fullName = obj ? obj.fullName : \"\";\n        this.mail = obj ? obj.mail : \"\";\n        this.avatar = obj ? obj.avatar : \"assets/img/avatar/avatar0.svg\";\n        this.channels = obj ? obj.channels : []; \n        this.chats = obj ? obj.chats : []; \n        this.status = obj ? obj.status : \"offline\"; \n    }\n\n    toJSON() {\n        return {\n            id: this.id,\n            fullName: this.fullName,\n            mail: this.mail,\n            avatar: this.avatar, \n            channels: this.channels, \n            chats: this.chats,\n            status: this.status\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFirebaseService.html":{"url":"injectables/UserFirebaseService.html","title":"injectable - UserFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                finishedLoading\n                            \n                            \n                                    Public\n                                loadedUser\n                            \n                            \n                                    Public\n                                loadedUsers\n                            \n                            \n                                    Public\n                                registUser\n                            \n                            \n                                    Private\n                                unsubUser\n                            \n                            \n                                    Private\n                                unsubUsers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addNewUserWithUID\n                            \n                            \n                                    Async\n                                addRegistUserWithUID\n                            \n                            \n                                    Async\n                                getChannelForSearch\n                            \n                            \n                                    Async\n                                getUserByUID\n                            \n                            \n                                    Async\n                                getUserForSearch\n                            \n                            \n                                    Async\n                                load\n                            \n                            \n                                mailExists\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setCurrentUser\n                            \n                            \n                                setCurrentUserStatus\n                            \n                            \n                                    Async\n                                setUIDToCurrentUser\n                            \n                            \n                                sortByUsersByName\n                            \n                            \n                                    Async\n                                syncMail\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateCurrentUserToFirebase\n                            \n                            \n                                updateEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firestore: Firestore)\n                    \n                \n                        \n                            \n                                Defined in src/services/user-firebase.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firestore\n                                                  \n                                                        \n                                                                    Firestore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addNewUserWithUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    addNewUserWithUID(user: User, UID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Creates a new User with a Custom ID. To create a new User you should take UID from Firebase Authentication.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nnew User\n\n\n                                            \n                                        \n                                        \n                                                UID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUID from Authentication\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addRegistUserWithUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    addRegistUserWithUID(UID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Registers a user with a given UID from authentication.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                UID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUID from Authentication\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getChannelForSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChannelForSearch(searchString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:186\n                        \n                    \n\n\n            \n                \n                        Search for Substring in channel names and returns if its matches.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nseachstring\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                [Channels] - Array of find channels.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserByUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByUID(UID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Returns a User for a given User UID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                UID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUnique ID of User\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \nUser-Objekt\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserForSearch\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserForSearch(searchString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:158\n                        \n                    \n\n\n            \n                \n                        Search for Substring in users fullname element and returns if its matches.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                searchString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nseachstring\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                [Users] - Array of find users.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                        \n                    load()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Asynchronously loads user data from Firestore based on optional index parameters.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mailExists\n                        \n                    \n                \n            \n            \n                \nmailExists(mail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:206\n                        \n                    \n\n\n            \n                \n                        Check if a given email exists in the array of loaded users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe email to check for in the user data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                Returns true if the email exists in the loaded users, or false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:225\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when the component is about to be destroyed.\nUnsubscribes from any active subscription.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n            \n                \nsetCurrentUser(UserData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Sets the given Userdata to the current user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                UserData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser to be set to current user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUserStatus\n                        \n                    \n                \n            \n            \n                \nsetCurrentUserStatus(status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:175\n                        \n                    \n\n\n            \n                \n                        Sets the user status in currentUser and save it in firestore database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstatus of user\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setUIDToCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUIDToCurrentUser(UID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Sets a User with a given UID to the current logged in User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                UID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUnique ID of User\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortByUsersByName\n                        \n                    \n                \n            \n            \n                \nsortByUsersByName(users: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        syncMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    syncMail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Chechs if email is same as the given (authentication) and updates in firestore database.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nemail adress of authentication\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Updates Or Creates a user document in Firestore.\nDepending on if user.id is given\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object to be updated or created.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCurrentUserToFirebase\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUserToFirebase()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:138\n                        \n                    \n\n\n            \n                \n                        Update the current user in firestore database.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEmail\n                        \n                    \n                \n            \n            \n                \nupdateEmail(newEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-firebase.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Updates given email adress for current User\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nnew email\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        finishedLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        registUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/services/user-firebase.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AfterViewInit, Injectable, OnInit } from '@angular/core';\nimport { Firestore } from '@angular/fire/firestore';\nimport { collection, updateDoc, doc, getDocs, onSnapshot, query, setDoc, where, getDoc } from \"firebase/firestore\";\nimport { User } from '../models/user.class';\nimport { getLocaleFirstDayOfWeek } from '@angular/common';\nimport { AuthFirebaseService } from './auth-firebase.service';\nimport { Channel } from 'src/models/channel.class';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserFirebaseService {\n    public loadedUsers: User[] = [];\n    private unsubUsers: any;\n\n    public finishedLoading: boolean = false;\n\n    public loadedUser: User | undefined;\n    private unsubUser: any;\n\n    public currentUser: User = new User();\n\n    public registUser: User = new User();\n\n    constructor(private firestore: Firestore) {\n    }\n\n    /**\n     * Sets the given Userdata to the current user. \n     * @param UserData - User to be set to current user. \n     */\n    setCurrentUser(UserData: any) {\n        this.currentUser = new User(UserData);\n    }\n\n    /**\n    * Asynchronously loads user data from Firestore based on optional index parameters.\n    */\n    async load() {\n        const q = query(collection(this.firestore, \"users\"));\n        this.unsubUsers = onSnapshot(q, (querySnapshot) => {\n            this.loadedUsers = [];\n            this.finishedLoading = false;\n            querySnapshot.forEach((doc) => {\n                const user = new User(doc.data());\n                user.id = doc.id;\n                this.loadedUsers.push(user);\n            });\n            this.finishedLoading = true;\n            this.loadedUsers = this.sortByUsersByName(this.loadedUsers);\n        });\n    }\n\n\n    sortByUsersByName(users: User[]) {\n        return users.slice().sort((a, b) => a.fullName.localeCompare(b.fullName));\n    }\n\n\n    /**\n    * Updates Or Creates a user document in Firestore.\n    * Depending on if user.id is given\n    * @param {User} user - The user object to be updated or created.\n     */\n    async update(user: User) {\n        if (user.id != \"\") {\n            const docInstance = doc(this.firestore, 'users', user.id);\n            updateDoc(docInstance, user.toJSON());\n        }\n    }\n\n    /**\n     * Creates a new User with a Custom ID. To create a new User you should take UID from Firebase Authentication.  \n     * \n     * @param user - new User\n     * @param UID - UID from Authentication\n     */\n    async addNewUserWithUID(user: User, UID: string) {\n        setDoc(doc(this.firestore, \"users\", UID), user.toJSON());\n    }\n\n\n    /**\n     * Registers a user with a given UID from authentication. \n     * @param UID - UID from Authentication\n     */\n    async addRegistUserWithUID(UID: string) {\n        setDoc(doc(this.firestore, \"users\", UID), this.registUser.toJSON());\n    }\n\n\n    /**\n     *Returns a User for a given User UID. \n     * \n     * @param UID - Unique ID of User\n     * @returns - User-Objekt\n     */\n    async getUserByUID(UID: string) {\n        let user = this.loadedUsers.find(user => user.id === UID);\n        \n        if (user) {\n            return user;\n        } else {\n            if (UID != \"\") {\n                const docRef = await doc(this.firestore, \"users\", UID);\n                const docSnap = await getDoc(docRef);\n                let user = new User(docSnap.data());\n                user.id = docSnap.id;\n                return user;\n            } else {\n                return new User();\n            }\n        }\n    }\n\n    /**\n     * Sets a User with a given UID to the current logged in User\n     * @param UID - Unique ID of User\n     */\n    async setUIDToCurrentUser(UID: string) {\n        const user = await this.getUserByUID(UID);\n        this.currentUser = new User(user);\n    }\n\n    /**\n     * Updates given email adress for current User\n     * @param newEmail - new email\n     */\n    updateEmail(newEmail: string) {\n        this.currentUser.mail = newEmail;\n        this.update(this.currentUser);\n    }\n\n    /**\n     * Update the current user in firestore database.\n     */\n    async updateCurrentUserToFirebase() {\n        this.update(this.currentUser);\n    }\n\n    /**\n     * Chechs if email is same as the given (authentication) and updates in firestore database.\n     * @param email - email adress of authentication\n     */\n    async syncMail(email: string) {\n        if (this.currentUser.mail != email) {\n            this.currentUser.mail = email;\n            this.updateCurrentUserToFirebase();\n        }\n    }\n\n    /**\n     * Search for Substring in users fullname element and returns if its matches. \n     * @param searchString - seachstring\n     * @returns [Users] - Array of find users. \n     */\n    async getUserForSearch(searchString: string) {\n        const searchKeywords = searchString.split(\" \");\n        const q = query(collection(this.firestore, \"users\"),\n            where(\"fullName\", \">=\", searchString),\n            where(\"fullName\", \" {\n            findUsers.push(new User(doc.data()))\n        });\n        return findUsers;\n    }\n\n    /**\n     * Sets the user status in currentUser and save it in firestore database.\n     * @param status - status of user \n     */\n    setCurrentUserStatus(status: string) {\n        this.currentUser.status = status;\n        this.updateCurrentUserToFirebase();\n    }\n\n\n    /**\n     * Search for Substring in channel names and returns if its matches. \n     * @param searchString - seachstring\n     * @returns [Channels] - Array of find channels. \n     */\n    async getChannelForSearch(searchString: string) {\n\n        const searchKeywords = searchString.split(\" \");\n        const q = query(collection(this.firestore, \"channels\"),\n            where(\"channelName\", \">=\", searchString),\n            where(\"channelName\", \" {\n            findChannels.push(new Channel(doc.data()))\n        });\n        return findChannels;\n    }\n\n    /**\n     * Check if a given email exists in the array of loaded users.\n     *\n     * @param {string} mail - The email to check for in the user data.\n     * @returns {boolean} Returns `true` if the email exists in the loaded users, or `false` otherwise.\n     */\n    mailExists(mail: string) {\n        this.load();\n        if (this.loadedUsers[0]) {\n            for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfilComponent.html":{"url":"components/UserProfilComponent.html","title":"component - UserProfilComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfilComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/mainscreen/user-profil/user-profil.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profil\n            \n\n\n\n            \n                styleUrls\n                ./user-profil.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profil.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentAuthMail\n                            \n                            \n                                currentUserInput\n                            \n                            \n                                editUserForm\n                            \n                            \n                                editUserMode\n                            \n                            \n                                isCurrentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                closeWithoutSave\n                            \n                            \n                                confirmEdit\n                            \n                            \n                                createChat\n                            \n                            \n                                    Async\n                                editUser\n                            \n                            \n                                getStatus\n                            \n                            \n                                nameValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                sendMessage\n                            \n                            \n                                stopPropagation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userProfileService: UserProfileService, userStatusService: UserStatusFirebaseService, userService: UserFirebaseService, authService: AuthFirebaseService, chatService: ChatFirebaseService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/mainscreen/user-profil/user-profil.component.ts:37\n                            \n                        \n\n                \n                    \n                            Defines services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userProfileService\n                                                  \n                                                        \n                                                                        UserProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userStatusService\n                                                  \n                                                        \n                                                                        UserStatusFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chatService\n                                                  \n                                                        \n                                                                        ChatFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                        NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                        \n                            \n                                    Defined in src/app/mainscreen/user-profil/user-profil.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Close user profil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeWithoutSave\n                        \n                    \n                \n            \n            \n                \ncloseWithoutSave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Closes userprofil without saving changes.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmEdit\n                        \n                    \n                \n            \n            \n                \nconfirmEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Confirm edits with press enter key\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createChat\n                        \n                    \n                \n            \n            \n                \ncreateChat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Creates a new chat between the opened profile user and the current logged in user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    editUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Edit the current User and saves the changes in the firebase store.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n            \n                \ngetStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Gets the current user status from userStatusService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nameValidator\n                        \n                    \n                \n            \n            \n                \nnameValidator(control: FormControl)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Validates the input value of a form controle if it has not more than two words.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        FormControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nformControl for validation\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Gets the current user status when opening userProfil.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:155\n                        \n                    \n\n\n            \n                \n                        Opens Chat with user. If a chat already exists, chat was openden. If no chat existst, a new one was created!\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopPropagation\n                        \n                    \n                \n            \n            \n                \nstopPropagation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/mainscreen/user-profil/user-profil.component.ts:189\n                        \n                    \n\n\n            \n                \n                        prevents further propagation of the current event\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nClickevent\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentAuthMail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/user-profil/user-profil.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/user-profil/user-profil.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    nameInput: new FormControl(\"\", [\n      Validators.required,\n      this.nameValidator\n    ]),\n    emailInput: new FormControl(\"\", [\n      Validators.required,\n      Validators.email\n    ]),\n\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/user-profil/user-profil.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUserMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/user-profil/user-profil.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/mainscreen/user-profil/user-profil.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Chat } from 'src/models/chat.class';\nimport { User } from 'src/models/user.class';\nimport { AuthFirebaseService } from 'src/services/auth-firebase.service';\nimport { ChatFirebaseService } from 'src/services/chat-firebase.service';\nimport { NotificationService } from 'src/services/notification.service';\nimport { UserFirebaseService } from 'src/services/user-firebase.service';\nimport { UserProfileService } from 'src/services/user-profile.service';\nimport { UserStatusFirebaseService } from 'src/services/user-status-firebase.service';\n\n@Component({\n  selector: 'app-user-profil',\n  templateUrl: './user-profil.component.html',\n  styleUrls: ['./user-profil.component.scss']\n})\nexport class UserProfilComponent implements OnInit {\n\n  @Input() user: User = new User();\n  isCurrentUser = false;\n  editUserMode = false;\n\n  currentAuthMail = \"\";\n  currentUserInput = \"\";\n\n  editUserForm = new FormGroup({\n    nameInput: new FormControl(\"\", [\n      Validators.required,\n      this.nameValidator\n    ]),\n    emailInput: new FormControl(\"\", [\n      Validators.required,\n      Validators.email\n    ]),\n\n  });\n\n  /**\n   * Defines services\n   * @param userProfileService \n   * @param userStatusService \n   * @param userService \n   * @param authService \n   * @param chatService \n   * @param notificationService \n   * @param router \n   */\n  constructor(\n    private userProfileService: UserProfileService,\n    private userStatusService: UserStatusFirebaseService,\n    private userService: UserFirebaseService,\n    private authService: AuthFirebaseService,\n    private chatService: ChatFirebaseService, \n    private notificationService: NotificationService\n    ) {\n  }\n\n\n  /**\n   * Gets the current user status when opening userProfil.\n   */\n  ngOnInit(): void {\n    this.isCurrentUser = this.userService.currentUser.id == this.user.id ? true : false;\n    this.getStatus();\n    this.editUserForm.patchValue({\n      nameInput: this.user.fullName, \n      emailInput: this.user.mail\n    });\n    this.currentAuthMail = this.authService.UserData.email\n    this.currentUserInput = this.user.mail; \n  }\n\n\n  /**\n   * Validates the input value of a form controle if it has not more than two words.\n   * @param control - formControl for validation\n   * @returns \n   */\n  nameValidator(control: FormControl): { [key: string]: boolean } | null {\n    const value = control.value;\n    if (value && value.trim().split(' ').length  {\n        this.userService.setCurrentUser(this.user);\n        if (this.currentAuthMail != this.editUserForm.get(\"emailInput\")?.value) {\n          this.authService.logout();\n        }\n      },  3000 ) ; \n    }\n    else{\n      location.reload(); \n    }\n    this.close(); \n  }\n\n\n  /**\n   * Closes userprofil without saving changes. \n   */\n  closeWithoutSave() {\n    this.editUserMode = false\n    this.editUserForm.patchValue({\n      nameInput: this.user.fullName,\n      emailInput: this.user.mail\n    });\n    this.currentUserInput = this.user.mail;\n  }\n\n\n  /**\n   * Close user profil\n   */\n  close() {\n    this.userProfileService.close();\n  }\n\n  \n  /**\n   * Gets the current user status from userStatusService. \n   */\n  getStatus() {\n    this.userStatusService.getUserStatus(this.user.id)\n      .then((result) => {\n        this.user.status = result;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  /**\n   * Opens Chat with user. If a chat already exists, chat was openden. If no chat existst, a new one was created!\n   */\n  async sendMessage(){\n    if(this.user && this.userService.currentUser){\n      const usersChat = this.chatService.getChatWithUser(this.user.id);  \n      if(usersChat){\n        this.chatService.selectChat(usersChat.id);\n        this.userProfileService.close(); \n      }\n      else{\n        this.createChat(); \n      }\n    }\n  }\n\n\n  /**\n   * Creates a new chat between the opened profile user and the current logged in user. \n   */\n  createChat() {\n    let chat = new Chat({\n      users: [this.userService.currentUser.id, this.user.id]\n    });\n    this.chatService.update(chat).then((chat) => {\n      this.chatService.loadedChats.unshift(chat);\n      this.chatService.selectChat(chat.id);\n      this.close(); \n    }).catch((error) => {\n      throw new Error(`Failed to start chat: ${error.message}`);\n    });\n  }\n\n  /**\n   * prevents further propagation of the current event \n   * @param event - Clickevent\n   */\n  stopPropagation(event:Event){\n    event.stopPropagation();\n  }\n\n\n  /**\n   * Confirm edits with press enter key\n   */\n  confirmEdit() {\n    if (this.editUserForm.valid) {\n      this.editUser();\n    }\n  }\n}\n\n\n    \n\n    \n        \n\n    \n        \n            Profil\n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n        \n            \n        \n        \n            \n                \n                    {{user.fullName}}\n                \n                \n                    Bearbeiten\n                \n            \n            \n                \n                {{user.status}}\n            \n            \n                \n                    \n                    E-Mail-Adresse\n                \n                \n                    {{user.mail}}\n                \n            \n            \n                \n                    \n                    Nachricht\n                \n            \n        \n        \n            \n                \n                    \n                        \n                        Vollständiger Name\n                    \n                    \n                \n                \n                    \n                        \n                        E-Mail-Adresse\n                    \n                    \n                \n                \n                    \n                        Achtung: Wenn Sie Ihre E-Mail-Adresse ändern, müssen Sie diese per Mail verifizieren.\n                        Sie werden ausgeloggt und können sich nach Bestätigung mit ihrere neuen E-Mail Adresse anmelden.\n                    \n                \n                \n                    Abbrechen\n                    Speichern\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./user-profil.component.scss\n                \n                #UserProfil {\n\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    z-index: 15;\n    width: 100vw;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    #UserProfilCard {\n        min-width: 100px;\n        max-width: 500px;\n        min-height: 100px;\n        background-color: white;\n        padding: 24px;\n        box-shadow: 0px 6px 10px 0px rgba(0, 0, 0, 0.5);\n        \n        #headerUserProfil-header {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n\n        #headerUserProfil-image-container {\n            width: 100%;\n            min-width: 300px;\n            display: flex;\n            justify-content: center;\n\n            img {\n                width: 30%;\n                border-radius: 50%;\n            }\n        }\n\n        #headerUserProfil-name {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n\n            a{\n                color: #444DF2;\n                cursor: pointer;\n                &:hover{\n                    font-weight: bold;\n                }\n            }\n        }\n\n        #status {\n            display: flex;\n            align-items: center;\n            gap: 12px;\n            #statusIcon {\n                width: 8px;\n                height: 8px;\n                border-radius: 50%;\n            }\n            #statusFont {\n                margin: 0px;\n            }\n        }\n        \n        #headerUserProfil-email {\n            display: flex;\n            flex-direction: column;\n\n            #headerUserProfil-email-header {\n                display: flex;\n                gap: 12px;\n            }\n            #headerUserProfil-email-address{\n                padding-left: 36px;\n                a{\n                    font-style: normal;\n                    color: #444DF2;\n                    margin-top: 0px;\n                    text-decoration: none;\n                }\n            }\n        }\n\n        #headerUserProfil-message{\n            display: flex;\n            justify-content: center;\n            align-items: center; \n            margin-top: 30px;\n            button{\n                display: flex;\n                justify-content: center;\n                align-items: center; \n                gap:8px; \n                &:hover{\n                    cursor: pointer;\n                    background-color: rgba(121, 126, 243, 1) !important;\n                    transition: background-color 0.15s ease-in-out;\n                }\n            }\n        }\n    }\n}\n\n#headerUserProfil-EditMode {\n\n    .headerUserProfil-EditMode-Row {\n        display: flex;\n        align-items: center;\n        gap: 12px; \n        img{\n            width: 24px;\n            height: 24px;\n        }\n    }\n    input {\n        border-radius: 30px;\n        color: #686868;\n        border: 1px solid #686868;\n        padding: 15px 20px 15px 20px;\n        font-family: 'Nunito', sans-serif;\n        width: calc(100% - 40px);\n    }\n    #headerUserProfil-EditMode-btn-container{\n        margin-top: 12px; \n        display: flex;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        gap: 24px; \n    }\n    #headerUserProfil-EditMode-EditMailInfo{\n        color: red; \n    }\n}\n\n.col-red{\n    color: red;\n    #statusIcon {\n        background-color: red\n    }\n}\n.col-green{\n    color: green;\n    #statusIcon {\n        background-color: green;\n    }\n}\n.col-gray{\n    color: gray;\n    #statusIcon {\n        background-color: gray;\n    }\n}\n\n.currentUserPosition{\n    /*\n    padding: 24px;\n    min-width: 100px;\n    max-width: 500px;\n    min-height: 100px;\n    z-index: 10;\n    */\n    top: 100px;\n    right: 24px;\n    position: absolute;\n    border-radius: 30px 0px 30px 30px;\n    \n}\n.otherUserPosition{\n    border-radius: 30px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Profil                                                                                                                                                                                                                                                                                    {{user.fullName}}                                                    Bearbeiten                                                                        {{user.status}}                                                                                E-Mail-Adresse                                                    {{user.mail}}                                                                                                Nachricht                                                                                                                                            Vollständiger Name                                                                                                                                            E-Mail-Adresse                                                                                                                    Achtung: Wenn Sie Ihre E-Mail-Adresse ändern, müssen Sie diese per Mail verifizieren.                        Sie werden ausgeloggt und können sich nach Bestätigung mit ihrere neuen E-Mail Adresse anmelden.                                                                        Abbrechen                    Speichern                                        '\n    var COMPONENTS = [{'name': 'ActionHandlerComponent', 'selector': 'app-action-handler'},{'name': 'AddChannelDialogComponent', 'selector': 'app-add-channel-dialog'},{'name': 'AddreactionComponent', 'selector': 'app-addreaction'},{'name': 'AddUserDialogComponent', 'selector': 'app-add-user-dialog'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarChooseComponent', 'selector': 'app-avatar-choose'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'ChatComponent', 'selector': 'app-chat'},{'name': 'ChatViewComponent', 'selector': 'app-chat-view'},{'name': 'DateLineComponent', 'selector': 'app-date-line'},{'name': 'EditChannelComponent', 'selector': 'app-edit-channel'},{'name': 'EditChannelUsersComponent', 'selector': 'app-edit-channel-users'},{'name': 'EmptyWindowComponent', 'selector': 'app-empty-window'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'IntroComponent', 'selector': 'app-intro'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainscreenComponent', 'selector': 'app-mainscreen'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageCreateComponent', 'selector': 'app-message-create'},{'name': 'MessageEditComponent', 'selector': 'app-message-edit'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ReactionComponent', 'selector': 'app-reaction'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchbarComponent', 'selector': 'app-searchbar'},{'name': 'ShowChannelUsersComponent', 'selector': 'app-show-channel-users'},{'name': 'SidenavComponent', 'selector': 'app-sidenav'},{'name': 'StartscreenComponent', 'selector': 'app-startscreen'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'},{'name': 'UserProfilComponent', 'selector': 'app-user-profil'}];\n    var DIRECTIVES = [{'name': 'IfChangedDirective', 'selector': '[appIfChanged]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserProfilComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserProfileService.html":{"url":"injectables/UserProfileService.html","title":"injectable - UserProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user-profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                closeUserProfil$\n                            \n                            \n                                    Private\n                                closeUserProfilSubject\n                            \n                            \n                                openUserProfil$\n                            \n                            \n                                    Private\n                                openUserProfilSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                openUserProfil\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/user-profile.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-profile.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Triggers Observable to close any userprofil.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfil\n                        \n                    \n                \n            \n            \n                \nopenUserProfil(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-profile.service.ts:22\n                        \n                    \n\n\n            \n                \n                        Triggers Observable to open userprofil for given user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser to be displayed\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        closeUserProfil$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.closeUserProfilSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/services/user-profile.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        closeUserProfilSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/user-profile.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfil$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.openUserProfilSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/services/user-profile.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        openUserProfilSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/user-profile.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { User } from 'src/models/user.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileService {\n\n  private openUserProfilSubject = new Subject(); \n  openUserProfil$ = this.openUserProfilSubject.asObservable(); \n\n  private closeUserProfilSubject = new Subject(); \n  closeUserProfil$ = this.closeUserProfilSubject.asObservable(); \n\n  constructor() { }\n\n  /**\n   * Triggers Observable to open userprofil for given user. \n   * @param user - User to be displayed \n   */\n  openUserProfil(user:User){\n    this.openUserProfilSubject.next(user);\n  }\n\n  /**\n   * Triggers Observable to close any userprofil. \n   */\n  close(){\n    this.closeUserProfilSubject.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserStatusFirebaseService.html":{"url":"injectables/UserStatusFirebaseService.html","title":"injectable - UserStatusFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserStatusFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user-status-firebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                database\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserStatus\n                            \n                            \n                                writeUserStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/user-status-firebase.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserStatus\n                        \n                    \n                \n            \n            \n                \ngetUserStatus(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-status-firebase.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Returns the current user status for a given user id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nunique user id\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Promise - current user status\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeUserStatus\n                        \n                    \n                \n            \n            \n                \nwriteUserStatus(userId: string, status: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user-status-firebase.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Creates or updates user status and set it offline on disconnect.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nunique user id\n\n\n                                            \n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nstatus of user - e.g. \"online\", \"offline\".\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Database\n\n                    \n                \n                \n                    \n                        Default value : inject(Database)\n                    \n                \n                    \n                        \n                                Defined in src/services/user-status-firebase.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit, inject } from '@angular/core';\nimport { Database, get, onDisconnect, ref, set } from '@angular/fire/database';\nimport { Timestamp } from 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStatusFirebaseService {\n\n  private database: Database = inject(Database);\n\n  constructor() { }\n\n  /**\n   * Creates or updates user status and set it offline on disconnect. \n   * @param userId - unique user id\n   * @param status - status of user - e.g. \"online\", \"offline\". \n   */\n  writeUserStatus(userId:string, status:string) {\n    const userStatusDatabaseRef = ref(this.database, 'userStatus/' + userId);\n    set(userStatusDatabaseRef, {\n      \"status\": status\n    }).then(() => {\n      onDisconnect(userStatusDatabaseRef).set({\n        \"status\": \"offline\"\n      });\n    });\n  }\n\n  /**\n   * Returns the current user status for a given user id. \n   * @param userId - unique user id\n   * @returns Promise - current user status\n   */\n  getUserStatus(userId:string) {\n    const userStatusDatabaseRef = ref(this.database, 'userStatus/' + userId);\n    return get(userStatusDatabaseRef).then((snapshot) => {\n      if (snapshot.exists()) {\n        const status = snapshot.val().status;\n        return status\n      } else {\n        return \"Status not available\"; // Or handle the absence of status as needed\n      }\n    }).catch((error) => {\n      console.error(\"Error getting user status:\", error);\n      return \"Error fetching status\";\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WindowSizeService.html":{"url":"injectables/WindowSizeService.html","title":"injectable - WindowSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WindowSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/window-size.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                windowWidth$\n                            \n                            \n                                    Private\n                                windowWidthSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setWindowSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/window-size.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/window-size.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setWindowSize\n                        \n                    \n                \n            \n            \n                \nsetWindowSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/window-size.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        windowWidth$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.windowWidthSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/services/window-size.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        windowWidthSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/services/window-size.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowSizeService implements OnInit{\n\n  private windowWidthSubject = new Subject();\n  windowWidth$ = this.windowWidthSubject.asObservable();\n\n  constructor() {\n    this.windowWidthSubject.next(window.innerWidth);\n    window.addEventListener('resize', () => {\n      this.windowWidthSubject.next(window.innerWidth);\n    });\n  }\n\n  ngOnInit(){\n    this.windowWidthSubject.next(window.innerWidth);\n  }\n\n  setWindowSize(){\n    this.windowWidthSubject.next(window.innerWidth);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/action-handler/action-handler.component.ts\n            \n            component\n            ActionHandlerComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/directives/if-changed.directive.ts\n            \n            directive\n            IfChangedDirective\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/mainscreen/channel/add-channel-dialog/add-channel-dialog.component.ts\n            \n            component\n            AddChannelDialogComponent\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                src/app/mainscreen/channel/add-user-dialog/add-user-dialog.component.ts\n            \n            component\n            AddUserDialogComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/mainscreen/channel/channel.component.ts\n            \n            component\n            ChannelComponent\n            \n                39 %\n                (11/28)\n            \n        \n        \n            \n                \n                src/app/mainscreen/channel/edit-channel-users/edit-channel-users.component.ts\n            \n            component\n            EditChannelUsersComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/mainscreen/channel/edit-channel/edit-channel.component.ts\n            \n            component\n            EditChannelComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/mainscreen/channel/show-channel-users/show-channel-users.component.ts\n            \n            component\n            ShowChannelUsersComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/mainscreen/chat/chat.component.ts\n            \n            component\n            ChatComponent\n            \n                21 %\n                (4/19)\n            \n        \n        \n            \n                \n                src/app/mainscreen/empty-window/empty-window.component.ts\n            \n            component\n            EmptyWindowComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mainscreen/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                42 %\n                (8/19)\n            \n        \n        \n            \n                \n                src/app/mainscreen/mainscreen.component.ts\n            \n            component\n            MainscreenComponent\n            \n                22 %\n                (4/18)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/addreaction/addreaction.component.ts\n            \n            component\n            AddreactionComponent\n            \n                18 %\n                (2/11)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/date-line/date-line.component.ts\n            \n            component\n            DateLineComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/message-create/message-create.component.ts\n            \n            component\n            MessageCreateComponent\n            \n                41 %\n                (15/36)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/message-edit/message-edit.component.ts\n            \n            component\n            MessageEditComponent\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                41 %\n                (14/34)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/reaction/reaction.component.ts\n            \n            component\n            ReactionComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/thread/thread.component.ts\n            \n            component\n            ThreadComponent\n            \n                47 %\n                (8/17)\n            \n        \n        \n            \n                \n                src/app/mainscreen/message/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                38 %\n                (7/18)\n            \n        \n        \n            \n                \n                src/app/mainscreen/searchbar/searchbar.component.ts\n            \n            component\n            SearchbarComponent\n            \n                57 %\n                (24/42)\n            \n        \n        \n            \n                \n                src/app/mainscreen/sidenav/chat-view/chat-view.component.ts\n            \n            component\n            ChatViewComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/mainscreen/sidenav/sidenav.component.ts\n            \n            component\n            SidenavComponent\n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                src/app/mainscreen/user-profil/user-profil.component.ts\n            \n            component\n            UserProfilComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                src/app/startscreen/avatar-choose/avatar-choose.component.ts\n            \n            component\n            AvatarChooseComponent\n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                \n                src/app/startscreen/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                25 %\n                (3/12)\n            \n        \n        \n            \n                \n                src/app/startscreen/imprint/imprint.component.ts\n            \n            component\n            ImprintComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/startscreen/intro/intro.component.ts\n            \n            component\n            IntroComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/startscreen/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                28 %\n                (6/21)\n            \n        \n        \n            \n                \n                src/app/startscreen/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/startscreen/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                26 %\n                (5/19)\n            \n        \n        \n            \n                \n                src/app/startscreen/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/startscreen/startscreen.component.ts\n            \n            component\n            StartscreenComponent\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guard/auth-guard.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/answer.class.ts\n            \n            class\n            Answer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/channel.class.ts\n            \n            class\n            Channel\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/chat.class.ts\n            \n            class\n            Chat\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/message.class.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/reaction.class.ts\n            \n            class\n            Reaction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/thread.class.ts\n            \n            class\n            Thread\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/user.class.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/services/active-selection.service.ts\n            \n            injectable\n            ActiveSelectionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/auth-firebase.service.ts\n            \n            injectable\n            AuthFirebaseService\n            \n                68 %\n                (15/22)\n            \n        \n        \n            \n                \n                src/services/channel-firebase.service.ts\n            \n            injectable\n            ChannelFirebaseService\n            \n                12 %\n                (4/33)\n            \n        \n        \n            \n                \n                src/services/chat-firebase.service.ts\n            \n            injectable\n            ChatFirebaseService\n            \n                6 %\n                (2/32)\n            \n        \n        \n            \n                \n                src/services/format.service.ts\n            \n            injectable\n            FormatService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/services/generate-id.service.ts\n            \n            injectable\n            GenerateIdService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/services/if-changed-service.service.ts\n            \n            injectable\n            IfChangedService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/message-firebase.service.ts\n            \n            injectable\n            MessageFirebaseService\n            \n                41 %\n                (7/17)\n            \n        \n        \n            \n                \n                src/services/notification.service.ts\n            \n            injectable\n            NotificationService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/services/storage-firebase.service.ts\n            \n            injectable\n            StorageFirebaseService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/services/thread-firebase.service.ts\n            \n            injectable\n            ThreadFirebaseService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/services/user-firebase.service.ts\n            \n            injectable\n            UserFirebaseService\n            \n                60 %\n                (15/25)\n            \n        \n        \n            \n                \n                src/services/user-profile.service.ts\n            \n            injectable\n            UserProfileService\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/services/user-status-firebase.service.ts\n            \n            injectable\n            UserStatusFirebaseService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/services/window-size.service.ts\n            \n            injectable\n            WindowSizeService\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/cdk : ^16.2.9\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/fire : ^7.6.1\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/material : ^16.2.9\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            angular-mentions : ^1.5.0\n        \n            firebase : ^10.5.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDaBubble\nThis project was generated with Angular CLI version 16.2.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nActionHandlerComponent\n\nActionHandlerComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActionHandlerComponent->AppModule\n\n\n\n\n\nAddChannelDialogComponent\n\nAddChannelDialogComponent\n\nAppModule -->\n\nAddChannelDialogComponent->AppModule\n\n\n\n\n\nAddUserDialogComponent\n\nAddUserDialogComponent\n\nAppModule -->\n\nAddUserDialogComponent->AppModule\n\n\n\n\n\nAddreactionComponent\n\nAddreactionComponent\n\nAppModule -->\n\nAddreactionComponent->AppModule\n\n\n\nAppModule -->\n\nAddreactionComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAvatarChooseComponent\n\nAvatarChooseComponent\n\nAppModule -->\n\nAvatarChooseComponent->AppModule\n\n\n\n\n\nChannelComponent\n\nChannelComponent\n\nAppModule -->\n\nChannelComponent->AppModule\n\n\n\n\n\nChatComponent\n\nChatComponent\n\nAppModule -->\n\nChatComponent->AppModule\n\n\n\n\n\nChatViewComponent\n\nChatViewComponent\n\nAppModule -->\n\nChatViewComponent->AppModule\n\n\n\n\n\nDateLineComponent\n\nDateLineComponent\n\nAppModule -->\n\nDateLineComponent->AppModule\n\n\n\n\n\nEditChannelComponent\n\nEditChannelComponent\n\nAppModule -->\n\nEditChannelComponent->AppModule\n\n\n\n\n\nEditChannelUsersComponent\n\nEditChannelUsersComponent\n\nAppModule -->\n\nEditChannelUsersComponent->AppModule\n\n\n\n\n\nEmptyWindowComponent\n\nEmptyWindowComponent\n\nAppModule -->\n\nEmptyWindowComponent->AppModule\n\n\n\n\n\nForgotPasswordComponent\n\nForgotPasswordComponent\n\nAppModule -->\n\nForgotPasswordComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nIfChangedDirective\n\nIfChangedDirective\n\nAppModule -->\n\nIfChangedDirective->AppModule\n\n\n\n\n\nImprintComponent\n\nImprintComponent\n\nAppModule -->\n\nImprintComponent->AppModule\n\n\n\n\n\nIntroComponent\n\nIntroComponent\n\nAppModule -->\n\nIntroComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMainscreenComponent\n\nMainscreenComponent\n\nAppModule -->\n\nMainscreenComponent->AppModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nAppModule -->\n\nMessageComponent->AppModule\n\n\n\n\n\nMessageCreateComponent\n\nMessageCreateComponent\n\nAppModule -->\n\nMessageCreateComponent->AppModule\n\n\n\n\n\nMessageEditComponent\n\nMessageEditComponent\n\nAppModule -->\n\nMessageEditComponent->AppModule\n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nAppModule -->\n\nPrivacyPolicyComponent->AppModule\n\n\n\n\n\nReactionComponent\n\nReactionComponent\n\nAppModule -->\n\nReactionComponent->AppModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAppModule -->\n\nRegisterComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nAppModule -->\n\nSearchbarComponent->AppModule\n\n\n\n\n\nShowChannelUsersComponent\n\nShowChannelUsersComponent\n\nAppModule -->\n\nShowChannelUsersComponent->AppModule\n\n\n\n\n\nSidenavComponent\n\nSidenavComponent\n\nAppModule -->\n\nSidenavComponent->AppModule\n\n\n\n\n\nStartscreenComponent\n\nStartscreenComponent\n\nAppModule -->\n\nStartscreenComponent->AppModule\n\n\n\n\n\nThreadComponent\n\nThreadComponent\n\nAppModule -->\n\nThreadComponent->AppModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nAppModule -->\n\nToolbarComponent->AppModule\n\n\n\n\n\nUserProfilComponent\n\nUserProfilComponent\n\nAppModule -->\n\nUserProfilComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n getAuth()) -->\n\nprovideAuth(() => getAuth())\n\nprovideAuth(() => getAuth())\n\n getAuth())->AppModule -->\n\nprovideAuth(() => getAuth())->AppModule\n\n\n\n getDatabase()) -->\n\nprovideDatabase(() => getDatabase())\n\nprovideDatabase(() => getDatabase())\n\n getDatabase())->AppModule -->\n\nprovideDatabase(() => getDatabase())->AppModule\n\n\n\n initializeApp(environment -->\n\nprovideFirebaseApp(() => initializeApp(environment\n\nprovideFirebaseApp(() => initializeApp(environment\n\n initializeApp(environment->AppModule -->\n\nprovideFirebaseApp(() => initializeApp(environment->AppModule\n\n\n\n getFirestore()) -->\n\nprovideFirestore(() => getFirestore())\n\nprovideFirestore(() => getFirestore())\n\n getFirestore())->AppModule -->\n\nprovideFirestore(() => getFirestore())->AppModule\n\n\n\n getStorage()) -->\n\nprovideStorage(() => getStorage())\n\nprovideStorage(() => getStorage())\n\n getStorage())->AppModule -->\n\nprovideStorage(() => getStorage())->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    33 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            authGuard   (src/.../auth-guard.guard.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/guard/auth-guard.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  \n  const authService = inject(AuthFirebaseService);\n  const router = inject(Router); \n  if(authService.isLoggedIn()){\n    return true; \n  }\n  else{\n    router.navigate(['']); \n    return false;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  firebase: {\n    projectId: 'dabubble-aa8ad',\n    appId: '1:73912220171:web:0e604f1dd6f6f3f304e50e',\n    storageBucket: 'dabubble-aa8ad.appspot.com',\n    apiKey: 'AIzaSyD1r-PAOZNv13HuFqPGEjhc2l-oKzznAlI',\n    authDomain: 'dabubble-aa8ad.firebaseapp.com',\n    messagingSenderId: '73912220171',\n    databaseURL: \"https://dabubble-aa8ad-default-rtdb.europe-west1.firebasedatabase.app\"\n  },\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
